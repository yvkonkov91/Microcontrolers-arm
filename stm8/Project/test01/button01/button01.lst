                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Mon Apr 16 20:45:43 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module button01
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 ;--------------------------------------------------------
                                     14 ; ram data
                                     15 ;--------------------------------------------------------
                                     16 	.area DATA
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area INITIALIZED
                                     21 ;--------------------------------------------------------
                                     22 ; Stack segment in internal ram 
                                     23 ;--------------------------------------------------------
                                     24 	.area	SSEG
      000000                         25 __start__stack:
      000000                         26 	.ds	1
                                     27 
                                     28 ;--------------------------------------------------------
                                     29 ; absolute external ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DABS (ABS)
                                     32 ;--------------------------------------------------------
                                     33 ; interrupt vector 
                                     34 ;--------------------------------------------------------
                                     35 	.area HOME
      000000                         36 __interrupt_vect:
      000000 82v00u00u00             37 	int s_GSINIT ;reset
      000004 82 00 00 00             38 	int 0x0000 ;trap
      000008 82 00 00 00             39 	int 0x0000 ;int0
      00000C 82 00 00 00             40 	int 0x0000 ;int1
      000010 82 00 00 00             41 	int 0x0000 ;int2
      000014 82 00 00 00             42 	int 0x0000 ;int3
      000018 82 00 00 00             43 	int 0x0000 ;int4
      00001C 82 00 00 00             44 	int 0x0000 ;int5
      000020 82 00 00 00             45 	int 0x0000 ;int6
      000024 82 00 00 00             46 	int 0x0000 ;int7
      000028 82 00 00 00             47 	int 0x0000 ;int8
      00002C 82 00 00 00             48 	int 0x0000 ;int9
      000030 82 00 00 00             49 	int 0x0000 ;int10
      000034 82 00 00 00             50 	int 0x0000 ;int11
      000038 82 00 00 00             51 	int 0x0000 ;int12
      00003C 82 00 00 00             52 	int 0x0000 ;int13
      000040 82 00 00 00             53 	int 0x0000 ;int14
      000044 82 00 00 00             54 	int 0x0000 ;int15
      000048 82 00 00 00             55 	int 0x0000 ;int16
      00004C 82 00 00 00             56 	int 0x0000 ;int17
      000050 82 00 00 00             57 	int 0x0000 ;int18
      000054 82 00 00 00             58 	int 0x0000 ;int19
      000058 82 00 00 00             59 	int 0x0000 ;int20
      00005C 82 00 00 00             60 	int 0x0000 ;int21
      000060 82 00 00 00             61 	int 0x0000 ;int22
      000064 82 00 00 00             62 	int 0x0000 ;int23
      000068 82 00 00 00             63 	int 0x0000 ;int24
      00006C 82 00 00 00             64 	int 0x0000 ;int25
      000070 82 00 00 00             65 	int 0x0000 ;int26
      000074 82 00 00 00             66 	int 0x0000 ;int27
      000078 82 00 00 00             67 	int 0x0000 ;int28
      00007C 82 00 00 00             68 	int 0x0000 ;int29
                                     69 ;--------------------------------------------------------
                                     70 ; global & static initialisations
                                     71 ;--------------------------------------------------------
                                     72 	.area HOME
                                     73 	.area GSINIT
                                     74 	.area GSFINAL
                                     75 	.area GSINIT
      000000                         76 __sdcc_gs_init_startup:
      000000                         77 __sdcc_init_data:
                                     78 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]   79 	ldw x, #l_DATA
      000003 27 07            [ 1]   80 	jreq	00002$
      000005                         81 00001$:
      000005 72 4FuFFuFF      [ 1]   82 	clr (s_DATA - 1, x)
      000009 5A               [ 2]   83 	decw x
      00000A 26 F9            [ 1]   84 	jrne	00001$
      00000C                         85 00002$:
      00000C AEr00r00         [ 2]   86 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]   87 	jreq	00004$
      000011                         88 00003$:
      000011 D6uFFuFF         [ 1]   89 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]   90 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]   91 	decw	x
      000018 26 F7            [ 1]   92 	jrne	00003$
      00001A                         93 00004$:
                                     94 ; stm8_genXINIT() end
                                     95 	.area GSFINAL
      000000 CCr00r80         [ 2]   96 	jp	__sdcc_program_startup
                                     97 ;--------------------------------------------------------
                                     98 ; Home
                                     99 ;--------------------------------------------------------
                                    100 	.area HOME
                                    101 	.area HOME
      000080                        102 __sdcc_program_startup:
      000080 CCr00r00         [ 2]  103 	jp	_main
                                    104 ;	return from main will return to caller
                                    105 ;--------------------------------------------------------
                                    106 ; code
                                    107 ;--------------------------------------------------------
                                    108 	.area CODE
                                    109 ;	./button01.c: 21: int main( void )    //установка портов и пинов
                                    110 ;	-----------------------------------------
                                    111 ;	 function main
                                    112 ;	-----------------------------------------
      000000                        113 _main:
                                    114 ;	./button01.c: 23: GPIOB->DDR |= 0x20;   //GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;	//направление данных порта out-0; input-1
      000000 AE 50 07         [ 2]  115 	ldw	x, #0x5007
      000003 F6               [ 1]  116 	ld	a, (x)
      000004 AA 20            [ 1]  117 	or	a, #0x20
      000006 F7               [ 1]  118 	ld	(x), a
                                    119 ;	./button01.c: 24: GPIOB->CR1 |= 0x20;   //GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;	//установка подтягивающего резистора open-drain=0; push-pull=1
      000007 AE 50 08         [ 2]  120 	ldw	x, #0x5008
      00000A F6               [ 1]  121 	ld	a, (x)
      00000B AA 20            [ 1]  122 	or	a, #0x20
      00000D F7               [ 1]  123 	ld	(x), a
                                    124 ;	./button01.c: 27: GPIOD->DDR |= 0x00;
      00000E AE 50 11         [ 2]  125 	ldw	x, #0x5011
      000011 F6               [ 1]  126 	ld	a, (x)
      000012 AE 50 11         [ 2]  127 	ldw	x, #0x5011
      000015 F7               [ 1]  128 	ld	(x), a
                                    129 ;	./button01.c: 28: GPIOD->CR1 |= 0x10;
      000016 AE 50 12         [ 2]  130 	ldw	x, #0x5012
      000019 F6               [ 1]  131 	ld	a, (x)
      00001A AA 10            [ 1]  132 	or	a, #0x10
      00001C F7               [ 1]  133 	ld	(x), a
                                    134 ;	./button01.c: 32: while(1){
      00001D                        135 00104$:
                                    136 ;	./button01.c: 33: if (GPIOD->IDR & 0x10) // проверяем нажатие кнопки
      00001D AE 50 10         [ 2]  137 	ldw	x, #0x5010
      000020 F6               [ 1]  138 	ld	a, (x)
      000021 A5 10            [ 1]  139 	bcp	a, #0x10
      000023 27 F8            [ 1]  140 	jreq	00104$
                                    141 ;	./button01.c: 36: GPIOB->ODR ^= 0x20;
      000025 AE 50 05         [ 2]  142 	ldw	x, #0x5005
      000028 F6               [ 1]  143 	ld	a, (x)
      000029 A8 20            [ 1]  144 	xor	a, #0x20
      00002B F7               [ 1]  145 	ld	(x), a
      00002C 20 EF            [ 2]  146 	jra	00104$
      00002E 81               [ 4]  147 	ret
                                    148 	.area CODE
                                    149 	.area INITIALIZER
                                    150 	.area CABS (ABS)
