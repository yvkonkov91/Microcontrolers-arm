                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Sun Mar 25 01:16:34 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module button_leds
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _running
                                     14 	.globl _PIN
                                     15 	.globl _delay
                                     16 	.globl _bs
                                     17 	.globl _msb
                                     18 	.globl _ms
                                     19 	.globl _n
                                     20 	.globl _i
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DATA
      000001                         25 _i::
      000001                         26 	.ds 4
      000005                         27 _n::
      000005                         28 	.ds 1
                                     29 ;--------------------------------------------------------
                                     30 ; ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area INITIALIZED
      000006                         33 _ms::
      000006                         34 	.ds 4
      00000A                         35 _msb::
      00000A                         36 	.ds 4
      00000E                         37 _bs::
      00000E                         38 	.ds 1
                                     39 ;--------------------------------------------------------
                                     40 ; Stack segment in internal ram 
                                     41 ;--------------------------------------------------------
                                     42 	.area	SSEG
      00000F                         43 __start__stack:
      00000F                         44 	.ds	1
                                     45 
                                     46 ;--------------------------------------------------------
                                     47 ; absolute external ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area DABS (ABS)
                                     50 ;--------------------------------------------------------
                                     51 ; interrupt vector 
                                     52 ;--------------------------------------------------------
                                     53 	.area HOME
      008000                         54 __interrupt_vect:
      008000 82 00 80 83             55 	int s_GSINIT ;reset
      008004 82 00 00 00             56 	int 0x0000 ;trap
      008008 82 00 00 00             57 	int 0x0000 ;int0
      00800C 82 00 00 00             58 	int 0x0000 ;int1
      008010 82 00 00 00             59 	int 0x0000 ;int2
      008014 82 00 00 00             60 	int 0x0000 ;int3
      008018 82 00 00 00             61 	int 0x0000 ;int4
      00801C 82 00 00 00             62 	int 0x0000 ;int5
      008020 82 00 00 00             63 	int 0x0000 ;int6
      008024 82 00 00 00             64 	int 0x0000 ;int7
      008028 82 00 00 00             65 	int 0x0000 ;int8
      00802C 82 00 00 00             66 	int 0x0000 ;int9
      008030 82 00 00 00             67 	int 0x0000 ;int10
      008034 82 00 00 00             68 	int 0x0000 ;int11
      008038 82 00 00 00             69 	int 0x0000 ;int12
      00803C 82 00 00 00             70 	int 0x0000 ;int13
      008040 82 00 00 00             71 	int 0x0000 ;int14
      008044 82 00 00 00             72 	int 0x0000 ;int15
      008048 82 00 00 00             73 	int 0x0000 ;int16
      00804C 82 00 00 00             74 	int 0x0000 ;int17
      008050 82 00 00 00             75 	int 0x0000 ;int18
      008054 82 00 00 00             76 	int 0x0000 ;int19
      008058 82 00 00 00             77 	int 0x0000 ;int20
      00805C 82 00 00 00             78 	int 0x0000 ;int21
      008060 82 00 00 00             79 	int 0x0000 ;int22
      008064 82 00 00 00             80 	int 0x0000 ;int23
      008068 82 00 00 00             81 	int 0x0000 ;int24
      00806C 82 00 00 00             82 	int 0x0000 ;int25
      008070 82 00 00 00             83 	int 0x0000 ;int26
      008074 82 00 00 00             84 	int 0x0000 ;int27
      008078 82 00 00 00             85 	int 0x0000 ;int28
      00807C 82 00 00 00             86 	int 0x0000 ;int29
                                     87 ;--------------------------------------------------------
                                     88 ; global & static initialisations
                                     89 ;--------------------------------------------------------
                                     90 	.area HOME
                                     91 	.area GSINIT
                                     92 	.area GSFINAL
                                     93 	.area GSINIT
      008083                         94 __sdcc_gs_init_startup:
      008083                         95 __sdcc_init_data:
                                     96 ; stm8_genXINIT() start
      008083 AE 00 05         [ 2]   97 	ldw x, #l_DATA
      008086 27 07            [ 1]   98 	jreq	00002$
      008088                         99 00001$:
      008088 72 4F 00 00      [ 1]  100 	clr (s_DATA - 1, x)
      00808C 5A               [ 2]  101 	decw x
      00808D 26 F9            [ 1]  102 	jrne	00001$
      00808F                        103 00002$:
      00808F AE 00 09         [ 2]  104 	ldw	x, #l_INITIALIZER
      008092 27 09            [ 1]  105 	jreq	00004$
      008094                        106 00003$:
      008094 D6 82 B0         [ 1]  107 	ld	a, (s_INITIALIZER - 1, x)
      008097 D7 00 05         [ 1]  108 	ld	(s_INITIALIZED - 1, x), a
      00809A 5A               [ 2]  109 	decw	x
      00809B 26 F7            [ 1]  110 	jrne	00003$
      00809D                        111 00004$:
                                    112 ; stm8_genXINIT() end
                                    113 	.area GSFINAL
      00809D CC 80 80         [ 2]  114 	jp	__sdcc_program_startup
                                    115 ;--------------------------------------------------------
                                    116 ; Home
                                    117 ;--------------------------------------------------------
                                    118 	.area HOME
                                    119 	.area HOME
      008080                        120 __sdcc_program_startup:
      008080 CC 82 A8         [ 2]  121 	jp	_main
                                    122 ;	return from main will return to caller
                                    123 ;--------------------------------------------------------
                                    124 ; code
                                    125 ;--------------------------------------------------------
                                    126 	.area CODE
                                    127 ;	./button_leds.c: 5: uint32_t delay(uint32_t t)  //объявление статической функции часла типа long переменной t для реализации работы функции delay
                                    128 ;	-----------------------------------------
                                    129 ;	 function delay
                                    130 ;	-----------------------------------------
      0080A0                        131 _delay:
      0080A0 52 04            [ 2]  132 	sub	sp, #4
                                    133 ;	./button_leds.c: 8: while(t--);
      0080A2 90 AE 01 F4      [ 2]  134 	ldw	y, #0x01f4
      0080A6 5F               [ 1]  135 	clrw	x
      0080A7                        136 00101$:
      0080A7 17 03            [ 2]  137 	ldw	(0x03, sp), y
      0080A9 1F 01            [ 2]  138 	ldw	(0x01, sp), x
      0080AB 72 A2 00 01      [ 2]  139 	subw	y, #0x0001
      0080AF 9F               [ 1]  140 	ld	a, xl
      0080B0 A2 00            [ 1]  141 	sbc	a, #0x00
      0080B2 02               [ 1]  142 	rlwa	x
      0080B3 A2 00            [ 1]  143 	sbc	a, #0x00
      0080B5 95               [ 1]  144 	ld	xh, a
      0080B6 0D 04            [ 1]  145 	tnz	(0x04, sp)
      0080B8 26 ED            [ 1]  146 	jrne	00101$
      0080BA 0D 03            [ 1]  147 	tnz	(0x03, sp)
      0080BC 26 E9            [ 1]  148 	jrne	00101$
      0080BE 0D 02            [ 1]  149 	tnz	(0x02, sp)
      0080C0 26 E5            [ 1]  150 	jrne	00101$
      0080C2 0D 01            [ 1]  151 	tnz	(0x01, sp)
      0080C4 26 E1            [ 1]  152 	jrne	00101$
                                    153 ;	./button_leds.c: 9: return t;
      0080C6 51               [ 1]  154 	exgw	x, y
      0080C7 5B 04            [ 2]  155 	addw	sp, #4
      0080C9 81               [ 4]  156 	ret
                                    157 ;	./button_leds.c: 27: void PIN()
                                    158 ;	-----------------------------------------
                                    159 ;	 function PIN
                                    160 ;	-----------------------------------------
      0080CA                        161 _PIN:
                                    162 ;	./button_leds.c: 29: GPIOC->DDR |= 0xf8;   	//направление данных порта out-0; input-1
      0080CA AE 50 0C         [ 2]  163 	ldw	x, #0x500c
      0080CD F6               [ 1]  164 	ld	a, (x)
      0080CE AA F8            [ 1]  165 	or	a, #0xf8
      0080D0 F7               [ 1]  166 	ld	(x), a
                                    167 ;	./button_leds.c: 30: GPIOC->CR1 |= 0xf8;   	//установка подтягивающего резистора open-drain=0; push-pull=1
      0080D1 AE 50 0D         [ 2]  168 	ldw	x, #0x500d
      0080D4 F6               [ 1]  169 	ld	a, (x)
      0080D5 AA F8            [ 1]  170 	or	a, #0xf8
      0080D7 F7               [ 1]  171 	ld	(x), a
                                    172 ;	./button_leds.c: 31: GPIOC->ODR |= 0xf8;   	//установка значения бита 0/1
      0080D8 AE 50 0A         [ 2]  173 	ldw	x, #0x500a
      0080DB F6               [ 1]  174 	ld	a, (x)
      0080DC AA F8            [ 1]  175 	or	a, #0xf8
      0080DE F7               [ 1]  176 	ld	(x), a
                                    177 ;	./button_leds.c: 33: GPIOD->DDR |= 0x00;
      0080DF AE 50 11         [ 2]  178 	ldw	x, #0x5011
      0080E2 F6               [ 1]  179 	ld	a, (x)
      0080E3 AE 50 11         [ 2]  180 	ldw	x, #0x5011
      0080E6 F7               [ 1]  181 	ld	(x), a
                                    182 ;	./button_leds.c: 34: GPIOD->CR1 |= 0x10;
      0080E7 AE 50 12         [ 2]  183 	ldw	x, #0x5012
      0080EA F6               [ 1]  184 	ld	a, (x)
      0080EB AA 10            [ 1]  185 	or	a, #0x10
      0080ED F7               [ 1]  186 	ld	(x), a
                                    187 ;	./button_leds.c: 35: GPIOD->CR2 |= 0x00;
      0080EE AE 50 13         [ 2]  188 	ldw	x, #0x5013
      0080F1 F6               [ 1]  189 	ld	a, (x)
      0080F2 AE 50 13         [ 2]  190 	ldw	x, #0x5013
      0080F5 F7               [ 1]  191 	ld	(x), a
      0080F6 81               [ 4]  192 	ret
                                    193 ;	./button_leds.c: 40: void running()
                                    194 ;	-----------------------------------------
                                    195 ;	 function running
                                    196 ;	-----------------------------------------
      0080F7                        197 _running:
      0080F7 52 0C            [ 2]  198 	sub	sp, #12
                                    199 ;	./button_leds.c: 42: if ((GPIOD->IDR & 0x10) ==0x00 && !bs && (delay(ms)-msb)>50) // проверяем нажатие кнопки
      0080F9 AE 50 10         [ 2]  200 	ldw	x, #0x5010
      0080FC F6               [ 1]  201 	ld	a, (x)
      0080FD A5 10            [ 1]  202 	bcp	a, #0x10
      0080FF 27 03            [ 1]  203 	jreq	00171$
      008101 CC 81 CE         [ 2]  204 	jp	00105$
      008104                        205 00171$:
      008104 72 01 00 0E 03   [ 2]  206 	btjf	_bs+0, #0, 00172$
      008109 CC 81 CE         [ 2]  207 	jp	00105$
      00810C                        208 00172$:
      00810C 3B 00 09         [ 1]  209 	push	_ms+3
      00810F 3B 00 08         [ 1]  210 	push	_ms+2
      008112 3B 00 07         [ 1]  211 	push	_ms+1
      008115 3B 00 06         [ 1]  212 	push	_ms+0
      008118 CD 80 A0         [ 4]  213 	call	_delay
      00811B 5B 04            [ 2]  214 	addw	sp, #4
      00811D 51               [ 1]  215 	exgw	x, y
      00811E 72 B2 00 0C      [ 2]  216 	subw	y, _msb+2
      008122 17 09            [ 2]  217 	ldw	(0x09, sp), y
      008124 9F               [ 1]  218 	ld	a, xl
      008125 C2 00 0B         [ 1]  219 	sbc	a, _msb+1
      008128 6B 08            [ 1]  220 	ld	(0x08, sp), a
      00812A 9E               [ 1]  221 	ld	a, xh
      00812B C2 00 0A         [ 1]  222 	sbc	a, _msb+0
      00812E 6B 07            [ 1]  223 	ld	(0x07, sp), a
      008130 AE 00 32         [ 2]  224 	ldw	x, #0x0032
      008133 13 09            [ 2]  225 	cpw	x, (0x09, sp)
      008135 4F               [ 1]  226 	clr	a
      008136 12 08            [ 1]  227 	sbc	a, (0x08, sp)
      008138 4F               [ 1]  228 	clr	a
      008139 12 07            [ 1]  229 	sbc	a, (0x07, sp)
      00813B 25 03            [ 1]  230 	jrc	00173$
      00813D CC 81 CE         [ 2]  231 	jp	00105$
      008140                        232 00173$:
                                    233 ;	./button_leds.c: 44: bs=1;
      008140 35 01 00 0E      [ 1]  234 	mov	_bs+0, #0x01
                                    235 ;	./button_leds.c: 45: msb=ms;
      008144 90 CE 00 08      [ 2]  236 	ldw	y, _ms+2
      008148 CE 00 06         [ 2]  237 	ldw	x, _ms+0
      00814B 90 CF 00 0C      [ 2]  238 	ldw	_msb+2, y
      00814F CF 00 0A         [ 2]  239 	ldw	_msb+0, x
                                    240 ;	./button_leds.c: 47: GPIOC->ODR ^= 0x08 << n;
      008152 AE 50 0A         [ 2]  241 	ldw	x, #0x500a
      008155 F6               [ 1]  242 	ld	a, (x)
      008156 6B 06            [ 1]  243 	ld	(0x06, sp), a
      008158 A6 08            [ 1]  244 	ld	a, #0x08
      00815A 88               [ 1]  245 	push	a
      00815B C6 00 05         [ 1]  246 	ld	a, _n+0
      00815E 27 05            [ 1]  247 	jreq	00175$
      008160                        248 00174$:
      008160 08 01            [ 1]  249 	sll	(1, sp)
      008162 4A               [ 1]  250 	dec	a
      008163 26 FB            [ 1]  251 	jrne	00174$
      008165                        252 00175$:
      008165 84               [ 1]  253 	pop	a
      008166 18 06            [ 1]  254 	xor	a, (0x06, sp)
      008168 AE 50 0A         [ 2]  255 	ldw	x, #0x500a
      00816B F7               [ 1]  256 	ld	(x), a
                                    257 ;	./button_leds.c: 49: for (i=0;i<=5000;i++);{}
      00816C AE 13 89         [ 2]  258 	ldw	x, #0x1389
      00816F CF 00 03         [ 2]  259 	ldw	_i+2, x
      008172 5F               [ 1]  260 	clrw	x
      008173 CF 00 01         [ 2]  261 	ldw	_i+0, x
      008176                        262 00117$:
      008176 90 CE 00 03      [ 2]  263 	ldw	y, _i+2
      00817A 72 A2 00 01      [ 2]  264 	subw	y, #0x0001
      00817E C6 00 02         [ 1]  265 	ld	a, _i+1
      008181 A2 00            [ 1]  266 	sbc	a, #0x00
      008183 97               [ 1]  267 	ld	xl, a
      008184 C6 00 01         [ 1]  268 	ld	a, _i+0
      008187 A2 00            [ 1]  269 	sbc	a, #0x00
      008189 95               [ 1]  270 	ld	xh, a
      00818A 90 CF 00 03      [ 2]  271 	ldw	_i+2, y
      00818E CF 00 01         [ 2]  272 	ldw	_i+0, x
      008191 CE 00 03         [ 2]  273 	ldw	x, _i+2
      008194 26 E0            [ 1]  274 	jrne	00117$
      008196 CE 00 01         [ 2]  275 	ldw	x, _i+0
      008199 26 DB            [ 1]  276 	jrne	00117$
      00819B AE 13 89         [ 2]  277 	ldw	x, #0x1389
      00819E CF 00 03         [ 2]  278 	ldw	_i+2, x
      0081A1 5F               [ 1]  279 	clrw	x
      0081A2 CF 00 01         [ 2]  280 	ldw	_i+0, x
                                    281 ;	./button_leds.c: 52: GPIOC->ODR |= 0x08 << n;
      0081A5 AE 50 0A         [ 2]  282 	ldw	x, #0x500a
      0081A8 F6               [ 1]  283 	ld	a, (x)
      0081A9 6B 05            [ 1]  284 	ld	(0x05, sp), a
      0081AB A6 08            [ 1]  285 	ld	a, #0x08
      0081AD 88               [ 1]  286 	push	a
      0081AE C6 00 05         [ 1]  287 	ld	a, _n+0
      0081B1 27 05            [ 1]  288 	jreq	00179$
      0081B3                        289 00178$:
      0081B3 08 01            [ 1]  290 	sll	(1, sp)
      0081B5 4A               [ 1]  291 	dec	a
      0081B6 26 FB            [ 1]  292 	jrne	00178$
      0081B8                        293 00179$:
      0081B8 84               [ 1]  294 	pop	a
      0081B9 1A 05            [ 1]  295 	or	a, (0x05, sp)
      0081BB AE 50 0A         [ 2]  296 	ldw	x, #0x500a
      0081BE F7               [ 1]  297 	ld	(x), a
                                    298 ;	./button_leds.c: 54: n++;
      0081BF C6 00 05         [ 1]  299 	ld	a, _n+0
      0081C2 4C               [ 1]  300 	inc	a
                                    301 ;	./button_leds.c: 55: if ( n>=5 )
      0081C3 C7 00 05         [ 1]  302 	ld	_n+0, a
      0081C6 A1 05            [ 1]  303 	cp	a, #0x05
      0081C8 2F 04            [ 1]  304 	jrslt	00105$
                                    305 ;	./button_leds.c: 57: n=0;
      0081CA 72 5F 00 05      [ 1]  306 	clr	_n+0
      0081CE                        307 00105$:
                                    308 ;	./button_leds.c: 62: if ((GPIOD->IDR & 0x10) ==0x10 && bs && (delay(ms)-msb)>50) // фиксируем отпускание  нажатие кнопки
      0081CE AE 50 10         [ 2]  309 	ldw	x, #0x5010
      0081D1 F6               [ 1]  310 	ld	a, (x)
      0081D2 A4 10            [ 1]  311 	and	a, #0x10
      0081D4 A1 10            [ 1]  312 	cp	a, #0x10
      0081D6 27 03            [ 1]  313 	jreq	00183$
      0081D8 CC 82 A5         [ 2]  314 	jp	00121$
      0081DB                        315 00183$:
      0081DB 72 00 00 0E 03   [ 2]  316 	btjt	_bs+0, #0, 00184$
      0081E0 CC 82 A5         [ 2]  317 	jp	00121$
      0081E3                        318 00184$:
      0081E3 3B 00 09         [ 1]  319 	push	_ms+3
      0081E6 3B 00 08         [ 1]  320 	push	_ms+2
      0081E9 3B 00 07         [ 1]  321 	push	_ms+1
      0081EC 3B 00 06         [ 1]  322 	push	_ms+0
      0081EF CD 80 A0         [ 4]  323 	call	_delay
      0081F2 5B 04            [ 2]  324 	addw	sp, #4
      0081F4 51               [ 1]  325 	exgw	x, y
      0081F5 72 B2 00 0C      [ 2]  326 	subw	y, _msb+2
      0081F9 17 03            [ 2]  327 	ldw	(0x03, sp), y
      0081FB 9F               [ 1]  328 	ld	a, xl
      0081FC C2 00 0B         [ 1]  329 	sbc	a, _msb+1
      0081FF 6B 02            [ 1]  330 	ld	(0x02, sp), a
      008201 9E               [ 1]  331 	ld	a, xh
      008202 C2 00 0A         [ 1]  332 	sbc	a, _msb+0
      008205 6B 01            [ 1]  333 	ld	(0x01, sp), a
      008207 AE 00 32         [ 2]  334 	ldw	x, #0x0032
      00820A 13 03            [ 2]  335 	cpw	x, (0x03, sp)
      00820C 4F               [ 1]  336 	clr	a
      00820D 12 02            [ 1]  337 	sbc	a, (0x02, sp)
      00820F 4F               [ 1]  338 	clr	a
      008210 12 01            [ 1]  339 	sbc	a, (0x01, sp)
      008212 25 03            [ 1]  340 	jrc	00185$
      008214 CC 82 A5         [ 2]  341 	jp	00121$
      008217                        342 00185$:
                                    343 ;	./button_leds.c: 64: bs=0;
      008217 72 5F 00 0E      [ 1]  344 	clr	_bs+0
                                    345 ;	./button_leds.c: 65: msb=ms;
      00821B 90 CE 00 08      [ 2]  346 	ldw	y, _ms+2
      00821F CE 00 06         [ 2]  347 	ldw	x, _ms+0
      008222 90 CF 00 0C      [ 2]  348 	ldw	_msb+2, y
      008226 CF 00 0A         [ 2]  349 	ldw	_msb+0, x
                                    350 ;	./button_leds.c: 67: GPIOC->ODR ^= 0x80 >> n;
      008229 AE 50 0A         [ 2]  351 	ldw	x, #0x500a
      00822C F6               [ 1]  352 	ld	a, (x)
      00822D 6B 0C            [ 1]  353 	ld	(0x0c, sp), a
      00822F A6 80            [ 1]  354 	ld	a, #0x80
      008231 88               [ 1]  355 	push	a
      008232 C6 00 05         [ 1]  356 	ld	a, _n+0
      008235 27 05            [ 1]  357 	jreq	00187$
      008237                        358 00186$:
      008237 04 01            [ 1]  359 	srl	(1, sp)
      008239 4A               [ 1]  360 	dec	a
      00823A 26 FB            [ 1]  361 	jrne	00186$
      00823C                        362 00187$:
      00823C 84               [ 1]  363 	pop	a
      00823D 18 0C            [ 1]  364 	xor	a, (0x0c, sp)
      00823F AE 50 0A         [ 2]  365 	ldw	x, #0x500a
      008242 F7               [ 1]  366 	ld	(x), a
                                    367 ;	./button_leds.c: 69: for (i=0;i<=5000;i++);{}
      008243 AE 13 89         [ 2]  368 	ldw	x, #0x1389
      008246 CF 00 03         [ 2]  369 	ldw	_i+2, x
      008249 5F               [ 1]  370 	clrw	x
      00824A CF 00 01         [ 2]  371 	ldw	_i+0, x
      00824D                        372 00120$:
      00824D 90 CE 00 03      [ 2]  373 	ldw	y, _i+2
      008251 72 A2 00 01      [ 2]  374 	subw	y, #0x0001
      008255 C6 00 02         [ 1]  375 	ld	a, _i+1
      008258 A2 00            [ 1]  376 	sbc	a, #0x00
      00825A 97               [ 1]  377 	ld	xl, a
      00825B C6 00 01         [ 1]  378 	ld	a, _i+0
      00825E A2 00            [ 1]  379 	sbc	a, #0x00
      008260 95               [ 1]  380 	ld	xh, a
      008261 90 CF 00 03      [ 2]  381 	ldw	_i+2, y
      008265 CF 00 01         [ 2]  382 	ldw	_i+0, x
      008268 CE 00 03         [ 2]  383 	ldw	x, _i+2
      00826B 26 E0            [ 1]  384 	jrne	00120$
      00826D CE 00 01         [ 2]  385 	ldw	x, _i+0
      008270 26 DB            [ 1]  386 	jrne	00120$
      008272 AE 13 89         [ 2]  387 	ldw	x, #0x1389
      008275 CF 00 03         [ 2]  388 	ldw	_i+2, x
      008278 5F               [ 1]  389 	clrw	x
      008279 CF 00 01         [ 2]  390 	ldw	_i+0, x
                                    391 ;	./button_leds.c: 71: GPIOC->ODR |= 0x80 >> n;
      00827C AE 50 0A         [ 2]  392 	ldw	x, #0x500a
      00827F F6               [ 1]  393 	ld	a, (x)
      008280 95               [ 1]  394 	ld	xh, a
      008281 A6 80            [ 1]  395 	ld	a, #0x80
      008283 6B 0B            [ 1]  396 	ld	(0x0b, sp), a
      008285 C6 00 05         [ 1]  397 	ld	a, _n+0
      008288 27 05            [ 1]  398 	jreq	00191$
      00828A                        399 00190$:
      00828A 04 0B            [ 1]  400 	srl	(0x0b, sp)
      00828C 4A               [ 1]  401 	dec	a
      00828D 26 FB            [ 1]  402 	jrne	00190$
      00828F                        403 00191$:
      00828F 9E               [ 1]  404 	ld	a, xh
      008290 1A 0B            [ 1]  405 	or	a, (0x0b, sp)
      008292 AE 50 0A         [ 2]  406 	ldw	x, #0x500a
      008295 F7               [ 1]  407 	ld	(x), a
                                    408 ;	./button_leds.c: 74: n++;
      008296 C6 00 05         [ 1]  409 	ld	a, _n+0
      008299 4C               [ 1]  410 	inc	a
                                    411 ;	./button_leds.c: 76: if ( n>=5 )
      00829A C7 00 05         [ 1]  412 	ld	_n+0, a
      00829D A1 05            [ 1]  413 	cp	a, #0x05
      00829F 2F 04            [ 1]  414 	jrslt	00121$
                                    415 ;	./button_leds.c: 78: n=0;
      0082A1 72 5F 00 05      [ 1]  416 	clr	_n+0
      0082A5                        417 00121$:
      0082A5 5B 0C            [ 2]  418 	addw	sp, #12
      0082A7 81               [ 4]  419 	ret
                                    420 ;	./button_leds.c: 85: int main(void)
                                    421 ;	-----------------------------------------
                                    422 ;	 function main
                                    423 ;	-----------------------------------------
      0082A8                        424 _main:
                                    425 ;	./button_leds.c: 87: PIN();
      0082A8 CD 80 CA         [ 4]  426 	call	_PIN
                                    427 ;	./button_leds.c: 89: while(1)
      0082AB                        428 00102$:
                                    429 ;	./button_leds.c: 91: running();
      0082AB CD 80 F7         [ 4]  430 	call	_running
      0082AE 20 FB            [ 2]  431 	jra	00102$
      0082B0 81               [ 4]  432 	ret
                                    433 	.area CODE
                                    434 	.area INITIALIZER
      0082B1                        435 __xinit__ms:
      0082B1 00 00 00 00            436 	.byte #0x00,#0x00,#0x00,#0x00	; 0
      0082B5                        437 __xinit__msb:
      0082B5 00 00 00 00            438 	.byte #0x00,#0x00,#0x00,#0x00	; 0
      0082B9                        439 __xinit__bs:
      0082B9 00                     440 	.db #0x00	;  0
                                    441 	.area CABS (ABS)
