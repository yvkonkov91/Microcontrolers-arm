                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Sat Mar 24 20:18:16 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module button_leds
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _running
                                     14 	.globl _button
                                     15 	.globl _PIN
                                     16 	.globl _delay
                                     17 	.globl _bs
                                     18 	.globl _msb
                                     19 	.globl _ms
                                     20 	.globl _n
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area DATA
      000000                         25 _n::
      000000                         26 	.ds 1
                                     27 ;--------------------------------------------------------
                                     28 ; ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area INITIALIZED
      000000                         31 _ms::
      000000                         32 	.ds 4
      000004                         33 _msb::
      000004                         34 	.ds 4
      000008                         35 _bs::
      000008                         36 	.ds 1
                                     37 ;--------------------------------------------------------
                                     38 ; Stack segment in internal ram 
                                     39 ;--------------------------------------------------------
                                     40 	.area	SSEG
      000000                         41 __start__stack:
      000000                         42 	.ds	1
                                     43 
                                     44 ;--------------------------------------------------------
                                     45 ; absolute external ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area DABS (ABS)
                                     48 ;--------------------------------------------------------
                                     49 ; interrupt vector 
                                     50 ;--------------------------------------------------------
                                     51 	.area HOME
      000000                         52 __interrupt_vect:
      000000 82v00u00u00             53 	int s_GSINIT ;reset
      000004 82 00 00 00             54 	int 0x0000 ;trap
      000008 82 00 00 00             55 	int 0x0000 ;int0
      00000C 82 00 00 00             56 	int 0x0000 ;int1
      000010 82 00 00 00             57 	int 0x0000 ;int2
      000014 82 00 00 00             58 	int 0x0000 ;int3
      000018 82 00 00 00             59 	int 0x0000 ;int4
      00001C 82 00 00 00             60 	int 0x0000 ;int5
      000020 82 00 00 00             61 	int 0x0000 ;int6
      000024 82 00 00 00             62 	int 0x0000 ;int7
      000028 82 00 00 00             63 	int 0x0000 ;int8
      00002C 82 00 00 00             64 	int 0x0000 ;int9
      000030 82 00 00 00             65 	int 0x0000 ;int10
      000034 82 00 00 00             66 	int 0x0000 ;int11
      000038 82 00 00 00             67 	int 0x0000 ;int12
      00003C 82 00 00 00             68 	int 0x0000 ;int13
      000040 82 00 00 00             69 	int 0x0000 ;int14
      000044 82 00 00 00             70 	int 0x0000 ;int15
      000048 82 00 00 00             71 	int 0x0000 ;int16
      00004C 82 00 00 00             72 	int 0x0000 ;int17
      000050 82 00 00 00             73 	int 0x0000 ;int18
      000054 82 00 00 00             74 	int 0x0000 ;int19
      000058 82 00 00 00             75 	int 0x0000 ;int20
      00005C 82 00 00 00             76 	int 0x0000 ;int21
      000060 82 00 00 00             77 	int 0x0000 ;int22
      000064 82 00 00 00             78 	int 0x0000 ;int23
      000068 82 00 00 00             79 	int 0x0000 ;int24
      00006C 82 00 00 00             80 	int 0x0000 ;int25
      000070 82 00 00 00             81 	int 0x0000 ;int26
      000074 82 00 00 00             82 	int 0x0000 ;int27
      000078 82 00 00 00             83 	int 0x0000 ;int28
      00007C 82 00 00 00             84 	int 0x0000 ;int29
                                     85 ;--------------------------------------------------------
                                     86 ; global & static initialisations
                                     87 ;--------------------------------------------------------
                                     88 	.area HOME
                                     89 	.area GSINIT
                                     90 	.area GSFINAL
                                     91 	.area GSINIT
      000000                         92 __sdcc_gs_init_startup:
      000000                         93 __sdcc_init_data:
                                     94 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]   95 	ldw x, #l_DATA
      000003 27 07            [ 1]   96 	jreq	00002$
      000005                         97 00001$:
      000005 72 4FuFFuFF      [ 1]   98 	clr (s_DATA - 1, x)
      000009 5A               [ 2]   99 	decw x
      00000A 26 F9            [ 1]  100 	jrne	00001$
      00000C                        101 00002$:
      00000C AEr00r00         [ 2]  102 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]  103 	jreq	00004$
      000011                        104 00003$:
      000011 D6uFFuFF         [ 1]  105 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]  106 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]  107 	decw	x
      000018 26 F7            [ 1]  108 	jrne	00003$
      00001A                        109 00004$:
                                    110 ; stm8_genXINIT() end
                                    111 	.area GSFINAL
      000000 CCr00r80         [ 2]  112 	jp	__sdcc_program_startup
                                    113 ;--------------------------------------------------------
                                    114 ; Home
                                    115 ;--------------------------------------------------------
                                    116 	.area HOME
                                    117 	.area HOME
      000080                        118 __sdcc_program_startup:
      000080 CCr01rAD         [ 2]  119 	jp	_main
                                    120 ;	return from main will return to caller
                                    121 ;--------------------------------------------------------
                                    122 ; code
                                    123 ;--------------------------------------------------------
                                    124 	.area CODE
                                    125 ;	./button_leds.c: 5: uint32_t delay(uint32_t t)  //объявление статической функции часла типа long переменной t для реализации работы функции delay
                                    126 ;	-----------------------------------------
                                    127 ;	 function delay
                                    128 ;	-----------------------------------------
      000000                        129 _delay:
      000000 52 04            [ 2]  130 	sub	sp, #4
                                    131 ;	./button_leds.c: 8: while(t--);
      000002 90 AE 01 F4      [ 2]  132 	ldw	y, #0x01f4
      000006 5F               [ 1]  133 	clrw	x
      000007                        134 00101$:
      000007 17 03            [ 2]  135 	ldw	(0x03, sp), y
      000009 1F 01            [ 2]  136 	ldw	(0x01, sp), x
      00000B 72 A2 00 01      [ 2]  137 	subw	y, #0x0001
      00000F 9F               [ 1]  138 	ld	a, xl
      000010 A2 00            [ 1]  139 	sbc	a, #0x00
      000012 02               [ 1]  140 	rlwa	x
      000013 A2 00            [ 1]  141 	sbc	a, #0x00
      000015 95               [ 1]  142 	ld	xh, a
      000016 0D 04            [ 1]  143 	tnz	(0x04, sp)
      000018 26 ED            [ 1]  144 	jrne	00101$
      00001A 0D 03            [ 1]  145 	tnz	(0x03, sp)
      00001C 26 E9            [ 1]  146 	jrne	00101$
      00001E 0D 02            [ 1]  147 	tnz	(0x02, sp)
      000020 26 E5            [ 1]  148 	jrne	00101$
      000022 0D 01            [ 1]  149 	tnz	(0x01, sp)
      000024 26 E1            [ 1]  150 	jrne	00101$
                                    151 ;	./button_leds.c: 9: return t;
      000026 51               [ 1]  152 	exgw	x, y
      000027 5B 04            [ 2]  153 	addw	sp, #4
      000029 81               [ 4]  154 	ret
                                    155 ;	./button_leds.c: 26: void PIN()
                                    156 ;	-----------------------------------------
                                    157 ;	 function PIN
                                    158 ;	-----------------------------------------
      00002A                        159 _PIN:
                                    160 ;	./button_leds.c: 28: GPIOC->DDR |= 0xf8;   	//направление данных порта out-0; input-1
      00002A AE 50 0C         [ 2]  161 	ldw	x, #0x500c
      00002D F6               [ 1]  162 	ld	a, (x)
      00002E AA F8            [ 1]  163 	or	a, #0xf8
      000030 F7               [ 1]  164 	ld	(x), a
                                    165 ;	./button_leds.c: 29: GPIOC->CR1 |= 0xf8;   	//установка подтягивающего резистора open-drain=0; push-pull=1
      000031 AE 50 0D         [ 2]  166 	ldw	x, #0x500d
      000034 F6               [ 1]  167 	ld	a, (x)
      000035 AA F8            [ 1]  168 	or	a, #0xf8
      000037 F7               [ 1]  169 	ld	(x), a
                                    170 ;	./button_leds.c: 30: GPIOC->ODR |= 0xf8;   	//установка значения бита 0/1
      000038 AE 50 0A         [ 2]  171 	ldw	x, #0x500a
      00003B F6               [ 1]  172 	ld	a, (x)
      00003C AA F8            [ 1]  173 	or	a, #0xf8
      00003E F7               [ 1]  174 	ld	(x), a
                                    175 ;	./button_leds.c: 32: GPIOD->DDR |= 0x00;
      00003F AE 50 11         [ 2]  176 	ldw	x, #0x5011
      000042 F6               [ 1]  177 	ld	a, (x)
      000043 AE 50 11         [ 2]  178 	ldw	x, #0x5011
      000046 F7               [ 1]  179 	ld	(x), a
                                    180 ;	./button_leds.c: 33: GPIOD->CR1 |= 0x10;
      000047 AE 50 12         [ 2]  181 	ldw	x, #0x5012
      00004A F6               [ 1]  182 	ld	a, (x)
      00004B AA 10            [ 1]  183 	or	a, #0x10
      00004D F7               [ 1]  184 	ld	(x), a
                                    185 ;	./button_leds.c: 34: GPIOD->CR2 |= 0x00;
      00004E AE 50 13         [ 2]  186 	ldw	x, #0x5013
      000051 F6               [ 1]  187 	ld	a, (x)
      000052 AE 50 13         [ 2]  188 	ldw	x, #0x5013
      000055 F7               [ 1]  189 	ld	(x), a
      000056 81               [ 4]  190 	ret
                                    191 ;	./button_leds.c: 38: void button()
                                    192 ;	-----------------------------------------
                                    193 ;	 function button
                                    194 ;	-----------------------------------------
      000057                        195 _button:
      000057 52 08            [ 2]  196 	sub	sp, #8
                                    197 ;	./button_leds.c: 41: if ((GPIOD->IDR & 0x10) ==0x00 && !bs && (delay(ms)-msb)>50) // фиксируем нажатие кнопки
      000059 AE 50 10         [ 2]  198 	ldw	x, #0x5010
      00005C F6               [ 1]  199 	ld	a, (x)
      00005D A5 10            [ 1]  200 	bcp	a, #0x10
      00005F 26 4A            [ 1]  201 	jrne	00102$
      000061 72 01u00u08 02   [ 2]  202 	btjf	_bs+0, #0, 00136$
      000066 20 43            [ 2]  203 	jra	00102$
      000068                        204 00136$:
      000068 3Bu00u03         [ 1]  205 	push	_ms+3
      00006B 3Bu00u02         [ 1]  206 	push	_ms+2
      00006E 3Bu00u01         [ 1]  207 	push	_ms+1
      000071 3Bu00u00         [ 1]  208 	push	_ms+0
      000074 CDr00r00         [ 4]  209 	call	_delay
      000077 5B 04            [ 2]  210 	addw	sp, #4
      000079 51               [ 1]  211 	exgw	x, y
      00007A 72 B2u00u06      [ 2]  212 	subw	y, _msb+2
      00007E 17 03            [ 2]  213 	ldw	(0x03, sp), y
      000080 9F               [ 1]  214 	ld	a, xl
      000081 C2u00u05         [ 1]  215 	sbc	a, _msb+1
      000084 6B 02            [ 1]  216 	ld	(0x02, sp), a
      000086 9E               [ 1]  217 	ld	a, xh
      000087 C2u00u04         [ 1]  218 	sbc	a, _msb+0
      00008A 6B 01            [ 1]  219 	ld	(0x01, sp), a
      00008C AE 00 32         [ 2]  220 	ldw	x, #0x0032
      00008F 13 03            [ 2]  221 	cpw	x, (0x03, sp)
      000091 4F               [ 1]  222 	clr	a
      000092 12 02            [ 1]  223 	sbc	a, (0x02, sp)
      000094 4F               [ 1]  224 	clr	a
      000095 12 01            [ 1]  225 	sbc	a, (0x01, sp)
      000097 24 12            [ 1]  226 	jrnc	00102$
                                    227 ;	./button_leds.c: 43: bs=1;
      000099 35 01u00u08      [ 1]  228 	mov	_bs+0, #0x01
                                    229 ;	./button_leds.c: 44: msb=ms;
      00009D 90 CEu00u02      [ 2]  230 	ldw	y, _ms+2
      0000A1 CEu00u00         [ 2]  231 	ldw	x, _ms+0
      0000A4 90 CFu00u06      [ 2]  232 	ldw	_msb+2, y
      0000A8 CFu00u04         [ 2]  233 	ldw	_msb+0, x
      0000AB                        234 00102$:
                                    235 ;	./button_leds.c: 49: if ((GPIOD->IDR & 0x10) ==0x10 && bs && (delay(ms)-msb)>50) // фиксируем отпускание  нажатие кнопки
      0000AB AE 50 10         [ 2]  236 	ldw	x, #0x5010
      0000AE F6               [ 1]  237 	ld	a, (x)
      0000AF A4 10            [ 1]  238 	and	a, #0x10
      0000B1 A1 10            [ 1]  239 	cp	a, #0x10
      0000B3 26 4A            [ 1]  240 	jrne	00109$
      0000B5 72 00u00u08 02   [ 2]  241 	btjt	_bs+0, #0, 00141$
      0000BA 20 43            [ 2]  242 	jra	00109$
      0000BC                        243 00141$:
      0000BC 3Bu00u03         [ 1]  244 	push	_ms+3
      0000BF 3Bu00u02         [ 1]  245 	push	_ms+2
      0000C2 3Bu00u01         [ 1]  246 	push	_ms+1
      0000C5 3Bu00u00         [ 1]  247 	push	_ms+0
      0000C8 CDr00r00         [ 4]  248 	call	_delay
      0000CB 5B 04            [ 2]  249 	addw	sp, #4
      0000CD 51               [ 1]  250 	exgw	x, y
      0000CE 72 B2u00u06      [ 2]  251 	subw	y, _msb+2
      0000D2 17 07            [ 2]  252 	ldw	(0x07, sp), y
      0000D4 9F               [ 1]  253 	ld	a, xl
      0000D5 C2u00u05         [ 1]  254 	sbc	a, _msb+1
      0000D8 6B 06            [ 1]  255 	ld	(0x06, sp), a
      0000DA 9E               [ 1]  256 	ld	a, xh
      0000DB C2u00u04         [ 1]  257 	sbc	a, _msb+0
      0000DE 6B 05            [ 1]  258 	ld	(0x05, sp), a
      0000E0 AE 00 32         [ 2]  259 	ldw	x, #0x0032
      0000E3 13 07            [ 2]  260 	cpw	x, (0x07, sp)
      0000E5 4F               [ 1]  261 	clr	a
      0000E6 12 06            [ 1]  262 	sbc	a, (0x06, sp)
      0000E8 4F               [ 1]  263 	clr	a
      0000E9 12 05            [ 1]  264 	sbc	a, (0x05, sp)
      0000EB 24 12            [ 1]  265 	jrnc	00109$
                                    266 ;	./button_leds.c: 51: bs=0;
      0000ED 72 5Fu00u08      [ 1]  267 	clr	_bs+0
                                    268 ;	./button_leds.c: 52: msb=ms;
      0000F1 90 CEu00u02      [ 2]  269 	ldw	y, _ms+2
      0000F5 CEu00u00         [ 2]  270 	ldw	x, _ms+0
      0000F8 90 CFu00u06      [ 2]  271 	ldw	_msb+2, y
      0000FC CFu00u04         [ 2]  272 	ldw	_msb+0, x
      0000FF                        273 00109$:
      0000FF 5B 08            [ 2]  274 	addw	sp, #8
      000101 81               [ 4]  275 	ret
                                    276 ;	./button_leds.c: 59: void running()
                                    277 ;	-----------------------------------------
                                    278 ;	 function running
                                    279 ;	-----------------------------------------
      000102                        280 _running:
      000102 52 04            [ 2]  281 	sub	sp, #4
                                    282 ;	./button_leds.c: 61: if (GPIOD->IDR & 0x10) // проверяем нажатие кнопки
      000104 AE 50 10         [ 2]  283 	ldw	x, #0x5010
      000107 F6               [ 1]  284 	ld	a, (x)
      000108 A5 10            [ 1]  285 	bcp	a, #0x10
      00010A 27 50            [ 1]  286 	jreq	00106$
                                    287 ;	./button_leds.c: 64: GPIOC->ODR ^= 0x08 << n;
      00010C AE 50 0A         [ 2]  288 	ldw	x, #0x500a
      00010F F6               [ 1]  289 	ld	a, (x)
      000110 6B 04            [ 1]  290 	ld	(0x04, sp), a
      000112 A6 08            [ 1]  291 	ld	a, #0x08
      000114 88               [ 1]  292 	push	a
      000115 C6u00u00         [ 1]  293 	ld	a, _n+0
      000118 27 05            [ 1]  294 	jreq	00124$
      00011A                        295 00123$:
      00011A 08 01            [ 1]  296 	sll	(1, sp)
      00011C 4A               [ 1]  297 	dec	a
      00011D 26 FB            [ 1]  298 	jrne	00123$
      00011F                        299 00124$:
      00011F 84               [ 1]  300 	pop	a
      000120 18 04            [ 1]  301 	xor	a, (0x04, sp)
      000122 AE 50 0A         [ 2]  302 	ldw	x, #0x500a
      000125 F7               [ 1]  303 	ld	(x), a
                                    304 ;	./button_leds.c: 65: delay(10000);
      000126 4B 10            [ 1]  305 	push	#0x10
      000128 4B 27            [ 1]  306 	push	#0x27
      00012A 5F               [ 1]  307 	clrw	x
      00012B 89               [ 2]  308 	pushw	x
      00012C CDr00r00         [ 4]  309 	call	_delay
      00012F 5B 04            [ 2]  310 	addw	sp, #4
                                    311 ;	./button_leds.c: 67: GPIOC->ODR |= 0x08 << n;
      000131 AE 50 0A         [ 2]  312 	ldw	x, #0x500a
      000134 F6               [ 1]  313 	ld	a, (x)
      000135 6B 01            [ 1]  314 	ld	(0x01, sp), a
      000137 A6 08            [ 1]  315 	ld	a, #0x08
      000139 88               [ 1]  316 	push	a
      00013A C6u00u00         [ 1]  317 	ld	a, _n+0
      00013D 27 05            [ 1]  318 	jreq	00126$
      00013F                        319 00125$:
      00013F 08 01            [ 1]  320 	sll	(1, sp)
      000141 4A               [ 1]  321 	dec	a
      000142 26 FB            [ 1]  322 	jrne	00125$
      000144                        323 00126$:
      000144 84               [ 1]  324 	pop	a
      000145 1A 01            [ 1]  325 	or	a, (0x01, sp)
      000147 AE 50 0A         [ 2]  326 	ldw	x, #0x500a
      00014A F7               [ 1]  327 	ld	(x), a
                                    328 ;	./button_leds.c: 70: n++;
      00014B C6u00u00         [ 1]  329 	ld	a, _n+0
      00014E 4C               [ 1]  330 	inc	a
                                    331 ;	./button_leds.c: 73: if ( n>=5 )
      00014F C7u00u00         [ 1]  332 	ld	_n+0, a
      000152 A1 05            [ 1]  333 	cp	a, #0x05
      000154 2F 54            [ 1]  334 	jrslt	00108$
                                    335 ;	./button_leds.c: 76: n=0;
      000156 72 5Fu00u00      [ 1]  336 	clr	_n+0
      00015A 20 4E            [ 2]  337 	jra	00108$
      00015C                        338 00106$:
                                    339 ;	./button_leds.c: 84: GPIOC->ODR ^= 0x80 >> n;
      00015C AE 50 0A         [ 2]  340 	ldw	x, #0x500a
      00015F F6               [ 1]  341 	ld	a, (x)
      000160 6B 03            [ 1]  342 	ld	(0x03, sp), a
      000162 A6 80            [ 1]  343 	ld	a, #0x80
      000164 88               [ 1]  344 	push	a
      000165 C6u00u00         [ 1]  345 	ld	a, _n+0
      000168 27 05            [ 1]  346 	jreq	00129$
      00016A                        347 00128$:
      00016A 04 01            [ 1]  348 	srl	(1, sp)
      00016C 4A               [ 1]  349 	dec	a
      00016D 26 FB            [ 1]  350 	jrne	00128$
      00016F                        351 00129$:
      00016F 84               [ 1]  352 	pop	a
      000170 18 03            [ 1]  353 	xor	a, (0x03, sp)
      000172 AE 50 0A         [ 2]  354 	ldw	x, #0x500a
      000175 F7               [ 1]  355 	ld	(x), a
                                    356 ;	./button_leds.c: 85: delay(10000);
      000176 4B 10            [ 1]  357 	push	#0x10
      000178 4B 27            [ 1]  358 	push	#0x27
      00017A 5F               [ 1]  359 	clrw	x
      00017B 89               [ 2]  360 	pushw	x
      00017C CDr00r00         [ 4]  361 	call	_delay
      00017F 5B 04            [ 2]  362 	addw	sp, #4
                                    363 ;	./button_leds.c: 87: GPIOC->ODR |= 0x80 >> n;
      000181 AE 50 0A         [ 2]  364 	ldw	x, #0x500a
      000184 F6               [ 1]  365 	ld	a, (x)
      000185 6B 02            [ 1]  366 	ld	(0x02, sp), a
      000187 A6 80            [ 1]  367 	ld	a, #0x80
      000189 88               [ 1]  368 	push	a
      00018A C6u00u00         [ 1]  369 	ld	a, _n+0
      00018D 27 05            [ 1]  370 	jreq	00131$
      00018F                        371 00130$:
      00018F 04 01            [ 1]  372 	srl	(1, sp)
      000191 4A               [ 1]  373 	dec	a
      000192 26 FB            [ 1]  374 	jrne	00130$
      000194                        375 00131$:
      000194 84               [ 1]  376 	pop	a
      000195 1A 02            [ 1]  377 	or	a, (0x02, sp)
      000197 AE 50 0A         [ 2]  378 	ldw	x, #0x500a
      00019A F7               [ 1]  379 	ld	(x), a
                                    380 ;	./button_leds.c: 90: n++;
      00019B C6u00u00         [ 1]  381 	ld	a, _n+0
      00019E 4C               [ 1]  382 	inc	a
                                    383 ;	./button_leds.c: 93: if ( n>=5 )
      00019F C7u00u00         [ 1]  384 	ld	_n+0, a
      0001A2 A1 05            [ 1]  385 	cp	a, #0x05
      0001A4 2F 04            [ 1]  386 	jrslt	00108$
                                    387 ;	./button_leds.c: 96: n=0;
      0001A6 72 5Fu00u00      [ 1]  388 	clr	_n+0
      0001AA                        389 00108$:
      0001AA 5B 04            [ 2]  390 	addw	sp, #4
      0001AC 81               [ 4]  391 	ret
                                    392 ;	./button_leds.c: 101: int main( void )    //установка портов и пинов
                                    393 ;	-----------------------------------------
                                    394 ;	 function main
                                    395 ;	-----------------------------------------
      0001AD                        396 _main:
                                    397 ;	./button_leds.c: 104: PIN();
      0001AD CDr00r2A         [ 4]  398 	call	_PIN
                                    399 ;	./button_leds.c: 106: while(1){
      0001B0                        400 00102$:
                                    401 ;	./button_leds.c: 108: button();
      0001B0 CDr00r57         [ 4]  402 	call	_button
                                    403 ;	./button_leds.c: 109: running();
      0001B3 CDr01r02         [ 4]  404 	call	_running
      0001B6 20 F8            [ 2]  405 	jra	00102$
      0001B8 81               [ 4]  406 	ret
                                    407 	.area CODE
                                    408 	.area INITIALIZER
      000000                        409 __xinit__ms:
      000000 00 00 00 00            410 	.byte #0x00,#0x00,#0x00,#0x00	; 0
      000004                        411 __xinit__msb:
      000004 00 00 00 00            412 	.byte #0x00,#0x00,#0x00,#0x00	; 0
      000008                        413 __xinit__bs:
      000008 00                     414 	.db #0x00	;  0
                                    415 	.area CABS (ABS)
