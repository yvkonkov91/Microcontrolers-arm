                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Mon Mar 19 01:03:24 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module running_fire02
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _b
                                     14 	.globl _a
                                     15 	.globl _n
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area DATA
      000000                         20 _n::
      000000                         21 	.ds 2
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area INITIALIZED
      000000                         26 _a::
      000000                         27 	.ds 2
      000002                         28 _b::
      000002                         29 	.ds 2
                                     30 ;--------------------------------------------------------
                                     31 ; Stack segment in internal ram 
                                     32 ;--------------------------------------------------------
                                     33 	.area	SSEG
      000000                         34 __start__stack:
      000000                         35 	.ds	1
                                     36 
                                     37 ;--------------------------------------------------------
                                     38 ; absolute external ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area DABS (ABS)
                                     41 ;--------------------------------------------------------
                                     42 ; interrupt vector 
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
      000000                         45 __interrupt_vect:
      000000 82v00u00u00             46 	int s_GSINIT ;reset
      000004 82 00 00 00             47 	int 0x0000 ;trap
      000008 82 00 00 00             48 	int 0x0000 ;int0
      00000C 82 00 00 00             49 	int 0x0000 ;int1
      000010 82 00 00 00             50 	int 0x0000 ;int2
      000014 82 00 00 00             51 	int 0x0000 ;int3
      000018 82 00 00 00             52 	int 0x0000 ;int4
      00001C 82 00 00 00             53 	int 0x0000 ;int5
      000020 82 00 00 00             54 	int 0x0000 ;int6
      000024 82 00 00 00             55 	int 0x0000 ;int7
      000028 82 00 00 00             56 	int 0x0000 ;int8
      00002C 82 00 00 00             57 	int 0x0000 ;int9
      000030 82 00 00 00             58 	int 0x0000 ;int10
      000034 82 00 00 00             59 	int 0x0000 ;int11
      000038 82 00 00 00             60 	int 0x0000 ;int12
      00003C 82 00 00 00             61 	int 0x0000 ;int13
      000040 82 00 00 00             62 	int 0x0000 ;int14
      000044 82 00 00 00             63 	int 0x0000 ;int15
      000048 82 00 00 00             64 	int 0x0000 ;int16
      00004C 82 00 00 00             65 	int 0x0000 ;int17
      000050 82 00 00 00             66 	int 0x0000 ;int18
      000054 82 00 00 00             67 	int 0x0000 ;int19
      000058 82 00 00 00             68 	int 0x0000 ;int20
      00005C 82 00 00 00             69 	int 0x0000 ;int21
      000060 82 00 00 00             70 	int 0x0000 ;int22
      000064 82 00 00 00             71 	int 0x0000 ;int23
      000068 82 00 00 00             72 	int 0x0000 ;int24
      00006C 82 00 00 00             73 	int 0x0000 ;int25
      000070 82 00 00 00             74 	int 0x0000 ;int26
      000074 82 00 00 00             75 	int 0x0000 ;int27
      000078 82 00 00 00             76 	int 0x0000 ;int28
      00007C 82 00 00 00             77 	int 0x0000 ;int29
                                     78 ;--------------------------------------------------------
                                     79 ; global & static initialisations
                                     80 ;--------------------------------------------------------
                                     81 	.area HOME
                                     82 	.area GSINIT
                                     83 	.area GSFINAL
                                     84 	.area GSINIT
      000000                         85 __sdcc_gs_init_startup:
      000000                         86 __sdcc_init_data:
                                     87 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]   88 	ldw x, #l_DATA
      000003 27 07            [ 1]   89 	jreq	00002$
      000005                         90 00001$:
      000005 72 4FuFFuFF      [ 1]   91 	clr (s_DATA - 1, x)
      000009 5A               [ 2]   92 	decw x
      00000A 26 F9            [ 1]   93 	jrne	00001$
      00000C                         94 00002$:
      00000C AEr00r00         [ 2]   95 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]   96 	jreq	00004$
      000011                         97 00003$:
      000011 D6uFFuFF         [ 1]   98 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]   99 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]  100 	decw	x
      000018 26 F7            [ 1]  101 	jrne	00003$
      00001A                        102 00004$:
                                    103 ; stm8_genXINIT() end
                                    104 	.area GSFINAL
      000000 CCr00r80         [ 2]  105 	jp	__sdcc_program_startup
                                    106 ;--------------------------------------------------------
                                    107 ; Home
                                    108 ;--------------------------------------------------------
                                    109 	.area HOME
                                    110 	.area HOME
      000080                        111 __sdcc_program_startup:
      000080 CCr00r28         [ 2]  112 	jp	_main
                                    113 ;	return from main will return to caller
                                    114 ;--------------------------------------------------------
                                    115 ; code
                                    116 ;--------------------------------------------------------
                                    117 	.area CODE
                                    118 ;	./running_fire02.c: 4: static void delay(uint32_t t)  //объявление статической функции часла типа long переменной t для реализации работы функции delay
                                    119 ;	-----------------------------------------
                                    120 ;	 function delay
                                    121 ;	-----------------------------------------
      000000                        122 _delay:
      000000 52 08            [ 2]  123 	sub	sp, #8
                                    124 ;	./running_fire02.c: 6: while(t--);
      000002 16 0B            [ 2]  125 	ldw	y, (0x0b, sp)
      000004 17 05            [ 2]  126 	ldw	(0x05, sp), y
      000006 1E 0D            [ 2]  127 	ldw	x, (0x0d, sp)
      000008                        128 00101$:
      000008 1F 03            [ 2]  129 	ldw	(0x03, sp), x
      00000A 16 05            [ 2]  130 	ldw	y, (0x05, sp)
      00000C 17 01            [ 2]  131 	ldw	(0x01, sp), y
      00000E 1D 00 01         [ 2]  132 	subw	x, #0x0001
      000011 7B 06            [ 1]  133 	ld	a, (0x06, sp)
      000013 A2 00            [ 1]  134 	sbc	a, #0x00
      000015 6B 06            [ 1]  135 	ld	(0x06, sp), a
      000017 7B 05            [ 1]  136 	ld	a, (0x05, sp)
      000019 A2 00            [ 1]  137 	sbc	a, #0x00
      00001B 6B 05            [ 1]  138 	ld	(0x05, sp), a
      00001D 16 03            [ 2]  139 	ldw	y, (0x03, sp)
      00001F 26 E7            [ 1]  140 	jrne	00101$
      000021 16 01            [ 2]  141 	ldw	y, (0x01, sp)
      000023 26 E3            [ 1]  142 	jrne	00101$
      000025 5B 08            [ 2]  143 	addw	sp, #8
      000027 81               [ 4]  144 	ret
                                    145 ;	./running_fire02.c: 21: int main( void )    //установка портов и пинов
                                    146 ;	-----------------------------------------
                                    147 ;	 function main
                                    148 ;	-----------------------------------------
      000028                        149 _main:
                                    150 ;	./running_fire02.c: 23: GPIOC->DDR |= a;//0b11111000; //GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;	//направление данных порта out-0; input-1
      000028 AE 50 0C         [ 2]  151 	ldw	x, #0x500c
      00002B F6               [ 1]  152 	ld	a, (x)
      00002C 95               [ 1]  153 	ld	xh, a
      00002D 4F               [ 1]  154 	clr	a
      00002E CAu00u00         [ 1]  155 	or	a, _a+0
      000031 02               [ 1]  156 	rlwa	x
      000032 CAu00u01         [ 1]  157 	or	a, _a+1
      000035 95               [ 1]  158 	ld	xh, a
      000036 AE 50 0C         [ 2]  159 	ldw	x, #0x500c
      000039 F7               [ 1]  160 	ld	(x), a
                                    161 ;	./running_fire02.c: 24: GPIOC->CR1 |= a;//0b11111000; //GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;	//установка подтягивающего резистора open-drain=0; push-pull=1
      00003A AE 50 0D         [ 2]  162 	ldw	x, #0x500d
      00003D F6               [ 1]  163 	ld	a, (x)
      00003E 95               [ 1]  164 	ld	xh, a
      00003F 4F               [ 1]  165 	clr	a
      000040 CAu00u00         [ 1]  166 	or	a, _a+0
      000043 02               [ 1]  167 	rlwa	x
      000044 CAu00u01         [ 1]  168 	or	a, _a+1
      000047 95               [ 1]  169 	ld	xh, a
      000048 AE 50 0D         [ 2]  170 	ldw	x, #0x500d
      00004B F7               [ 1]  171 	ld	(x), a
                                    172 ;	./running_fire02.c: 25: GPIOC->ODR |= a;//0b11111000; //GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;	//установка значения бита 0/1
      00004C AE 50 0A         [ 2]  173 	ldw	x, #0x500a
      00004F F6               [ 1]  174 	ld	a, (x)
      000050 95               [ 1]  175 	ld	xh, a
      000051 4F               [ 1]  176 	clr	a
      000052 CAu00u00         [ 1]  177 	or	a, _a+0
      000055 02               [ 1]  178 	rlwa	x
      000056 CAu00u01         [ 1]  179 	or	a, _a+1
      000059 95               [ 1]  180 	ld	xh, a
      00005A AE 50 0A         [ 2]  181 	ldw	x, #0x500a
      00005D F7               [ 1]  182 	ld	(x), a
      00005E                        183 00104$:
                                    184 ;	./running_fire02.c: 29: GPIOC->ODR ^= b << n;
      00005E AE 50 0A         [ 2]  185 	ldw	x, #0x500a
      000061 F6               [ 1]  186 	ld	a, (x)
      000062 90 95            [ 1]  187 	ld	yh, a
      000064 C6u00u03         [ 1]  188 	ld	a, _b+1
      000067 5F               [ 1]  189 	clrw	x
      000068 97               [ 1]  190 	ld	xl, a
      000069 C6u00u01         [ 1]  191 	ld	a, _n+1
      00006C 27 04            [ 1]  192 	jreq	00117$
      00006E                        193 00116$:
      00006E 58               [ 2]  194 	sllw	x
      00006F 4A               [ 1]  195 	dec	a
      000070 26 FC            [ 1]  196 	jrne	00116$
      000072                        197 00117$:
      000072 89               [ 2]  198 	pushw	x
      000073 90 9E            [ 1]  199 	ld	a, yh
      000075 18 02            [ 1]  200 	xor	a, (2, sp)
      000077 85               [ 2]  201 	popw	x
      000078 AE 50 0A         [ 2]  202 	ldw	x, #0x500a
      00007B F7               [ 1]  203 	ld	(x), a
                                    204 ;	./running_fire02.c: 30: delay(100000);
      00007C 4B A0            [ 1]  205 	push	#0xa0
      00007E 4B 86            [ 1]  206 	push	#0x86
      000080 4B 01            [ 1]  207 	push	#0x01
      000082 4B 00            [ 1]  208 	push	#0x00
      000084 CDr00r00         [ 4]  209 	call	_delay
      000087 5B 04            [ 2]  210 	addw	sp, #4
                                    211 ;	./running_fire02.c: 32: GPIOC->ODR |= b << n;
      000089 AE 50 0A         [ 2]  212 	ldw	x, #0x500a
      00008C F6               [ 1]  213 	ld	a, (x)
      00008D 90 95            [ 1]  214 	ld	yh, a
      00008F C6u00u03         [ 1]  215 	ld	a, _b+1
      000092 5F               [ 1]  216 	clrw	x
      000093 97               [ 1]  217 	ld	xl, a
      000094 C6u00u01         [ 1]  218 	ld	a, _n+1
      000097 27 04            [ 1]  219 	jreq	00119$
      000099                        220 00118$:
      000099 58               [ 2]  221 	sllw	x
      00009A 4A               [ 1]  222 	dec	a
      00009B 26 FC            [ 1]  223 	jrne	00118$
      00009D                        224 00119$:
      00009D 89               [ 2]  225 	pushw	x
      00009E 90 9E            [ 1]  226 	ld	a, yh
      0000A0 1A 02            [ 1]  227 	or	a, (2, sp)
      0000A2 85               [ 2]  228 	popw	x
      0000A3 AE 50 0A         [ 2]  229 	ldw	x, #0x500a
      0000A6 F7               [ 1]  230 	ld	(x), a
                                    231 ;	./running_fire02.c: 35: n++;
      0000A7 CEu00u00         [ 2]  232 	ldw	x, _n+0
      0000AA 5C               [ 2]  233 	incw	x
                                    234 ;	./running_fire02.c: 37: if ( n >= 5 )
      0000AB CFu00u00         [ 2]  235 	ldw	_n+0, x
      0000AE A3 00 05         [ 2]  236 	cpw	x, #0x0005
      0000B1 2F AB            [ 1]  237 	jrslt	00104$
                                    238 ;	./running_fire02.c: 39: n = 0;
      0000B3 5F               [ 1]  239 	clrw	x
      0000B4 CFu00u00         [ 2]  240 	ldw	_n+0, x
      0000B7 20 A5            [ 2]  241 	jra	00104$
      0000B9 81               [ 4]  242 	ret
                                    243 	.area CODE
                                    244 	.area INITIALIZER
      000000                        245 __xinit__a:
      000000 00 F8                  246 	.dw #0x00F8
      000002                        247 __xinit__b:
      000002 00 08                  248 	.dw #0x0008
                                    249 	.area CABS (ABS)
