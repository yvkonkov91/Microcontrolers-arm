                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Mon Mar 19 01:03:24 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module running_fire02
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _b
                                     14 	.globl _a
                                     15 	.globl _n
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area DATA
      000001                         20 _n::
      000001                         21 	.ds 2
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area INITIALIZED
      000003                         26 _a::
      000003                         27 	.ds 2
      000005                         28 _b::
      000005                         29 	.ds 2
                                     30 ;--------------------------------------------------------
                                     31 ; Stack segment in internal ram 
                                     32 ;--------------------------------------------------------
                                     33 	.area	SSEG
      000007                         34 __start__stack:
      000007                         35 	.ds	1
                                     36 
                                     37 ;--------------------------------------------------------
                                     38 ; absolute external ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area DABS (ABS)
                                     41 ;--------------------------------------------------------
                                     42 ; interrupt vector 
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
      008000                         45 __interrupt_vect:
      008000 82 00 80 83             46 	int s_GSINIT ;reset
      008004 82 00 00 00             47 	int 0x0000 ;trap
      008008 82 00 00 00             48 	int 0x0000 ;int0
      00800C 82 00 00 00             49 	int 0x0000 ;int1
      008010 82 00 00 00             50 	int 0x0000 ;int2
      008014 82 00 00 00             51 	int 0x0000 ;int3
      008018 82 00 00 00             52 	int 0x0000 ;int4
      00801C 82 00 00 00             53 	int 0x0000 ;int5
      008020 82 00 00 00             54 	int 0x0000 ;int6
      008024 82 00 00 00             55 	int 0x0000 ;int7
      008028 82 00 00 00             56 	int 0x0000 ;int8
      00802C 82 00 00 00             57 	int 0x0000 ;int9
      008030 82 00 00 00             58 	int 0x0000 ;int10
      008034 82 00 00 00             59 	int 0x0000 ;int11
      008038 82 00 00 00             60 	int 0x0000 ;int12
      00803C 82 00 00 00             61 	int 0x0000 ;int13
      008040 82 00 00 00             62 	int 0x0000 ;int14
      008044 82 00 00 00             63 	int 0x0000 ;int15
      008048 82 00 00 00             64 	int 0x0000 ;int16
      00804C 82 00 00 00             65 	int 0x0000 ;int17
      008050 82 00 00 00             66 	int 0x0000 ;int18
      008054 82 00 00 00             67 	int 0x0000 ;int19
      008058 82 00 00 00             68 	int 0x0000 ;int20
      00805C 82 00 00 00             69 	int 0x0000 ;int21
      008060 82 00 00 00             70 	int 0x0000 ;int22
      008064 82 00 00 00             71 	int 0x0000 ;int23
      008068 82 00 00 00             72 	int 0x0000 ;int24
      00806C 82 00 00 00             73 	int 0x0000 ;int25
      008070 82 00 00 00             74 	int 0x0000 ;int26
      008074 82 00 00 00             75 	int 0x0000 ;int27
      008078 82 00 00 00             76 	int 0x0000 ;int28
      00807C 82 00 00 00             77 	int 0x0000 ;int29
                                     78 ;--------------------------------------------------------
                                     79 ; global & static initialisations
                                     80 ;--------------------------------------------------------
                                     81 	.area HOME
                                     82 	.area GSINIT
                                     83 	.area GSFINAL
                                     84 	.area GSINIT
      008083                         85 __sdcc_gs_init_startup:
      008083                         86 __sdcc_init_data:
                                     87 ; stm8_genXINIT() start
      008083 AE 00 02         [ 2]   88 	ldw x, #l_DATA
      008086 27 07            [ 1]   89 	jreq	00002$
      008088                         90 00001$:
      008088 72 4F 00 00      [ 1]   91 	clr (s_DATA - 1, x)
      00808C 5A               [ 2]   92 	decw x
      00808D 26 F9            [ 1]   93 	jrne	00001$
      00808F                         94 00002$:
      00808F AE 00 04         [ 2]   95 	ldw	x, #l_INITIALIZER
      008092 27 09            [ 1]   96 	jreq	00004$
      008094                         97 00003$:
      008094 D6 81 59         [ 1]   98 	ld	a, (s_INITIALIZER - 1, x)
      008097 D7 00 02         [ 1]   99 	ld	(s_INITIALIZED - 1, x), a
      00809A 5A               [ 2]  100 	decw	x
      00809B 26 F7            [ 1]  101 	jrne	00003$
      00809D                        102 00004$:
                                    103 ; stm8_genXINIT() end
                                    104 	.area GSFINAL
      00809D CC 80 80         [ 2]  105 	jp	__sdcc_program_startup
                                    106 ;--------------------------------------------------------
                                    107 ; Home
                                    108 ;--------------------------------------------------------
                                    109 	.area HOME
                                    110 	.area HOME
      008080                        111 __sdcc_program_startup:
      008080 CC 80 C8         [ 2]  112 	jp	_main
                                    113 ;	return from main will return to caller
                                    114 ;--------------------------------------------------------
                                    115 ; code
                                    116 ;--------------------------------------------------------
                                    117 	.area CODE
                                    118 ;	./running_fire02.c: 4: static void delay(uint32_t t)  //объявление статической функции часла типа long переменной t для реализации работы функции delay
                                    119 ;	-----------------------------------------
                                    120 ;	 function delay
                                    121 ;	-----------------------------------------
      0080A0                        122 _delay:
      0080A0 52 08            [ 2]  123 	sub	sp, #8
                                    124 ;	./running_fire02.c: 6: while(t--);
      0080A2 16 0B            [ 2]  125 	ldw	y, (0x0b, sp)
      0080A4 17 05            [ 2]  126 	ldw	(0x05, sp), y
      0080A6 1E 0D            [ 2]  127 	ldw	x, (0x0d, sp)
      0080A8                        128 00101$:
      0080A8 1F 03            [ 2]  129 	ldw	(0x03, sp), x
      0080AA 16 05            [ 2]  130 	ldw	y, (0x05, sp)
      0080AC 17 01            [ 2]  131 	ldw	(0x01, sp), y
      0080AE 1D 00 01         [ 2]  132 	subw	x, #0x0001
      0080B1 7B 06            [ 1]  133 	ld	a, (0x06, sp)
      0080B3 A2 00            [ 1]  134 	sbc	a, #0x00
      0080B5 6B 06            [ 1]  135 	ld	(0x06, sp), a
      0080B7 7B 05            [ 1]  136 	ld	a, (0x05, sp)
      0080B9 A2 00            [ 1]  137 	sbc	a, #0x00
      0080BB 6B 05            [ 1]  138 	ld	(0x05, sp), a
      0080BD 16 03            [ 2]  139 	ldw	y, (0x03, sp)
      0080BF 26 E7            [ 1]  140 	jrne	00101$
      0080C1 16 01            [ 2]  141 	ldw	y, (0x01, sp)
      0080C3 26 E3            [ 1]  142 	jrne	00101$
      0080C5 5B 08            [ 2]  143 	addw	sp, #8
      0080C7 81               [ 4]  144 	ret
                                    145 ;	./running_fire02.c: 21: int main( void )    //установка портов и пинов
                                    146 ;	-----------------------------------------
                                    147 ;	 function main
                                    148 ;	-----------------------------------------
      0080C8                        149 _main:
                                    150 ;	./running_fire02.c: 23: GPIOC->DDR |= a;//0b11111000; //GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;	//направление данных порта out-0; input-1
      0080C8 AE 50 0C         [ 2]  151 	ldw	x, #0x500c
      0080CB F6               [ 1]  152 	ld	a, (x)
      0080CC 95               [ 1]  153 	ld	xh, a
      0080CD 4F               [ 1]  154 	clr	a
      0080CE CA 00 03         [ 1]  155 	or	a, _a+0
      0080D1 02               [ 1]  156 	rlwa	x
      0080D2 CA 00 04         [ 1]  157 	or	a, _a+1
      0080D5 95               [ 1]  158 	ld	xh, a
      0080D6 AE 50 0C         [ 2]  159 	ldw	x, #0x500c
      0080D9 F7               [ 1]  160 	ld	(x), a
                                    161 ;	./running_fire02.c: 24: GPIOC->CR1 |= a;//0b11111000; //GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;	//установка подтягивающего резистора open-drain=0; push-pull=1
      0080DA AE 50 0D         [ 2]  162 	ldw	x, #0x500d
      0080DD F6               [ 1]  163 	ld	a, (x)
      0080DE 95               [ 1]  164 	ld	xh, a
      0080DF 4F               [ 1]  165 	clr	a
      0080E0 CA 00 03         [ 1]  166 	or	a, _a+0
      0080E3 02               [ 1]  167 	rlwa	x
      0080E4 CA 00 04         [ 1]  168 	or	a, _a+1
      0080E7 95               [ 1]  169 	ld	xh, a
      0080E8 AE 50 0D         [ 2]  170 	ldw	x, #0x500d
      0080EB F7               [ 1]  171 	ld	(x), a
                                    172 ;	./running_fire02.c: 25: GPIOC->ODR |= a;//0b11111000; //GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;	//установка значения бита 0/1
      0080EC AE 50 0A         [ 2]  173 	ldw	x, #0x500a
      0080EF F6               [ 1]  174 	ld	a, (x)
      0080F0 95               [ 1]  175 	ld	xh, a
      0080F1 4F               [ 1]  176 	clr	a
      0080F2 CA 00 03         [ 1]  177 	or	a, _a+0
      0080F5 02               [ 1]  178 	rlwa	x
      0080F6 CA 00 04         [ 1]  179 	or	a, _a+1
      0080F9 95               [ 1]  180 	ld	xh, a
      0080FA AE 50 0A         [ 2]  181 	ldw	x, #0x500a
      0080FD F7               [ 1]  182 	ld	(x), a
      0080FE                        183 00104$:
                                    184 ;	./running_fire02.c: 29: GPIOC->ODR ^= b << n;
      0080FE AE 50 0A         [ 2]  185 	ldw	x, #0x500a
      008101 F6               [ 1]  186 	ld	a, (x)
      008102 90 95            [ 1]  187 	ld	yh, a
      008104 C6 00 06         [ 1]  188 	ld	a, _b+1
      008107 5F               [ 1]  189 	clrw	x
      008108 97               [ 1]  190 	ld	xl, a
      008109 C6 00 02         [ 1]  191 	ld	a, _n+1
      00810C 27 04            [ 1]  192 	jreq	00117$
      00810E                        193 00116$:
      00810E 58               [ 2]  194 	sllw	x
      00810F 4A               [ 1]  195 	dec	a
      008110 26 FC            [ 1]  196 	jrne	00116$
      008112                        197 00117$:
      008112 89               [ 2]  198 	pushw	x
      008113 90 9E            [ 1]  199 	ld	a, yh
      008115 18 02            [ 1]  200 	xor	a, (2, sp)
      008117 85               [ 2]  201 	popw	x
      008118 AE 50 0A         [ 2]  202 	ldw	x, #0x500a
      00811B F7               [ 1]  203 	ld	(x), a
                                    204 ;	./running_fire02.c: 30: delay(100000);
      00811C 4B A0            [ 1]  205 	push	#0xa0
      00811E 4B 86            [ 1]  206 	push	#0x86
      008120 4B 01            [ 1]  207 	push	#0x01
      008122 4B 00            [ 1]  208 	push	#0x00
      008124 CD 80 A0         [ 4]  209 	call	_delay
      008127 5B 04            [ 2]  210 	addw	sp, #4
                                    211 ;	./running_fire02.c: 32: GPIOC->ODR |= b << n;
      008129 AE 50 0A         [ 2]  212 	ldw	x, #0x500a
      00812C F6               [ 1]  213 	ld	a, (x)
      00812D 90 95            [ 1]  214 	ld	yh, a
      00812F C6 00 06         [ 1]  215 	ld	a, _b+1
      008132 5F               [ 1]  216 	clrw	x
      008133 97               [ 1]  217 	ld	xl, a
      008134 C6 00 02         [ 1]  218 	ld	a, _n+1
      008137 27 04            [ 1]  219 	jreq	00119$
      008139                        220 00118$:
      008139 58               [ 2]  221 	sllw	x
      00813A 4A               [ 1]  222 	dec	a
      00813B 26 FC            [ 1]  223 	jrne	00118$
      00813D                        224 00119$:
      00813D 89               [ 2]  225 	pushw	x
      00813E 90 9E            [ 1]  226 	ld	a, yh
      008140 1A 02            [ 1]  227 	or	a, (2, sp)
      008142 85               [ 2]  228 	popw	x
      008143 AE 50 0A         [ 2]  229 	ldw	x, #0x500a
      008146 F7               [ 1]  230 	ld	(x), a
                                    231 ;	./running_fire02.c: 35: n++;
      008147 CE 00 01         [ 2]  232 	ldw	x, _n+0
      00814A 5C               [ 2]  233 	incw	x
                                    234 ;	./running_fire02.c: 37: if ( n >= 5 )
      00814B CF 00 01         [ 2]  235 	ldw	_n+0, x
      00814E A3 00 05         [ 2]  236 	cpw	x, #0x0005
      008151 2F AB            [ 1]  237 	jrslt	00104$
                                    238 ;	./running_fire02.c: 39: n = 0;
      008153 5F               [ 1]  239 	clrw	x
      008154 CF 00 01         [ 2]  240 	ldw	_n+0, x
      008157 20 A5            [ 2]  241 	jra	00104$
      008159 81               [ 4]  242 	ret
                                    243 	.area CODE
                                    244 	.area INITIALIZER
      00815A                        245 __xinit__a:
      00815A 00 F8                  246 	.dw #0x00F8
      00815C                        247 __xinit__b:
      00815C 00 08                  248 	.dw #0x0008
                                    249 	.area CABS (ABS)
