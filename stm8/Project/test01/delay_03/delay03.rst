                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Wed May 16 22:34:20 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module delay03
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _pin_cfg
                                     14 	.globl _delay_ms
                                     15 	.globl _tim4_cfg
                                     16 	.globl _delay_interrupt
                                     17 	.globl _count
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area DATA
      000001                         22 _count::
      000001                         23 	.ds 4
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area INITIALIZED
                                     28 ;--------------------------------------------------------
                                     29 ; Stack segment in internal ram 
                                     30 ;--------------------------------------------------------
                                     31 	.area	SSEG
      000005                         32 __start__stack:
      000005                         33 	.ds	1
                                     34 
                                     35 ;--------------------------------------------------------
                                     36 ; absolute external ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area DABS (ABS)
                                     39 ;--------------------------------------------------------
                                     40 ; interrupt vector 
                                     41 ;--------------------------------------------------------
                                     42 	.area HOME
      008000                         43 __interrupt_vect:
      008000 82 00 80 83             44 	int s_GSINIT ;reset
      008004 82 00 00 00             45 	int 0x0000 ;trap
      008008 82 00 00 00             46 	int 0x0000 ;int0
      00800C 82 00 00 00             47 	int 0x0000 ;int1
      008010 82 00 00 00             48 	int 0x0000 ;int2
      008014 82 00 00 00             49 	int 0x0000 ;int3
      008018 82 00 00 00             50 	int 0x0000 ;int4
      00801C 82 00 00 00             51 	int 0x0000 ;int5
      008020 82 00 00 00             52 	int 0x0000 ;int6
      008024 82 00 00 00             53 	int 0x0000 ;int7
      008028 82 00 00 00             54 	int 0x0000 ;int8
      00802C 82 00 00 00             55 	int 0x0000 ;int9
      008030 82 00 00 00             56 	int 0x0000 ;int10
      008034 82 00 00 00             57 	int 0x0000 ;int11
      008038 82 00 00 00             58 	int 0x0000 ;int12
      00803C 82 00 00 00             59 	int 0x0000 ;int13
      008040 82 00 00 00             60 	int 0x0000 ;int14
      008044 82 00 00 00             61 	int 0x0000 ;int15
      008048 82 00 00 00             62 	int 0x0000 ;int16
      00804C 82 00 00 00             63 	int 0x0000 ;int17
      008050 82 00 00 00             64 	int 0x0000 ;int18
      008054 82 00 00 00             65 	int 0x0000 ;int19
      008058 82 00 00 00             66 	int 0x0000 ;int20
      00805C 82 00 00 00             67 	int 0x0000 ;int21
      008060 82 00 00 00             68 	int 0x0000 ;int22
      008064 82 00 80 A0             69 	int _delay_interrupt ;int23
      008068 82 00 00 00             70 	int 0x0000 ;int24
      00806C 82 00 00 00             71 	int 0x0000 ;int25
      008070 82 00 00 00             72 	int 0x0000 ;int26
      008074 82 00 00 00             73 	int 0x0000 ;int27
      008078 82 00 00 00             74 	int 0x0000 ;int28
      00807C 82 00 00 00             75 	int 0x0000 ;int29
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME
                                     80 	.area GSINIT
                                     81 	.area GSFINAL
                                     82 	.area GSINIT
      008083                         83 __sdcc_gs_init_startup:
      008083                         84 __sdcc_init_data:
                                     85 ; stm8_genXINIT() start
      008083 AE 00 04         [ 2]   86 	ldw x, #l_DATA
      008086 27 07            [ 1]   87 	jreq	00002$
      008088                         88 00001$:
      008088 72 4F 00 00      [ 1]   89 	clr (s_DATA - 1, x)
      00808C 5A               [ 2]   90 	decw x
      00808D 26 F9            [ 1]   91 	jrne	00001$
      00808F                         92 00002$:
      00808F AE 00 00         [ 2]   93 	ldw	x, #l_INITIALIZER
      008092 27 09            [ 1]   94 	jreq	00004$
      008094                         95 00003$:
      008094 D6 81 3D         [ 1]   96 	ld	a, (s_INITIALIZER - 1, x)
      008097 D7 00 04         [ 1]   97 	ld	(s_INITIALIZED - 1, x), a
      00809A 5A               [ 2]   98 	decw	x
      00809B 26 F7            [ 1]   99 	jrne	00003$
      00809D                        100 00004$:
                                    101 ; stm8_genXINIT() end
                                    102 	.area GSFINAL
      00809D CC 80 80         [ 2]  103 	jp	__sdcc_program_startup
                                    104 ;--------------------------------------------------------
                                    105 ; Home
                                    106 ;--------------------------------------------------------
                                    107 	.area HOME
                                    108 	.area HOME
      008080                        109 __sdcc_program_startup:
      008080 CC 81 1D         [ 2]  110 	jp	_main
                                    111 ;	return from main will return to caller
                                    112 ;--------------------------------------------------------
                                    113 ; code
                                    114 ;--------------------------------------------------------
                                    115 	.area CODE
                                    116 ;	../lib/lib1/inc/stm8s_delay.h: 3: extern void delay_interrupt(void) __interrupt(23) //обработчик прерывания функции delay_ms таймера TIM4
                                    117 ;	-----------------------------------------
                                    118 ;	 function delay_interrupt
                                    119 ;	-----------------------------------------
      0080A0                        120 _delay_interrupt:
                                    121 ;	../lib/lib1/inc/stm8s_delay.h: 5: if(count)
      0080A0 CE 00 03         [ 2]  122 	ldw	x, _count+2
      0080A3 26 05            [ 1]  123 	jrne	00109$
      0080A5 CE 00 01         [ 2]  124 	ldw	x, _count+0
      0080A8 27 1B            [ 1]  125 	jreq	00102$
      0080AA                        126 00109$:
                                    127 ;	../lib/lib1/inc/stm8s_delay.h: 6: count--;    //дикримент переменной count
      0080AA 90 CE 00 03      [ 2]  128 	ldw	y, _count+2
      0080AE 72 A2 00 01      [ 2]  129 	subw	y, #0x0001
      0080B2 C6 00 02         [ 1]  130 	ld	a, _count+1
      0080B5 A2 00            [ 1]  131 	sbc	a, #0x00
      0080B7 97               [ 1]  132 	ld	xl, a
      0080B8 C6 00 01         [ 1]  133 	ld	a, _count+0
      0080BB A2 00            [ 1]  134 	sbc	a, #0x00
      0080BD 95               [ 1]  135 	ld	xh, a
      0080BE 90 CF 00 03      [ 2]  136 	ldw	_count+2, y
      0080C2 CF 00 01         [ 2]  137 	ldw	_count+0, x
      0080C5                        138 00102$:
                                    139 ;	../lib/lib1/inc/stm8s_delay.h: 7: TIM4->SR1   = (0<<0); ////событие обновления не происходило
      0080C5 35 00 53 44      [ 1]  140 	mov	0x5344+0, #0x00
      0080C9 80               [11]  141 	iret
                                    142 ;	../lib/lib1/inc/stm8s_delay.h: 9: void tim4_cfg() //настройка таймера
                                    143 ;	-----------------------------------------
                                    144 ;	 function tim4_cfg
                                    145 ;	-----------------------------------------
      0080CA                        146 _tim4_cfg:
                                    147 ;	../lib/lib1/inc/stm8s_delay.h: 11: TIM4->SR1   = (1<<0);   //событие обновления происходило
      0080CA 35 01 53 44      [ 1]  148 	mov	0x5344+0, #0x01
                                    149 ;	../lib/lib1/inc/stm8s_delay.h: 12: TIM4->IER  |= (1<<0);    // прерывания по обновлению включены
      0080CE 72 10 53 43      [ 1]  150 	bset	0x5343, #0
                                    151 ;	../lib/lib1/inc/stm8s_delay.h: 13: TIM4->PSCR |= 8; // установка предделителя 128
      0080D2 AE 53 47         [ 2]  152 	ldw	x, #0x5347
      0080D5 F6               [ 1]  153 	ld	a, (x)
      0080D6 AA 08            [ 1]  154 	or	a, #0x08
      0080D8 F7               [ 1]  155 	ld	(x), a
                                    156 ;	../lib/lib1/inc/stm8s_delay.h: 14: TIM4->ARR  |= 124;    // значение автоперезагрузки 124
      0080D9 AE 53 48         [ 2]  157 	ldw	x, #0x5348
      0080DC F6               [ 1]  158 	ld	a, (x)
      0080DD AA 7C            [ 1]  159 	or	a, #0x7c
      0080DF F7               [ 1]  160 	ld	(x), a
      0080E0 81               [ 4]  161 	ret
                                    162 ;	../lib/lib1/inc/stm8s_delay.h: 16: void delay_ms(uint32_t ms) //функция выдержки времени
                                    163 ;	-----------------------------------------
                                    164 ;	 function delay_ms
                                    165 ;	-----------------------------------------
      0080E1                        166 _delay_ms:
                                    167 ;	../lib/lib1/inc/stm8s_delay.h: 19: tim4_cfg(); //вызов функции настройки таймера
      0080E1 CD 80 CA         [ 4]  168 	call	_tim4_cfg
                                    169 ;	../lib/lib1/inc/stm8s_delay.h: 20: count = ms; //переменная count пресваивает значение переменной ms
      0080E4 7B 06            [ 1]  170 	ld	a, (0x06, sp)
      0080E6 C7 00 04         [ 1]  171 	ld	_count+3, a
      0080E9 7B 05            [ 1]  172 	ld	a, (0x05, sp)
      0080EB C7 00 03         [ 1]  173 	ld	_count+2, a
      0080EE 7B 04            [ 1]  174 	ld	a, (0x04, sp)
      0080F0 C7 00 02         [ 1]  175 	ld	_count+1, a
      0080F3 7B 03            [ 1]  176 	ld	a, (0x03, sp)
      0080F5 C7 00 01         [ 1]  177 	ld	_count+0, a
                                    178 ;	../lib/lib1/inc/stm8s_delay.h: 21: TIM4->CR1  = (1<<0);    //включение таймера
      0080F8 35 01 53 40      [ 1]  179 	mov	0x5340+0, #0x01
                                    180 ;	../lib/lib1/inc/stm8s_delay.h: 22: while(count);
      0080FC                        181 00101$:
      0080FC CE 00 03         [ 2]  182 	ldw	x, _count+2
      0080FF 26 FB            [ 1]  183 	jrne	00101$
      008101 CE 00 01         [ 2]  184 	ldw	x, _count+0
      008104 26 F6            [ 1]  185 	jrne	00101$
      008106 81               [ 4]  186 	ret
                                    187 ;	./delay03.c: 4: void pin_cfg()  //функция настройки GPIO
                                    188 ;	-----------------------------------------
                                    189 ;	 function pin_cfg
                                    190 ;	-----------------------------------------
      008107                        191 _pin_cfg:
                                    192 ;	./delay03.c: 6: GPIOC->DDR |= (1<<3);
      008107 AE 50 0C         [ 2]  193 	ldw	x, #0x500c
      00810A F6               [ 1]  194 	ld	a, (x)
      00810B AA 08            [ 1]  195 	or	a, #0x08
      00810D F7               [ 1]  196 	ld	(x), a
                                    197 ;	./delay03.c: 7: GPIOC->CR1 |= (1<<3);
      00810E AE 50 0D         [ 2]  198 	ldw	x, #0x500d
      008111 F6               [ 1]  199 	ld	a, (x)
      008112 AA 08            [ 1]  200 	or	a, #0x08
      008114 F7               [ 1]  201 	ld	(x), a
                                    202 ;	./delay03.c: 8: GPIOC->ODR |= (1<<3);
      008115 AE 50 0A         [ 2]  203 	ldw	x, #0x500a
      008118 F6               [ 1]  204 	ld	a, (x)
      008119 AA 08            [ 1]  205 	or	a, #0x08
      00811B F7               [ 1]  206 	ld	(x), a
      00811C 81               [ 4]  207 	ret
                                    208 ;	./delay03.c: 11: int main( void )    //установка портов и пинов
                                    209 ;	-----------------------------------------
                                    210 ;	 function main
                                    211 ;	-----------------------------------------
      00811D                        212 _main:
                                    213 ;	./delay03.c: 13: CLK->CKDIVR |= (0<<4)|(0<<3)|(0<<2)|(0<<1)|(0<<0); // коэффициент деления частоты HSI-генератора (16MHz)
      00811D AE 50 C6         [ 2]  214 	ldw	x, #0x50c6
      008120 F6               [ 1]  215 	ld	a, (x)
      008121 AE 50 C6         [ 2]  216 	ldw	x, #0x50c6
      008124 F7               [ 1]  217 	ld	(x), a
                                    218 ;	./delay03.c: 15: pin_cfg();  //функция настройки GPIO
      008125 CD 81 07         [ 4]  219 	call	_pin_cfg
                                    220 ;	./delay03.c: 17: rim(); // разрешение прерывания!
      008128 9A               [ 1]  221 	rim 
                                    222 ;	./delay03.c: 20: while(1)  //бесконечный цикл        
      008129                        223 00102$:
                                    224 ;	./delay03.c: 22: GPIOC->ODR ^=(1<<3);  //зажигаем светодиод
      008129 AE 50 0A         [ 2]  225 	ldw	x, #0x500a
      00812C F6               [ 1]  226 	ld	a, (x)
      00812D A8 08            [ 1]  227 	xor	a, #0x08
      00812F F7               [ 1]  228 	ld	(x), a
                                    229 ;	./delay03.c: 23: delay_ms(10000);   //временная задержка
      008130 4B 10            [ 1]  230 	push	#0x10
      008132 4B 27            [ 1]  231 	push	#0x27
      008134 5F               [ 1]  232 	clrw	x
      008135 89               [ 2]  233 	pushw	x
      008136 CD 80 E1         [ 4]  234 	call	_delay_ms
      008139 5B 04            [ 2]  235 	addw	sp, #4
      00813B 20 EC            [ 2]  236 	jra	00102$
      00813D 81               [ 4]  237 	ret
                                    238 	.area CODE
                                    239 	.area INITIALIZER
                                    240 	.area CABS (ABS)
