                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Tue Apr 17 18:31:13 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module but_int01
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _pin_cfg
                                     14 	.globl _pin_int
                                     15 ;--------------------------------------------------------
                                     16 ; ram data
                                     17 ;--------------------------------------------------------
                                     18 	.area DATA
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area INITIALIZED
                                     23 ;--------------------------------------------------------
                                     24 ; Stack segment in internal ram 
                                     25 ;--------------------------------------------------------
                                     26 	.area	SSEG
      000000                         27 __start__stack:
      000000                         28 	.ds	1
                                     29 
                                     30 ;--------------------------------------------------------
                                     31 ; absolute external ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DABS (ABS)
                                     34 ;--------------------------------------------------------
                                     35 ; interrupt vector 
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
      000000                         38 __interrupt_vect:
      000000 82v00u00u00             39 	int s_GSINIT ;reset
      000004 82 00 00 00             40 	int 0x0000 ;trap
      000008 82 00 00 00             41 	int 0x0000 ;int0
      00000C 82 00 00 00             42 	int 0x0000 ;int1
      000010 82 00 00 00             43 	int 0x0000 ;int2
      000014 82 00 00 00             44 	int 0x0000 ;int3
      000018 82v00u00u0E             45 	int _pin_int ;int4
      00001C 82 00 00 00             46 	int 0x0000 ;int5
      000020 82 00 00 00             47 	int 0x0000 ;int6
      000024 82 00 00 00             48 	int 0x0000 ;int7
      000028 82 00 00 00             49 	int 0x0000 ;int8
      00002C 82 00 00 00             50 	int 0x0000 ;int9
      000030 82 00 00 00             51 	int 0x0000 ;int10
      000034 82 00 00 00             52 	int 0x0000 ;int11
      000038 82 00 00 00             53 	int 0x0000 ;int12
      00003C 82 00 00 00             54 	int 0x0000 ;int13
      000040 82 00 00 00             55 	int 0x0000 ;int14
      000044 82 00 00 00             56 	int 0x0000 ;int15
      000048 82 00 00 00             57 	int 0x0000 ;int16
      00004C 82 00 00 00             58 	int 0x0000 ;int17
      000050 82 00 00 00             59 	int 0x0000 ;int18
      000054 82 00 00 00             60 	int 0x0000 ;int19
      000058 82 00 00 00             61 	int 0x0000 ;int20
      00005C 82 00 00 00             62 	int 0x0000 ;int21
      000060 82 00 00 00             63 	int 0x0000 ;int22
      000064 82 00 00 00             64 	int 0x0000 ;int23
      000068 82 00 00 00             65 	int 0x0000 ;int24
      00006C 82 00 00 00             66 	int 0x0000 ;int25
      000070 82 00 00 00             67 	int 0x0000 ;int26
      000074 82 00 00 00             68 	int 0x0000 ;int27
      000078 82 00 00 00             69 	int 0x0000 ;int28
      00007C 82 00 00 00             70 	int 0x0000 ;int29
                                     71 ;--------------------------------------------------------
                                     72 ; global & static initialisations
                                     73 ;--------------------------------------------------------
                                     74 	.area HOME
                                     75 	.area GSINIT
                                     76 	.area GSFINAL
                                     77 	.area GSINIT
      000000                         78 __sdcc_gs_init_startup:
      000000                         79 __sdcc_init_data:
                                     80 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]   81 	ldw x, #l_DATA
      000003 27 07            [ 1]   82 	jreq	00002$
      000005                         83 00001$:
      000005 72 4FuFFuFF      [ 1]   84 	clr (s_DATA - 1, x)
      000009 5A               [ 2]   85 	decw x
      00000A 26 F9            [ 1]   86 	jrne	00001$
      00000C                         87 00002$:
      00000C AEr00r00         [ 2]   88 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]   89 	jreq	00004$
      000011                         90 00003$:
      000011 D6uFFuFF         [ 1]   91 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]   92 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]   93 	decw	x
      000018 26 F7            [ 1]   94 	jrne	00003$
      00001A                         95 00004$:
                                     96 ; stm8_genXINIT() end
                                     97 	.area GSFINAL
      000000 CCr00r80         [ 2]   98 	jp	__sdcc_program_startup
                                     99 ;--------------------------------------------------------
                                    100 ; Home
                                    101 ;--------------------------------------------------------
                                    102 	.area HOME
                                    103 	.area HOME
      000080                        104 __sdcc_program_startup:
      000080 CCr00r52         [ 2]  105 	jp	_main
                                    106 ;	return from main will return to caller
                                    107 ;--------------------------------------------------------
                                    108 ; code
                                    109 ;--------------------------------------------------------
                                    110 	.area CODE
                                    111 ;	./but_int01.c: 4: static void delay(unsigned int t)
                                    112 ;	-----------------------------------------
                                    113 ;	 function delay
                                    114 ;	-----------------------------------------
      000000                        115 _delay:
      000000 52 02            [ 2]  116 	sub	sp, #2
                                    117 ;	./but_int01.c: 6: while(t--);
      000002 1E 05            [ 2]  118 	ldw	x, (0x05, sp)
      000004                        119 00101$:
      000004 1F 01            [ 2]  120 	ldw	(0x01, sp), x
      000006 5A               [ 2]  121 	decw	x
      000007 16 01            [ 2]  122 	ldw	y, (0x01, sp)
      000009 26 F9            [ 1]  123 	jrne	00101$
      00000B 5B 02            [ 2]  124 	addw	sp, #2
      00000D 81               [ 4]  125 	ret
                                    126 ;	./but_int01.c: 9: extern void pin_int(void) __interrupt(4)
                                    127 ;	-----------------------------------------
                                    128 ;	 function pin_int
                                    129 ;	-----------------------------------------
      00000E                        130 _pin_int:
                                    131 ;	./but_int01.c: 11: if(GPIOD->IDR & 0b00010000)
      00000E AE 50 10         [ 2]  132 	ldw	x, #0x5010
      000011 F6               [ 1]  133 	ld	a, (x)
      000012 A5 10            [ 1]  134 	bcp	a, #0x10
      000014 27 09            [ 1]  135 	jreq	00102$
                                    136 ;	./but_int01.c: 13: GPIOB->ODR ^= 0b00100000;
      000016 AE 50 05         [ 2]  137 	ldw	x, #0x5005
      000019 F6               [ 1]  138 	ld	a, (x)
      00001A A8 20            [ 1]  139 	xor	a, #0x20
      00001C F7               [ 1]  140 	ld	(x), a
      00001D 20 07            [ 2]  141 	jra	00104$
      00001F                        142 00102$:
                                    143 ;	./but_int01.c: 16: GPIOB->ODR |= 0b00100000;
      00001F AE 50 05         [ 2]  144 	ldw	x, #0x5005
      000022 F6               [ 1]  145 	ld	a, (x)
      000023 AA 20            [ 1]  146 	or	a, #0x20
      000025 F7               [ 1]  147 	ld	(x), a
      000026                        148 00104$:
      000026 80               [11]  149 	iret
                                    150 ;	./but_int01.c: 22: void pin_cfg()  //функция настройки GPIO
                                    151 ;	-----------------------------------------
                                    152 ;	 function pin_cfg
                                    153 ;	-----------------------------------------
      000027                        154 _pin_cfg:
                                    155 ;	./but_int01.c: 24: GPIOB->DDR |= 0b00100000;
      000027 AE 50 07         [ 2]  156 	ldw	x, #0x5007
      00002A F6               [ 1]  157 	ld	a, (x)
      00002B AA 20            [ 1]  158 	or	a, #0x20
      00002D F7               [ 1]  159 	ld	(x), a
                                    160 ;	./but_int01.c: 25: GPIOB->CR1 |= 0b00100000;
      00002E AE 50 08         [ 2]  161 	ldw	x, #0x5008
      000031 F6               [ 1]  162 	ld	a, (x)
      000032 AA 20            [ 1]  163 	or	a, #0x20
      000034 F7               [ 1]  164 	ld	(x), a
                                    165 ;	./but_int01.c: 26: GPIOD->CR1 |= 0b00010000;
      000035 AE 50 12         [ 2]  166 	ldw	x, #0x5012
      000038 F6               [ 1]  167 	ld	a, (x)
      000039 AA 10            [ 1]  168 	or	a, #0x10
      00003B F7               [ 1]  169 	ld	(x), a
                                    170 ;	./but_int01.c: 27: GPIOD->CR2 |= 0b00010000;
      00003C AE 50 13         [ 2]  171 	ldw	x, #0x5013
      00003F F6               [ 1]  172 	ld	a, (x)
      000040 AA 10            [ 1]  173 	or	a, #0x10
      000042 F7               [ 1]  174 	ld	(x), a
                                    175 ;	./but_int01.c: 28: GPIOB->ODR |= 0b00100000;
      000043 AE 50 05         [ 2]  176 	ldw	x, #0x5005
      000046 F6               [ 1]  177 	ld	a, (x)
      000047 AA 20            [ 1]  178 	or	a, #0x20
      000049 F7               [ 1]  179 	ld	(x), a
                                    180 ;	./but_int01.c: 29: EXTI->CR1 |= 0b11000000;
      00004A AE 50 A0         [ 2]  181 	ldw	x, #0x50a0
      00004D F6               [ 1]  182 	ld	a, (x)
      00004E AA C0            [ 1]  183 	or	a, #0xc0
      000050 F7               [ 1]  184 	ld	(x), a
      000051 81               [ 4]  185 	ret
                                    186 ;	./but_int01.c: 32: int main( void )    //установка портов и пинов
                                    187 ;	-----------------------------------------
                                    188 ;	 function main
                                    189 ;	-----------------------------------------
      000052                        190 _main:
                                    191 ;	./but_int01.c: 35: CLK->CKDIVR |= 4; // коэффициент деления частоты HSI-генератора (16MHz)
      000052 AE 50 C6         [ 2]  192 	ldw	x, #0x50c6
      000055 F6               [ 1]  193 	ld	a, (x)
      000056 AA 04            [ 1]  194 	or	a, #0x04
      000058 F7               [ 1]  195 	ld	(x), a
                                    196 ;	./but_int01.c: 37: pin_cfg();  //функция настройки GPIO
      000059 CDr00r27         [ 4]  197 	call	_pin_cfg
                                    198 ;	./but_int01.c: 39: rim(); // разрешение прерывания!
      00005C 9A               [ 1]  199 	rim 
                                    200 ;	./but_int01.c: 42: while(1)  //бесконечный цикл        
      00005D                        201 00102$:
                                    202 ;	./but_int01.c: 44: delay(5000);
      00005D 4B 88            [ 1]  203 	push	#0x88
      00005F 4B 13            [ 1]  204 	push	#0x13
      000061 CDr00r00         [ 4]  205 	call	_delay
      000064 5B 02            [ 2]  206 	addw	sp, #2
                                    207 ;	./but_int01.c: 45: GPIOB->ODR ^= 0b00100000;
      000066 AE 50 05         [ 2]  208 	ldw	x, #0x5005
      000069 F6               [ 1]  209 	ld	a, (x)
      00006A A8 20            [ 1]  210 	xor	a, #0x20
      00006C F7               [ 1]  211 	ld	(x), a
      00006D 20 EE            [ 2]  212 	jra	00102$
      00006F 81               [ 4]  213 	ret
                                    214 	.area CODE
                                    215 	.area INITIALIZER
                                    216 	.area CABS (ABS)
