                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Thu Mar 29 19:24:34 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module running_fire
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _n
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
      000000                         18 _n::
      000000                         19 	.ds 2
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area INITIALIZED
                                     24 ;--------------------------------------------------------
                                     25 ; Stack segment in internal ram 
                                     26 ;--------------------------------------------------------
                                     27 	.area	SSEG
      000000                         28 __start__stack:
      000000                         29 	.ds	1
                                     30 
                                     31 ;--------------------------------------------------------
                                     32 ; absolute external ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DABS (ABS)
                                     35 ;--------------------------------------------------------
                                     36 ; interrupt vector 
                                     37 ;--------------------------------------------------------
                                     38 	.area HOME
      000000                         39 __interrupt_vect:
      000000 82v00u00u00             40 	int s_GSINIT ;reset
      000004 82 00 00 00             41 	int 0x0000 ;trap
      000008 82 00 00 00             42 	int 0x0000 ;int0
      00000C 82 00 00 00             43 	int 0x0000 ;int1
      000010 82 00 00 00             44 	int 0x0000 ;int2
      000014 82 00 00 00             45 	int 0x0000 ;int3
      000018 82 00 00 00             46 	int 0x0000 ;int4
      00001C 82 00 00 00             47 	int 0x0000 ;int5
      000020 82 00 00 00             48 	int 0x0000 ;int6
      000024 82 00 00 00             49 	int 0x0000 ;int7
      000028 82 00 00 00             50 	int 0x0000 ;int8
      00002C 82 00 00 00             51 	int 0x0000 ;int9
      000030 82 00 00 00             52 	int 0x0000 ;int10
      000034 82 00 00 00             53 	int 0x0000 ;int11
      000038 82 00 00 00             54 	int 0x0000 ;int12
      00003C 82 00 00 00             55 	int 0x0000 ;int13
      000040 82 00 00 00             56 	int 0x0000 ;int14
      000044 82 00 00 00             57 	int 0x0000 ;int15
      000048 82 00 00 00             58 	int 0x0000 ;int16
      00004C 82 00 00 00             59 	int 0x0000 ;int17
      000050 82 00 00 00             60 	int 0x0000 ;int18
      000054 82 00 00 00             61 	int 0x0000 ;int19
      000058 82 00 00 00             62 	int 0x0000 ;int20
      00005C 82 00 00 00             63 	int 0x0000 ;int21
      000060 82 00 00 00             64 	int 0x0000 ;int22
      000064 82 00 00 00             65 	int 0x0000 ;int23
      000068 82 00 00 00             66 	int 0x0000 ;int24
      00006C 82 00 00 00             67 	int 0x0000 ;int25
      000070 82 00 00 00             68 	int 0x0000 ;int26
      000074 82 00 00 00             69 	int 0x0000 ;int27
      000078 82 00 00 00             70 	int 0x0000 ;int28
      00007C 82 00 00 00             71 	int 0x0000 ;int29
                                     72 ;--------------------------------------------------------
                                     73 ; global & static initialisations
                                     74 ;--------------------------------------------------------
                                     75 	.area HOME
                                     76 	.area GSINIT
                                     77 	.area GSFINAL
                                     78 	.area GSINIT
      000000                         79 __sdcc_gs_init_startup:
      000000                         80 __sdcc_init_data:
                                     81 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]   82 	ldw x, #l_DATA
      000003 27 07            [ 1]   83 	jreq	00002$
      000005                         84 00001$:
      000005 72 4FuFFuFF      [ 1]   85 	clr (s_DATA - 1, x)
      000009 5A               [ 2]   86 	decw x
      00000A 26 F9            [ 1]   87 	jrne	00001$
      00000C                         88 00002$:
      00000C AEr00r00         [ 2]   89 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]   90 	jreq	00004$
      000011                         91 00003$:
      000011 D6uFFuFF         [ 1]   92 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]   93 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]   94 	decw	x
      000018 26 F7            [ 1]   95 	jrne	00003$
      00001A                         96 00004$:
                                     97 ; stm8_genXINIT() end
                                     98 	.area GSFINAL
      000000 CCr00r80         [ 2]   99 	jp	__sdcc_program_startup
                                    100 ;--------------------------------------------------------
                                    101 ; Home
                                    102 ;--------------------------------------------------------
                                    103 	.area HOME
                                    104 	.area HOME
      000080                        105 __sdcc_program_startup:
      000080 CCr00r28         [ 2]  106 	jp	_main
                                    107 ;	return from main will return to caller
                                    108 ;--------------------------------------------------------
                                    109 ; code
                                    110 ;--------------------------------------------------------
                                    111 	.area CODE
                                    112 ;	./running_fire.c: 4: static void delay(uint32_t t)  //объявление статической функции часла типа long переменной t для реализации работы функции delay
                                    113 ;	-----------------------------------------
                                    114 ;	 function delay
                                    115 ;	-----------------------------------------
      000000                        116 _delay:
      000000 52 08            [ 2]  117 	sub	sp, #8
                                    118 ;	./running_fire.c: 6: while(t--);
      000002 16 0B            [ 2]  119 	ldw	y, (0x0b, sp)
      000004 17 05            [ 2]  120 	ldw	(0x05, sp), y
      000006 1E 0D            [ 2]  121 	ldw	x, (0x0d, sp)
      000008                        122 00101$:
      000008 1F 03            [ 2]  123 	ldw	(0x03, sp), x
      00000A 16 05            [ 2]  124 	ldw	y, (0x05, sp)
      00000C 17 01            [ 2]  125 	ldw	(0x01, sp), y
      00000E 1D 00 01         [ 2]  126 	subw	x, #0x0001
      000011 7B 06            [ 1]  127 	ld	a, (0x06, sp)
      000013 A2 00            [ 1]  128 	sbc	a, #0x00
      000015 6B 06            [ 1]  129 	ld	(0x06, sp), a
      000017 7B 05            [ 1]  130 	ld	a, (0x05, sp)
      000019 A2 00            [ 1]  131 	sbc	a, #0x00
      00001B 6B 05            [ 1]  132 	ld	(0x05, sp), a
      00001D 16 03            [ 2]  133 	ldw	y, (0x03, sp)
      00001F 26 E7            [ 1]  134 	jrne	00101$
      000021 16 01            [ 2]  135 	ldw	y, (0x01, sp)
      000023 26 E3            [ 1]  136 	jrne	00101$
      000025 5B 08            [ 2]  137 	addw	sp, #8
      000027 81               [ 4]  138 	ret
                                    139 ;	./running_fire.c: 19: int main( void )    //установка портов и пинов
                                    140 ;	-----------------------------------------
                                    141 ;	 function main
                                    142 ;	-----------------------------------------
      000028                        143 _main:
      000028 88               [ 1]  144 	push	a
                                    145 ;	./running_fire.c: 21: GPIOC->DDR |= 0b11111000; //GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;	//направление данных порта out-0; input-1
      000029 AE 50 0C         [ 2]  146 	ldw	x, #0x500c
      00002C F6               [ 1]  147 	ld	a, (x)
      00002D AA F8            [ 1]  148 	or	a, #0xf8
      00002F F7               [ 1]  149 	ld	(x), a
                                    150 ;	./running_fire.c: 22: GPIOC->CR1 |= 0b11111000; //GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;	//установка подтягивающего резистора open-drain=0; push-pull=1
      000030 AE 50 0D         [ 2]  151 	ldw	x, #0x500d
      000033 F6               [ 1]  152 	ld	a, (x)
      000034 AA F8            [ 1]  153 	or	a, #0xf8
      000036 F7               [ 1]  154 	ld	(x), a
                                    155 ;	./running_fire.c: 23: GPIOC->ODR |= 0b11111000; //GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;	//установка значения бита 0/1
      000037 AE 50 0A         [ 2]  156 	ldw	x, #0x500a
      00003A F6               [ 1]  157 	ld	a, (x)
      00003B AA F8            [ 1]  158 	or	a, #0xf8
      00003D F7               [ 1]  159 	ld	(x), a
      00003E                        160 00104$:
                                    161 ;	./running_fire.c: 27: GPIOC->ODR ^= 0b00001000 << n;;
      00003E AE 50 0A         [ 2]  162 	ldw	x, #0x500a
      000041 F6               [ 1]  163 	ld	a, (x)
      000042 6B 01            [ 1]  164 	ld	(0x01, sp), a
      000044 AE 00 08         [ 2]  165 	ldw	x, #0x0008
      000047 C6u00u01         [ 1]  166 	ld	a, _n+1
      00004A 27 04            [ 1]  167 	jreq	00117$
      00004C                        168 00116$:
      00004C 58               [ 2]  169 	sllw	x
      00004D 4A               [ 1]  170 	dec	a
      00004E 26 FC            [ 1]  171 	jrne	00116$
      000050                        172 00117$:
      000050 9F               [ 1]  173 	ld	a, xl
      000051 18 01            [ 1]  174 	xor	a, (0x01, sp)
      000053 AE 50 0A         [ 2]  175 	ldw	x, #0x500a
      000056 F7               [ 1]  176 	ld	(x), a
                                    177 ;	./running_fire.c: 28: delay(10000);
      000057 4B 10            [ 1]  178 	push	#0x10
      000059 4B 27            [ 1]  179 	push	#0x27
      00005B 5F               [ 1]  180 	clrw	x
      00005C 89               [ 2]  181 	pushw	x
      00005D CDr00r00         [ 4]  182 	call	_delay
      000060 5B 04            [ 2]  183 	addw	sp, #4
                                    184 ;	./running_fire.c: 29: n++;
      000062 CEu00u00         [ 2]  185 	ldw	x, _n+0
      000065 5C               [ 2]  186 	incw	x
                                    187 ;	./running_fire.c: 30: if ( n >= 5 )
      000066 CFu00u00         [ 2]  188 	ldw	_n+0, x
      000069 A3 00 05         [ 2]  189 	cpw	x, #0x0005
      00006C 2F D0            [ 1]  190 	jrslt	00104$
                                    191 ;	./running_fire.c: 32: n = 0;
      00006E 5F               [ 1]  192 	clrw	x
      00006F CFu00u00         [ 2]  193 	ldw	_n+0, x
      000072 20 CA            [ 2]  194 	jra	00104$
      000074 84               [ 1]  195 	pop	a
      000075 81               [ 4]  196 	ret
                                    197 	.area CODE
                                    198 	.area INITIALIZER
                                    199 	.area CABS (ABS)
