                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Thu Mar 29 19:24:34 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module running_fire
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _n
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
      000001                         18 _n::
      000001                         19 	.ds 2
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area INITIALIZED
                                     24 ;--------------------------------------------------------
                                     25 ; Stack segment in internal ram 
                                     26 ;--------------------------------------------------------
                                     27 	.area	SSEG
      000003                         28 __start__stack:
      000003                         29 	.ds	1
                                     30 
                                     31 ;--------------------------------------------------------
                                     32 ; absolute external ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DABS (ABS)
                                     35 ;--------------------------------------------------------
                                     36 ; interrupt vector 
                                     37 ;--------------------------------------------------------
                                     38 	.area HOME
      008000                         39 __interrupt_vect:
      008000 82 00 80 83             40 	int s_GSINIT ;reset
      008004 82 00 00 00             41 	int 0x0000 ;trap
      008008 82 00 00 00             42 	int 0x0000 ;int0
      00800C 82 00 00 00             43 	int 0x0000 ;int1
      008010 82 00 00 00             44 	int 0x0000 ;int2
      008014 82 00 00 00             45 	int 0x0000 ;int3
      008018 82 00 00 00             46 	int 0x0000 ;int4
      00801C 82 00 00 00             47 	int 0x0000 ;int5
      008020 82 00 00 00             48 	int 0x0000 ;int6
      008024 82 00 00 00             49 	int 0x0000 ;int7
      008028 82 00 00 00             50 	int 0x0000 ;int8
      00802C 82 00 00 00             51 	int 0x0000 ;int9
      008030 82 00 00 00             52 	int 0x0000 ;int10
      008034 82 00 00 00             53 	int 0x0000 ;int11
      008038 82 00 00 00             54 	int 0x0000 ;int12
      00803C 82 00 00 00             55 	int 0x0000 ;int13
      008040 82 00 00 00             56 	int 0x0000 ;int14
      008044 82 00 00 00             57 	int 0x0000 ;int15
      008048 82 00 00 00             58 	int 0x0000 ;int16
      00804C 82 00 00 00             59 	int 0x0000 ;int17
      008050 82 00 00 00             60 	int 0x0000 ;int18
      008054 82 00 00 00             61 	int 0x0000 ;int19
      008058 82 00 00 00             62 	int 0x0000 ;int20
      00805C 82 00 00 00             63 	int 0x0000 ;int21
      008060 82 00 00 00             64 	int 0x0000 ;int22
      008064 82 00 00 00             65 	int 0x0000 ;int23
      008068 82 00 00 00             66 	int 0x0000 ;int24
      00806C 82 00 00 00             67 	int 0x0000 ;int25
      008070 82 00 00 00             68 	int 0x0000 ;int26
      008074 82 00 00 00             69 	int 0x0000 ;int27
      008078 82 00 00 00             70 	int 0x0000 ;int28
      00807C 82 00 00 00             71 	int 0x0000 ;int29
                                     72 ;--------------------------------------------------------
                                     73 ; global & static initialisations
                                     74 ;--------------------------------------------------------
                                     75 	.area HOME
                                     76 	.area GSINIT
                                     77 	.area GSFINAL
                                     78 	.area GSINIT
      008083                         79 __sdcc_gs_init_startup:
      008083                         80 __sdcc_init_data:
                                     81 ; stm8_genXINIT() start
      008083 AE 00 02         [ 2]   82 	ldw x, #l_DATA
      008086 27 07            [ 1]   83 	jreq	00002$
      008088                         84 00001$:
      008088 72 4F 00 00      [ 1]   85 	clr (s_DATA - 1, x)
      00808C 5A               [ 2]   86 	decw x
      00808D 26 F9            [ 1]   87 	jrne	00001$
      00808F                         88 00002$:
      00808F AE 00 00         [ 2]   89 	ldw	x, #l_INITIALIZER
      008092 27 09            [ 1]   90 	jreq	00004$
      008094                         91 00003$:
      008094 D6 81 15         [ 1]   92 	ld	a, (s_INITIALIZER - 1, x)
      008097 D7 00 02         [ 1]   93 	ld	(s_INITIALIZED - 1, x), a
      00809A 5A               [ 2]   94 	decw	x
      00809B 26 F7            [ 1]   95 	jrne	00003$
      00809D                         96 00004$:
                                     97 ; stm8_genXINIT() end
                                     98 	.area GSFINAL
      00809D CC 80 80         [ 2]   99 	jp	__sdcc_program_startup
                                    100 ;--------------------------------------------------------
                                    101 ; Home
                                    102 ;--------------------------------------------------------
                                    103 	.area HOME
                                    104 	.area HOME
      008080                        105 __sdcc_program_startup:
      008080 CC 80 C8         [ 2]  106 	jp	_main
                                    107 ;	return from main will return to caller
                                    108 ;--------------------------------------------------------
                                    109 ; code
                                    110 ;--------------------------------------------------------
                                    111 	.area CODE
                                    112 ;	./running_fire.c: 4: static void delay(uint32_t t)  //объявление статической функции часла типа long переменной t для реализации работы функции delay
                                    113 ;	-----------------------------------------
                                    114 ;	 function delay
                                    115 ;	-----------------------------------------
      0080A0                        116 _delay:
      0080A0 52 08            [ 2]  117 	sub	sp, #8
                                    118 ;	./running_fire.c: 6: while(t--);
      0080A2 16 0B            [ 2]  119 	ldw	y, (0x0b, sp)
      0080A4 17 05            [ 2]  120 	ldw	(0x05, sp), y
      0080A6 1E 0D            [ 2]  121 	ldw	x, (0x0d, sp)
      0080A8                        122 00101$:
      0080A8 1F 03            [ 2]  123 	ldw	(0x03, sp), x
      0080AA 16 05            [ 2]  124 	ldw	y, (0x05, sp)
      0080AC 17 01            [ 2]  125 	ldw	(0x01, sp), y
      0080AE 1D 00 01         [ 2]  126 	subw	x, #0x0001
      0080B1 7B 06            [ 1]  127 	ld	a, (0x06, sp)
      0080B3 A2 00            [ 1]  128 	sbc	a, #0x00
      0080B5 6B 06            [ 1]  129 	ld	(0x06, sp), a
      0080B7 7B 05            [ 1]  130 	ld	a, (0x05, sp)
      0080B9 A2 00            [ 1]  131 	sbc	a, #0x00
      0080BB 6B 05            [ 1]  132 	ld	(0x05, sp), a
      0080BD 16 03            [ 2]  133 	ldw	y, (0x03, sp)
      0080BF 26 E7            [ 1]  134 	jrne	00101$
      0080C1 16 01            [ 2]  135 	ldw	y, (0x01, sp)
      0080C3 26 E3            [ 1]  136 	jrne	00101$
      0080C5 5B 08            [ 2]  137 	addw	sp, #8
      0080C7 81               [ 4]  138 	ret
                                    139 ;	./running_fire.c: 19: int main( void )    //установка портов и пинов
                                    140 ;	-----------------------------------------
                                    141 ;	 function main
                                    142 ;	-----------------------------------------
      0080C8                        143 _main:
      0080C8 88               [ 1]  144 	push	a
                                    145 ;	./running_fire.c: 21: GPIOC->DDR |= 0b11111000; //GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;	//направление данных порта out-0; input-1
      0080C9 AE 50 0C         [ 2]  146 	ldw	x, #0x500c
      0080CC F6               [ 1]  147 	ld	a, (x)
      0080CD AA F8            [ 1]  148 	or	a, #0xf8
      0080CF F7               [ 1]  149 	ld	(x), a
                                    150 ;	./running_fire.c: 22: GPIOC->CR1 |= 0b11111000; //GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;	//установка подтягивающего резистора open-drain=0; push-pull=1
      0080D0 AE 50 0D         [ 2]  151 	ldw	x, #0x500d
      0080D3 F6               [ 1]  152 	ld	a, (x)
      0080D4 AA F8            [ 1]  153 	or	a, #0xf8
      0080D6 F7               [ 1]  154 	ld	(x), a
                                    155 ;	./running_fire.c: 23: GPIOC->ODR |= 0b11111000; //GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;	//установка значения бита 0/1
      0080D7 AE 50 0A         [ 2]  156 	ldw	x, #0x500a
      0080DA F6               [ 1]  157 	ld	a, (x)
      0080DB AA F8            [ 1]  158 	or	a, #0xf8
      0080DD F7               [ 1]  159 	ld	(x), a
      0080DE                        160 00104$:
                                    161 ;	./running_fire.c: 27: GPIOC->ODR ^= 0b00001000 << n;;
      0080DE AE 50 0A         [ 2]  162 	ldw	x, #0x500a
      0080E1 F6               [ 1]  163 	ld	a, (x)
      0080E2 6B 01            [ 1]  164 	ld	(0x01, sp), a
      0080E4 AE 00 08         [ 2]  165 	ldw	x, #0x0008
      0080E7 C6 00 02         [ 1]  166 	ld	a, _n+1
      0080EA 27 04            [ 1]  167 	jreq	00117$
      0080EC                        168 00116$:
      0080EC 58               [ 2]  169 	sllw	x
      0080ED 4A               [ 1]  170 	dec	a
      0080EE 26 FC            [ 1]  171 	jrne	00116$
      0080F0                        172 00117$:
      0080F0 9F               [ 1]  173 	ld	a, xl
      0080F1 18 01            [ 1]  174 	xor	a, (0x01, sp)
      0080F3 AE 50 0A         [ 2]  175 	ldw	x, #0x500a
      0080F6 F7               [ 1]  176 	ld	(x), a
                                    177 ;	./running_fire.c: 28: delay(10000);
      0080F7 4B 10            [ 1]  178 	push	#0x10
      0080F9 4B 27            [ 1]  179 	push	#0x27
      0080FB 5F               [ 1]  180 	clrw	x
      0080FC 89               [ 2]  181 	pushw	x
      0080FD CD 80 A0         [ 4]  182 	call	_delay
      008100 5B 04            [ 2]  183 	addw	sp, #4
                                    184 ;	./running_fire.c: 29: n++;
      008102 CE 00 01         [ 2]  185 	ldw	x, _n+0
      008105 5C               [ 2]  186 	incw	x
                                    187 ;	./running_fire.c: 30: if ( n >= 5 )
      008106 CF 00 01         [ 2]  188 	ldw	_n+0, x
      008109 A3 00 05         [ 2]  189 	cpw	x, #0x0005
      00810C 2F D0            [ 1]  190 	jrslt	00104$
                                    191 ;	./running_fire.c: 32: n = 0;
      00810E 5F               [ 1]  192 	clrw	x
      00810F CF 00 01         [ 2]  193 	ldw	_n+0, x
      008112 20 CA            [ 2]  194 	jra	00104$
      008114 84               [ 1]  195 	pop	a
      008115 81               [ 4]  196 	ret
                                    197 	.area CODE
                                    198 	.area INITIALIZER
                                    199 	.area CABS (ABS)
