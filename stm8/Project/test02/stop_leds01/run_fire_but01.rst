                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Mon Apr  2 19:13:57 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module run_fire_but01
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _button
                                     14 	.globl _RunningDn
                                     15 	.globl _RunningUp
                                     16 	.globl _Pin
                                     17 	.globl _delay
                                     18 	.globl _bls
                                     19 	.globl _bs
                                     20 	.globl _msb
                                     21 	.globl _ms
                                     22 	.globl _n
                                     23 	.globl _b
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area DATA
      000001                         28 _b::
      000001                         29 	.ds 1
                                     30 ;--------------------------------------------------------
                                     31 ; ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area INITIALIZED
      000002                         34 _n::
      000002                         35 	.ds 1
      000003                         36 _ms::
      000003                         37 	.ds 4
      000007                         38 _msb::
      000007                         39 	.ds 4
      00000B                         40 _bs::
      00000B                         41 	.ds 1
      00000C                         42 _bls::
      00000C                         43 	.ds 1
                                     44 ;--------------------------------------------------------
                                     45 ; Stack segment in internal ram 
                                     46 ;--------------------------------------------------------
                                     47 	.area	SSEG
      00000D                         48 __start__stack:
      00000D                         49 	.ds	1
                                     50 
                                     51 ;--------------------------------------------------------
                                     52 ; absolute external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area DABS (ABS)
                                     55 ;--------------------------------------------------------
                                     56 ; interrupt vector 
                                     57 ;--------------------------------------------------------
                                     58 	.area HOME
      008000                         59 __interrupt_vect:
      008000 82 00 80 83             60 	int s_GSINIT ;reset
      008004 82 00 00 00             61 	int 0x0000 ;trap
      008008 82 00 00 00             62 	int 0x0000 ;int0
      00800C 82 00 00 00             63 	int 0x0000 ;int1
      008010 82 00 00 00             64 	int 0x0000 ;int2
      008014 82 00 00 00             65 	int 0x0000 ;int3
      008018 82 00 00 00             66 	int 0x0000 ;int4
      00801C 82 00 00 00             67 	int 0x0000 ;int5
      008020 82 00 00 00             68 	int 0x0000 ;int6
      008024 82 00 00 00             69 	int 0x0000 ;int7
      008028 82 00 00 00             70 	int 0x0000 ;int8
      00802C 82 00 00 00             71 	int 0x0000 ;int9
      008030 82 00 00 00             72 	int 0x0000 ;int10
      008034 82 00 00 00             73 	int 0x0000 ;int11
      008038 82 00 00 00             74 	int 0x0000 ;int12
      00803C 82 00 00 00             75 	int 0x0000 ;int13
      008040 82 00 00 00             76 	int 0x0000 ;int14
      008044 82 00 00 00             77 	int 0x0000 ;int15
      008048 82 00 00 00             78 	int 0x0000 ;int16
      00804C 82 00 00 00             79 	int 0x0000 ;int17
      008050 82 00 00 00             80 	int 0x0000 ;int18
      008054 82 00 00 00             81 	int 0x0000 ;int19
      008058 82 00 00 00             82 	int 0x0000 ;int20
      00805C 82 00 00 00             83 	int 0x0000 ;int21
      008060 82 00 00 00             84 	int 0x0000 ;int22
      008064 82 00 00 00             85 	int 0x0000 ;int23
      008068 82 00 00 00             86 	int 0x0000 ;int24
      00806C 82 00 00 00             87 	int 0x0000 ;int25
      008070 82 00 00 00             88 	int 0x0000 ;int26
      008074 82 00 00 00             89 	int 0x0000 ;int27
      008078 82 00 00 00             90 	int 0x0000 ;int28
      00807C 82 00 00 00             91 	int 0x0000 ;int29
                                     92 ;--------------------------------------------------------
                                     93 ; global & static initialisations
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME
                                     96 	.area GSINIT
                                     97 	.area GSFINAL
                                     98 	.area GSINIT
      008083                         99 __sdcc_gs_init_startup:
      008083                        100 __sdcc_init_data:
                                    101 ; stm8_genXINIT() start
      008083 AE 00 01         [ 2]  102 	ldw x, #l_DATA
      008086 27 07            [ 1]  103 	jreq	00002$
      008088                        104 00001$:
      008088 72 4F 00 00      [ 1]  105 	clr (s_DATA - 1, x)
      00808C 5A               [ 2]  106 	decw x
      00808D 26 F9            [ 1]  107 	jrne	00001$
      00808F                        108 00002$:
      00808F AE 00 0B         [ 2]  109 	ldw	x, #l_INITIALIZER
      008092 27 09            [ 1]  110 	jreq	00004$
      008094                        111 00003$:
      008094 D6 82 AB         [ 1]  112 	ld	a, (s_INITIALIZER - 1, x)
      008097 D7 00 01         [ 1]  113 	ld	(s_INITIALIZED - 1, x), a
      00809A 5A               [ 2]  114 	decw	x
      00809B 26 F7            [ 1]  115 	jrne	00003$
      00809D                        116 00004$:
                                    117 ; stm8_genXINIT() end
                                    118 	.area GSFINAL
      00809D CC 80 80         [ 2]  119 	jp	__sdcc_program_startup
                                    120 ;--------------------------------------------------------
                                    121 ; Home
                                    122 ;--------------------------------------------------------
                                    123 	.area HOME
                                    124 	.area HOME
      008080                        125 __sdcc_program_startup:
      008080 CC 82 94         [ 2]  126 	jp	_main
                                    127 ;	return from main will return to caller
                                    128 ;--------------------------------------------------------
                                    129 ; code
                                    130 ;--------------------------------------------------------
                                    131 	.area CODE
                                    132 ;	./run_fire_but01.c: 4: uint32_t delay(uint32_t t)  //объявление статической функции часла типа long переменной t для реализации работы функции delay
                                    133 ;	-----------------------------------------
                                    134 ;	 function delay
                                    135 ;	-----------------------------------------
      0080A0                        136 _delay:
      0080A0 52 04            [ 2]  137 	sub	sp, #4
                                    138 ;	./run_fire_but01.c: 7: while(t--);
      0080A2 90 AE 01 F4      [ 2]  139 	ldw	y, #0x01f4
      0080A6 5F               [ 1]  140 	clrw	x
      0080A7                        141 00101$:
      0080A7 17 03            [ 2]  142 	ldw	(0x03, sp), y
      0080A9 1F 01            [ 2]  143 	ldw	(0x01, sp), x
      0080AB 72 A2 00 01      [ 2]  144 	subw	y, #0x0001
      0080AF 9F               [ 1]  145 	ld	a, xl
      0080B0 A2 00            [ 1]  146 	sbc	a, #0x00
      0080B2 02               [ 1]  147 	rlwa	x
      0080B3 A2 00            [ 1]  148 	sbc	a, #0x00
      0080B5 95               [ 1]  149 	ld	xh, a
      0080B6 0D 04            [ 1]  150 	tnz	(0x04, sp)
      0080B8 26 ED            [ 1]  151 	jrne	00101$
      0080BA 0D 03            [ 1]  152 	tnz	(0x03, sp)
      0080BC 26 E9            [ 1]  153 	jrne	00101$
      0080BE 0D 02            [ 1]  154 	tnz	(0x02, sp)
      0080C0 26 E5            [ 1]  155 	jrne	00101$
      0080C2 0D 01            [ 1]  156 	tnz	(0x01, sp)
      0080C4 26 E1            [ 1]  157 	jrne	00101$
                                    158 ;	./run_fire_but01.c: 8: return t;
      0080C6 51               [ 1]  159 	exgw	x, y
      0080C7 5B 04            [ 2]  160 	addw	sp, #4
      0080C9 81               [ 4]  161 	ret
                                    162 ;	./run_fire_but01.c: 11: static void delay1(uint32_t m)  //объявление статической функции часла типа long переменной t для реализации работы функции delay1
                                    163 ;	-----------------------------------------
                                    164 ;	 function delay1
                                    165 ;	-----------------------------------------
      0080CA                        166 _delay1:
      0080CA 52 08            [ 2]  167 	sub	sp, #8
                                    168 ;	./run_fire_but01.c: 13: while(m--);
      0080CC 16 0B            [ 2]  169 	ldw	y, (0x0b, sp)
      0080CE 17 01            [ 2]  170 	ldw	(0x01, sp), y
      0080D0 1E 0D            [ 2]  171 	ldw	x, (0x0d, sp)
      0080D2                        172 00101$:
      0080D2 1F 07            [ 2]  173 	ldw	(0x07, sp), x
      0080D4 16 01            [ 2]  174 	ldw	y, (0x01, sp)
      0080D6 17 05            [ 2]  175 	ldw	(0x05, sp), y
      0080D8 1D 00 01         [ 2]  176 	subw	x, #0x0001
      0080DB 7B 02            [ 1]  177 	ld	a, (0x02, sp)
      0080DD A2 00            [ 1]  178 	sbc	a, #0x00
      0080DF 6B 02            [ 1]  179 	ld	(0x02, sp), a
      0080E1 7B 01            [ 1]  180 	ld	a, (0x01, sp)
      0080E3 A2 00            [ 1]  181 	sbc	a, #0x00
      0080E5 6B 01            [ 1]  182 	ld	(0x01, sp), a
      0080E7 16 07            [ 2]  183 	ldw	y, (0x07, sp)
      0080E9 26 E7            [ 1]  184 	jrne	00101$
      0080EB 16 05            [ 2]  185 	ldw	y, (0x05, sp)
      0080ED 26 E3            [ 1]  186 	jrne	00101$
      0080EF 5B 08            [ 2]  187 	addw	sp, #8
      0080F1 81               [ 4]  188 	ret
                                    189 ;	./run_fire_but01.c: 32: void Pin()  // настройка портов
                                    190 ;	-----------------------------------------
                                    191 ;	 function Pin
                                    192 ;	-----------------------------------------
      0080F2                        193 _Pin:
                                    194 ;	./run_fire_but01.c: 34: GPIOC->DDR |= 0xf8;   //GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;	//направление данных порта out-0; input-1
      0080F2 AE 50 0C         [ 2]  195 	ldw	x, #0x500c
      0080F5 F6               [ 1]  196 	ld	a, (x)
      0080F6 AA F8            [ 1]  197 	or	a, #0xf8
      0080F8 F7               [ 1]  198 	ld	(x), a
                                    199 ;	./run_fire_but01.c: 35: GPIOC->CR1 |= 0xf8;   //GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;	//установка подтягивающего резистора open-drain=0; push-pull=1
      0080F9 AE 50 0D         [ 2]  200 	ldw	x, #0x500d
      0080FC F6               [ 1]  201 	ld	a, (x)
      0080FD AA F8            [ 1]  202 	or	a, #0xf8
      0080FF F7               [ 1]  203 	ld	(x), a
                                    204 ;	./run_fire_but01.c: 36: GPIOC->ODR |= 0xf8;   //GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;	//установка значения бита 0/1
      008100 AE 50 0A         [ 2]  205 	ldw	x, #0x500a
      008103 F6               [ 1]  206 	ld	a, (x)
      008104 AA F8            [ 1]  207 	or	a, #0xf8
      008106 F7               [ 1]  208 	ld	(x), a
                                    209 ;	./run_fire_but01.c: 38: GPIOD->DDR |= 0x00;
      008107 AE 50 11         [ 2]  210 	ldw	x, #0x5011
      00810A F6               [ 1]  211 	ld	a, (x)
      00810B AE 50 11         [ 2]  212 	ldw	x, #0x5011
      00810E F7               [ 1]  213 	ld	(x), a
                                    214 ;	./run_fire_but01.c: 39: GPIOD->CR1 |= 0x10;
      00810F AE 50 12         [ 2]  215 	ldw	x, #0x5012
      008112 F6               [ 1]  216 	ld	a, (x)
      008113 AA 10            [ 1]  217 	or	a, #0x10
      008115 F7               [ 1]  218 	ld	(x), a
                                    219 ;	./run_fire_but01.c: 40: GPIOD->CR2 |= 0x00;
      008116 AE 50 13         [ 2]  220 	ldw	x, #0x5013
      008119 F6               [ 1]  221 	ld	a, (x)
      00811A AE 50 13         [ 2]  222 	ldw	x, #0x5013
      00811D F7               [ 1]  223 	ld	(x), a
      00811E 81               [ 4]  224 	ret
                                    225 ;	./run_fire_but01.c: 43: void RunningUp()    //функция направление бегущиго огня с л->п
                                    226 ;	-----------------------------------------
                                    227 ;	 function RunningUp
                                    228 ;	-----------------------------------------
      00811F                        229 _RunningUp:
                                    230 ;	./run_fire_but01.c: 45: if(n<=1){
      00811F C6 00 02         [ 1]  231 	ld	a, _n+0
      008122 A1 01            [ 1]  232 	cp	a, #0x01
      008124 2C 4E            [ 1]  233 	jrsgt	00102$
                                    234 ;	./run_fire_but01.c: 46: GPIOC->ODR ^= 0b01010000;    // 1-0b01010000->delay(1000)->2-0b10001000->delay(1000)->3-(1)->delay(1000)->(2)->delay(1000)->4-0b11011000;
      008126 AE 50 0A         [ 2]  235 	ldw	x, #0x500a
      008129 F6               [ 1]  236 	ld	a, (x)
      00812A A8 50            [ 1]  237 	xor	a, #0x50
      00812C F7               [ 1]  238 	ld	(x), a
                                    239 ;	./run_fire_but01.c: 47: delay1(10000);
      00812D 4B 10            [ 1]  240 	push	#0x10
      00812F 4B 27            [ 1]  241 	push	#0x27
      008131 5F               [ 1]  242 	clrw	x
      008132 89               [ 2]  243 	pushw	x
      008133 CD 80 CA         [ 4]  244 	call	_delay1
      008136 5B 04            [ 2]  245 	addw	sp, #4
                                    246 ;	./run_fire_but01.c: 48: GPIOC->ODR |= 0b01010000;
      008138 AE 50 0A         [ 2]  247 	ldw	x, #0x500a
      00813B F6               [ 1]  248 	ld	a, (x)
      00813C AA 50            [ 1]  249 	or	a, #0x50
      00813E F7               [ 1]  250 	ld	(x), a
                                    251 ;	./run_fire_but01.c: 49: delay1(10000);
      00813F 4B 10            [ 1]  252 	push	#0x10
      008141 4B 27            [ 1]  253 	push	#0x27
      008143 5F               [ 1]  254 	clrw	x
      008144 89               [ 2]  255 	pushw	x
      008145 CD 80 CA         [ 4]  256 	call	_delay1
      008148 5B 04            [ 2]  257 	addw	sp, #4
                                    258 ;	./run_fire_but01.c: 50: GPIOC->ODR ^= 0b10001000;    // 1-0b01010000->delay(1000)->2-0b10001000->delay(1000)->3-(1)->delay(1000)->(2)->delay(1000)->4-0b11011000;
      00814A AE 50 0A         [ 2]  259 	ldw	x, #0x500a
      00814D F6               [ 1]  260 	ld	a, (x)
      00814E A8 88            [ 1]  261 	xor	a, #0x88
      008150 F7               [ 1]  262 	ld	(x), a
                                    263 ;	./run_fire_but01.c: 51: delay1(10000);
      008151 4B 10            [ 1]  264 	push	#0x10
      008153 4B 27            [ 1]  265 	push	#0x27
      008155 5F               [ 1]  266 	clrw	x
      008156 89               [ 2]  267 	pushw	x
      008157 CD 80 CA         [ 4]  268 	call	_delay1
      00815A 5B 04            [ 2]  269 	addw	sp, #4
                                    270 ;	./run_fire_but01.c: 52: GPIOC->ODR |= 0b10001000;
      00815C AE 50 0A         [ 2]  271 	ldw	x, #0x500a
      00815F F6               [ 1]  272 	ld	a, (x)
      008160 AA 88            [ 1]  273 	or	a, #0x88
      008162 F7               [ 1]  274 	ld	(x), a
                                    275 ;	./run_fire_but01.c: 53: delay1(10000);
      008163 4B 10            [ 1]  276 	push	#0x10
      008165 4B 27            [ 1]  277 	push	#0x27
      008167 5F               [ 1]  278 	clrw	x
      008168 89               [ 2]  279 	pushw	x
      008169 CD 80 CA         [ 4]  280 	call	_delay1
      00816C 5B 04            [ 2]  281 	addw	sp, #4
                                    282 ;	./run_fire_but01.c: 54: n++;
      00816E 72 5C 00 02      [ 1]  283 	inc	_n+0
      008172 20 07            [ 2]  284 	jra	00104$
      008174                        285 00102$:
                                    286 ;	./run_fire_but01.c: 58: GPIOC->ODR ^= 0b11011000;
      008174 AE 50 0A         [ 2]  287 	ldw	x, #0x500a
      008177 F6               [ 1]  288 	ld	a, (x)
      008178 A8 D8            [ 1]  289 	xor	a, #0xd8
      00817A F7               [ 1]  290 	ld	(x), a
      00817B                        291 00104$:
      00817B 81               [ 4]  292 	ret
                                    293 ;	./run_fire_but01.c: 62: void RunningDn()    //функция направление бегущиго огня с п->л
                                    294 ;	-----------------------------------------
                                    295 ;	 function RunningDn
                                    296 ;	-----------------------------------------
      00817C                        297 _RunningDn:
      00817C 52 02            [ 2]  298 	sub	sp, #2
                                    299 ;	./run_fire_but01.c: 64: GPIOC->ODR ^= 0x80 >> n;
      00817E AE 50 0A         [ 2]  300 	ldw	x, #0x500a
      008181 F6               [ 1]  301 	ld	a, (x)
      008182 6B 02            [ 1]  302 	ld	(0x02, sp), a
      008184 A6 80            [ 1]  303 	ld	a, #0x80
      008186 88               [ 1]  304 	push	a
      008187 C6 00 02         [ 1]  305 	ld	a, _n+0
      00818A 27 05            [ 1]  306 	jreq	00110$
      00818C                        307 00109$:
      00818C 04 01            [ 1]  308 	srl	(1, sp)
      00818E 4A               [ 1]  309 	dec	a
      00818F 26 FB            [ 1]  310 	jrne	00109$
      008191                        311 00110$:
      008191 84               [ 1]  312 	pop	a
      008192 18 02            [ 1]  313 	xor	a, (0x02, sp)
      008194 AE 50 0A         [ 2]  314 	ldw	x, #0x500a
      008197 F7               [ 1]  315 	ld	(x), a
                                    316 ;	./run_fire_but01.c: 65: delay1(10000);
      008198 4B 10            [ 1]  317 	push	#0x10
      00819A 4B 27            [ 1]  318 	push	#0x27
      00819C 5F               [ 1]  319 	clrw	x
      00819D 89               [ 2]  320 	pushw	x
      00819E CD 80 CA         [ 4]  321 	call	_delay1
      0081A1 5B 04            [ 2]  322 	addw	sp, #4
                                    323 ;	./run_fire_but01.c: 66: GPIOC->ODR |= 0x80 >> n;
      0081A3 AE 50 0A         [ 2]  324 	ldw	x, #0x500a
      0081A6 F6               [ 1]  325 	ld	a, (x)
      0081A7 6B 01            [ 1]  326 	ld	(0x01, sp), a
      0081A9 A6 80            [ 1]  327 	ld	a, #0x80
      0081AB 88               [ 1]  328 	push	a
      0081AC C6 00 02         [ 1]  329 	ld	a, _n+0
      0081AF 27 05            [ 1]  330 	jreq	00112$
      0081B1                        331 00111$:
      0081B1 04 01            [ 1]  332 	srl	(1, sp)
      0081B3 4A               [ 1]  333 	dec	a
      0081B4 26 FB            [ 1]  334 	jrne	00111$
      0081B6                        335 00112$:
      0081B6 84               [ 1]  336 	pop	a
      0081B7 1A 01            [ 1]  337 	or	a, (0x01, sp)
      0081B9 AE 50 0A         [ 2]  338 	ldw	x, #0x500a
      0081BC F7               [ 1]  339 	ld	(x), a
                                    340 ;	./run_fire_but01.c: 68: n++;
      0081BD C6 00 02         [ 1]  341 	ld	a, _n+0
      0081C0 4C               [ 1]  342 	inc	a
                                    343 ;	./run_fire_but01.c: 70: if ( n>=5 )
      0081C1 C7 00 02         [ 1]  344 	ld	_n+0, a
      0081C4 A1 05            [ 1]  345 	cp	a, #0x05
      0081C6 2F 04            [ 1]  346 	jrslt	00103$
                                    347 ;	./run_fire_but01.c: 73: n=0;
      0081C8 72 5F 00 02      [ 1]  348 	clr	_n+0
      0081CC                        349 00103$:
      0081CC 5B 02            [ 2]  350 	addw	sp, #2
      0081CE 81               [ 4]  351 	ret
                                    352 ;	./run_fire_but01.c: 77: uint32_t button ()
                                    353 ;	-----------------------------------------
                                    354 ;	 function button
                                    355 ;	-----------------------------------------
      0081CF                        356 _button:
      0081CF 52 08            [ 2]  357 	sub	sp, #8
                                    358 ;	./run_fire_but01.c: 80: if ((GPIOD->IDR & 0x10) ==0x00 && !bs && (delay(ms)-msb)>50) // фиксируем нажатие кнопки
      0081D1 AE 50 10         [ 2]  359 	ldw	x, #0x5010
      0081D4 F6               [ 1]  360 	ld	a, (x)
      0081D5 A5 10            [ 1]  361 	bcp	a, #0x10
      0081D7 26 4D            [ 1]  362 	jrne	00102$
      0081D9 72 01 00 0B 02   [ 2]  363 	btjf	_bs+0, #0, 00136$
      0081DE 20 46            [ 2]  364 	jra	00102$
      0081E0                        365 00136$:
      0081E0 3B 00 06         [ 1]  366 	push	_ms+3
      0081E3 3B 00 05         [ 1]  367 	push	_ms+2
      0081E6 3B 00 04         [ 1]  368 	push	_ms+1
      0081E9 3B 00 03         [ 1]  369 	push	_ms+0
      0081EC CD 80 A0         [ 4]  370 	call	_delay
      0081EF 5B 04            [ 2]  371 	addw	sp, #4
      0081F1 51               [ 1]  372 	exgw	x, y
      0081F2 72 B2 00 09      [ 2]  373 	subw	y, _msb+2
      0081F6 17 07            [ 2]  374 	ldw	(0x07, sp), y
      0081F8 9F               [ 1]  375 	ld	a, xl
      0081F9 C2 00 08         [ 1]  376 	sbc	a, _msb+1
      0081FC 6B 06            [ 1]  377 	ld	(0x06, sp), a
      0081FE 9E               [ 1]  378 	ld	a, xh
      0081FF C2 00 07         [ 1]  379 	sbc	a, _msb+0
      008202 6B 05            [ 1]  380 	ld	(0x05, sp), a
      008204 AE 00 32         [ 2]  381 	ldw	x, #0x0032
      008207 13 07            [ 2]  382 	cpw	x, (0x07, sp)
      008209 4F               [ 1]  383 	clr	a
      00820A 12 06            [ 1]  384 	sbc	a, (0x06, sp)
      00820C 4F               [ 1]  385 	clr	a
      00820D 12 05            [ 1]  386 	sbc	a, (0x05, sp)
      00820F 24 15            [ 1]  387 	jrnc	00102$
                                    388 ;	./run_fire_but01.c: 82: bs=1;
      008211 35 01 00 0B      [ 1]  389 	mov	_bs+0, #0x01
                                    390 ;	./run_fire_but01.c: 83: msb=ms;
      008215 90 CE 00 05      [ 2]  391 	ldw	y, _ms+2
      008219 CE 00 03         [ 2]  392 	ldw	x, _ms+0
      00821C 90 CF 00 09      [ 2]  393 	ldw	_msb+2, y
      008220 CF 00 07         [ 2]  394 	ldw	_msb+0, x
                                    395 ;	./run_fire_but01.c: 84: b^=0;
      008223 C6 00 01         [ 1]  396 	ld	a, _b+0
      008226                        397 00102$:
                                    398 ;	./run_fire_but01.c: 87: if ((GPIOD->IDR & 0x10) ==0x10 && bs && (delay(ms)-msb)>50) // фиксируем отпускание  нажатие кнопки
      008226 AE 50 10         [ 2]  399 	ldw	x, #0x5010
      008229 F6               [ 1]  400 	ld	a, (x)
      00822A A4 10            [ 1]  401 	and	a, #0x10
      00822C A1 10            [ 1]  402 	cp	a, #0x10
      00822E 26 54            [ 1]  403 	jrne	00106$
      008230 72 00 00 0B 02   [ 2]  404 	btjt	_bs+0, #0, 00141$
      008235 20 4D            [ 2]  405 	jra	00106$
      008237                        406 00141$:
      008237 3B 00 06         [ 1]  407 	push	_ms+3
      00823A 3B 00 05         [ 1]  408 	push	_ms+2
      00823D 3B 00 04         [ 1]  409 	push	_ms+1
      008240 3B 00 03         [ 1]  410 	push	_ms+0
      008243 CD 80 A0         [ 4]  411 	call	_delay
      008246 5B 04            [ 2]  412 	addw	sp, #4
      008248 51               [ 1]  413 	exgw	x, y
      008249 72 B2 00 09      [ 2]  414 	subw	y, _msb+2
      00824D 17 03            [ 2]  415 	ldw	(0x03, sp), y
      00824F 9F               [ 1]  416 	ld	a, xl
      008250 C2 00 08         [ 1]  417 	sbc	a, _msb+1
      008253 6B 02            [ 1]  418 	ld	(0x02, sp), a
      008255 9E               [ 1]  419 	ld	a, xh
      008256 C2 00 07         [ 1]  420 	sbc	a, _msb+0
      008259 6B 01            [ 1]  421 	ld	(0x01, sp), a
      00825B AE 00 32         [ 2]  422 	ldw	x, #0x0032
      00825E 13 03            [ 2]  423 	cpw	x, (0x03, sp)
      008260 4F               [ 1]  424 	clr	a
      008261 12 02            [ 1]  425 	sbc	a, (0x02, sp)
      008263 4F               [ 1]  426 	clr	a
      008264 12 01            [ 1]  427 	sbc	a, (0x01, sp)
      008266 24 1C            [ 1]  428 	jrnc	00106$
                                    429 ;	./run_fire_but01.c: 89: bs=0;
      008268 72 5F 00 0B      [ 1]  430 	clr	_bs+0
                                    431 ;	./run_fire_but01.c: 90: msb=ms;
      00826C 90 CE 00 05      [ 2]  432 	ldw	y, _ms+2
      008270 CE 00 03         [ 2]  433 	ldw	x, _ms+0
      008273 90 CF 00 09      [ 2]  434 	ldw	_msb+2, y
      008277 CF 00 07         [ 2]  435 	ldw	_msb+0, x
                                    436 ;	./run_fire_but01.c: 91: b^=1;
      00827A C6 00 01         [ 1]  437 	ld	a, _b+0
      00827D A0 01            [ 1]  438 	sub	a, #0x01
      00827F 4F               [ 1]  439 	clr	a
      008280 49               [ 1]  440 	rlc	a
      008281 C7 00 01         [ 1]  441 	ld	_b+0, a
      008284                        442 00106$:
                                    443 ;	./run_fire_but01.c: 93: return b;
      008284 C6 00 01         [ 1]  444 	ld	a, _b+0
      008287 97               [ 1]  445 	ld	xl, a
      008288 49               [ 1]  446 	rlc	a
      008289 4F               [ 1]  447 	clr	a
      00828A A2 00            [ 1]  448 	sbc	a, #0x00
      00828C 95               [ 1]  449 	ld	xh, a
      00828D 90 97            [ 1]  450 	ld	yl, a
      00828F 90 95            [ 1]  451 	ld	yh, a
      008291 5B 08            [ 2]  452 	addw	sp, #8
      008293 81               [ 4]  453 	ret
                                    454 ;	./run_fire_but01.c: 97: int main( void )    //основная программа
                                    455 ;	-----------------------------------------
                                    456 ;	 function main
                                    457 ;	-----------------------------------------
      008294                        458 _main:
                                    459 ;	./run_fire_but01.c: 99: Pin();
      008294 CD 80 F2         [ 4]  460 	call	_Pin
                                    461 ;	./run_fire_but01.c: 101: while(1)    //бесконечный цикл
      008297                        462 00105$:
                                    463 ;	./run_fire_but01.c: 103: button(); 
      008297 CD 81 CF         [ 4]  464 	call	_button
                                    465 ;	./run_fire_but01.c: 105: if (b==0) // проверяем нажатие кнопки
      00829A 72 01 00 01 02   [ 2]  466 	btjf	_b+0, #0, 00117$
      00829F 20 05            [ 2]  467 	jra	00102$
      0082A1                        468 00117$:
                                    469 ;	./run_fire_but01.c: 107: RunningUp();
      0082A1 CD 81 1F         [ 4]  470 	call	_RunningUp
      0082A4 20 F1            [ 2]  471 	jra	00105$
      0082A6                        472 00102$:
                                    473 ;	./run_fire_but01.c: 112: RunningDn();
      0082A6 CD 81 7C         [ 4]  474 	call	_RunningDn
      0082A9 20 EC            [ 2]  475 	jra	00105$
      0082AB 81               [ 4]  476 	ret
                                    477 	.area CODE
                                    478 	.area INITIALIZER
      0082AC                        479 __xinit__n:
      0082AC 00                     480 	.db #0x00	;  0
      0082AD                        481 __xinit__ms:
      0082AD 00 00 00 00            482 	.byte #0x00,#0x00,#0x00,#0x00	; 0
      0082B1                        483 __xinit__msb:
      0082B1 00 00 00 00            484 	.byte #0x00,#0x00,#0x00,#0x00	; 0
      0082B5                        485 __xinit__bs:
      0082B5 00                     486 	.db #0x00	;  0
      0082B6                        487 __xinit__bls:
      0082B6 00                     488 	.db #0x00	;  0
                                    489 	.area CABS (ABS)
