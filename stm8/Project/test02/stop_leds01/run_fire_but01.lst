                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Mon Apr  2 19:13:57 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module run_fire_but01
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _button
                                     14 	.globl _RunningDn
                                     15 	.globl _RunningUp
                                     16 	.globl _Pin
                                     17 	.globl _delay
                                     18 	.globl _bls
                                     19 	.globl _bs
                                     20 	.globl _msb
                                     21 	.globl _ms
                                     22 	.globl _n
                                     23 	.globl _b
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area DATA
      000000                         28 _b::
      000000                         29 	.ds 1
                                     30 ;--------------------------------------------------------
                                     31 ; ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area INITIALIZED
      000000                         34 _n::
      000000                         35 	.ds 1
      000001                         36 _ms::
      000001                         37 	.ds 4
      000005                         38 _msb::
      000005                         39 	.ds 4
      000009                         40 _bs::
      000009                         41 	.ds 1
      00000A                         42 _bls::
      00000A                         43 	.ds 1
                                     44 ;--------------------------------------------------------
                                     45 ; Stack segment in internal ram 
                                     46 ;--------------------------------------------------------
                                     47 	.area	SSEG
      000000                         48 __start__stack:
      000000                         49 	.ds	1
                                     50 
                                     51 ;--------------------------------------------------------
                                     52 ; absolute external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area DABS (ABS)
                                     55 ;--------------------------------------------------------
                                     56 ; interrupt vector 
                                     57 ;--------------------------------------------------------
                                     58 	.area HOME
      000000                         59 __interrupt_vect:
      000000 82v00u00u00             60 	int s_GSINIT ;reset
      000004 82 00 00 00             61 	int 0x0000 ;trap
      000008 82 00 00 00             62 	int 0x0000 ;int0
      00000C 82 00 00 00             63 	int 0x0000 ;int1
      000010 82 00 00 00             64 	int 0x0000 ;int2
      000014 82 00 00 00             65 	int 0x0000 ;int3
      000018 82 00 00 00             66 	int 0x0000 ;int4
      00001C 82 00 00 00             67 	int 0x0000 ;int5
      000020 82 00 00 00             68 	int 0x0000 ;int6
      000024 82 00 00 00             69 	int 0x0000 ;int7
      000028 82 00 00 00             70 	int 0x0000 ;int8
      00002C 82 00 00 00             71 	int 0x0000 ;int9
      000030 82 00 00 00             72 	int 0x0000 ;int10
      000034 82 00 00 00             73 	int 0x0000 ;int11
      000038 82 00 00 00             74 	int 0x0000 ;int12
      00003C 82 00 00 00             75 	int 0x0000 ;int13
      000040 82 00 00 00             76 	int 0x0000 ;int14
      000044 82 00 00 00             77 	int 0x0000 ;int15
      000048 82 00 00 00             78 	int 0x0000 ;int16
      00004C 82 00 00 00             79 	int 0x0000 ;int17
      000050 82 00 00 00             80 	int 0x0000 ;int18
      000054 82 00 00 00             81 	int 0x0000 ;int19
      000058 82 00 00 00             82 	int 0x0000 ;int20
      00005C 82 00 00 00             83 	int 0x0000 ;int21
      000060 82 00 00 00             84 	int 0x0000 ;int22
      000064 82 00 00 00             85 	int 0x0000 ;int23
      000068 82 00 00 00             86 	int 0x0000 ;int24
      00006C 82 00 00 00             87 	int 0x0000 ;int25
      000070 82 00 00 00             88 	int 0x0000 ;int26
      000074 82 00 00 00             89 	int 0x0000 ;int27
      000078 82 00 00 00             90 	int 0x0000 ;int28
      00007C 82 00 00 00             91 	int 0x0000 ;int29
                                     92 ;--------------------------------------------------------
                                     93 ; global & static initialisations
                                     94 ;--------------------------------------------------------
                                     95 	.area HOME
                                     96 	.area GSINIT
                                     97 	.area GSFINAL
                                     98 	.area GSINIT
      000000                         99 __sdcc_gs_init_startup:
      000000                        100 __sdcc_init_data:
                                    101 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]  102 	ldw x, #l_DATA
      000003 27 07            [ 1]  103 	jreq	00002$
      000005                        104 00001$:
      000005 72 4FuFFuFF      [ 1]  105 	clr (s_DATA - 1, x)
      000009 5A               [ 2]  106 	decw x
      00000A 26 F9            [ 1]  107 	jrne	00001$
      00000C                        108 00002$:
      00000C AEr00r00         [ 2]  109 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]  110 	jreq	00004$
      000011                        111 00003$:
      000011 D6uFFuFF         [ 1]  112 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]  113 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]  114 	decw	x
      000018 26 F7            [ 1]  115 	jrne	00003$
      00001A                        116 00004$:
                                    117 ; stm8_genXINIT() end
                                    118 	.area GSFINAL
      000000 CCr00r80         [ 2]  119 	jp	__sdcc_program_startup
                                    120 ;--------------------------------------------------------
                                    121 ; Home
                                    122 ;--------------------------------------------------------
                                    123 	.area HOME
                                    124 	.area HOME
      000080                        125 __sdcc_program_startup:
      000080 CCr01rF4         [ 2]  126 	jp	_main
                                    127 ;	return from main will return to caller
                                    128 ;--------------------------------------------------------
                                    129 ; code
                                    130 ;--------------------------------------------------------
                                    131 	.area CODE
                                    132 ;	./run_fire_but01.c: 4: uint32_t delay(uint32_t t)  //объявление статической функции часла типа long переменной t для реализации работы функции delay
                                    133 ;	-----------------------------------------
                                    134 ;	 function delay
                                    135 ;	-----------------------------------------
      000000                        136 _delay:
      000000 52 04            [ 2]  137 	sub	sp, #4
                                    138 ;	./run_fire_but01.c: 7: while(t--);
      000002 90 AE 01 F4      [ 2]  139 	ldw	y, #0x01f4
      000006 5F               [ 1]  140 	clrw	x
      000007                        141 00101$:
      000007 17 03            [ 2]  142 	ldw	(0x03, sp), y
      000009 1F 01            [ 2]  143 	ldw	(0x01, sp), x
      00000B 72 A2 00 01      [ 2]  144 	subw	y, #0x0001
      00000F 9F               [ 1]  145 	ld	a, xl
      000010 A2 00            [ 1]  146 	sbc	a, #0x00
      000012 02               [ 1]  147 	rlwa	x
      000013 A2 00            [ 1]  148 	sbc	a, #0x00
      000015 95               [ 1]  149 	ld	xh, a
      000016 0D 04            [ 1]  150 	tnz	(0x04, sp)
      000018 26 ED            [ 1]  151 	jrne	00101$
      00001A 0D 03            [ 1]  152 	tnz	(0x03, sp)
      00001C 26 E9            [ 1]  153 	jrne	00101$
      00001E 0D 02            [ 1]  154 	tnz	(0x02, sp)
      000020 26 E5            [ 1]  155 	jrne	00101$
      000022 0D 01            [ 1]  156 	tnz	(0x01, sp)
      000024 26 E1            [ 1]  157 	jrne	00101$
                                    158 ;	./run_fire_but01.c: 8: return t;
      000026 51               [ 1]  159 	exgw	x, y
      000027 5B 04            [ 2]  160 	addw	sp, #4
      000029 81               [ 4]  161 	ret
                                    162 ;	./run_fire_but01.c: 11: static void delay1(uint32_t m)  //объявление статической функции часла типа long переменной t для реализации работы функции delay1
                                    163 ;	-----------------------------------------
                                    164 ;	 function delay1
                                    165 ;	-----------------------------------------
      00002A                        166 _delay1:
      00002A 52 08            [ 2]  167 	sub	sp, #8
                                    168 ;	./run_fire_but01.c: 13: while(m--);
      00002C 16 0B            [ 2]  169 	ldw	y, (0x0b, sp)
      00002E 17 01            [ 2]  170 	ldw	(0x01, sp), y
      000030 1E 0D            [ 2]  171 	ldw	x, (0x0d, sp)
      000032                        172 00101$:
      000032 1F 07            [ 2]  173 	ldw	(0x07, sp), x
      000034 16 01            [ 2]  174 	ldw	y, (0x01, sp)
      000036 17 05            [ 2]  175 	ldw	(0x05, sp), y
      000038 1D 00 01         [ 2]  176 	subw	x, #0x0001
      00003B 7B 02            [ 1]  177 	ld	a, (0x02, sp)
      00003D A2 00            [ 1]  178 	sbc	a, #0x00
      00003F 6B 02            [ 1]  179 	ld	(0x02, sp), a
      000041 7B 01            [ 1]  180 	ld	a, (0x01, sp)
      000043 A2 00            [ 1]  181 	sbc	a, #0x00
      000045 6B 01            [ 1]  182 	ld	(0x01, sp), a
      000047 16 07            [ 2]  183 	ldw	y, (0x07, sp)
      000049 26 E7            [ 1]  184 	jrne	00101$
      00004B 16 05            [ 2]  185 	ldw	y, (0x05, sp)
      00004D 26 E3            [ 1]  186 	jrne	00101$
      00004F 5B 08            [ 2]  187 	addw	sp, #8
      000051 81               [ 4]  188 	ret
                                    189 ;	./run_fire_but01.c: 32: void Pin()  // настройка портов
                                    190 ;	-----------------------------------------
                                    191 ;	 function Pin
                                    192 ;	-----------------------------------------
      000052                        193 _Pin:
                                    194 ;	./run_fire_but01.c: 34: GPIOC->DDR |= 0xf8;   //GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;	//направление данных порта out-0; input-1
      000052 AE 50 0C         [ 2]  195 	ldw	x, #0x500c
      000055 F6               [ 1]  196 	ld	a, (x)
      000056 AA F8            [ 1]  197 	or	a, #0xf8
      000058 F7               [ 1]  198 	ld	(x), a
                                    199 ;	./run_fire_but01.c: 35: GPIOC->CR1 |= 0xf8;   //GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;	//установка подтягивающего резистора open-drain=0; push-pull=1
      000059 AE 50 0D         [ 2]  200 	ldw	x, #0x500d
      00005C F6               [ 1]  201 	ld	a, (x)
      00005D AA F8            [ 1]  202 	or	a, #0xf8
      00005F F7               [ 1]  203 	ld	(x), a
                                    204 ;	./run_fire_but01.c: 36: GPIOC->ODR |= 0xf8;   //GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;	//установка значения бита 0/1
      000060 AE 50 0A         [ 2]  205 	ldw	x, #0x500a
      000063 F6               [ 1]  206 	ld	a, (x)
      000064 AA F8            [ 1]  207 	or	a, #0xf8
      000066 F7               [ 1]  208 	ld	(x), a
                                    209 ;	./run_fire_but01.c: 38: GPIOD->DDR |= 0x00;
      000067 AE 50 11         [ 2]  210 	ldw	x, #0x5011
      00006A F6               [ 1]  211 	ld	a, (x)
      00006B AE 50 11         [ 2]  212 	ldw	x, #0x5011
      00006E F7               [ 1]  213 	ld	(x), a
                                    214 ;	./run_fire_but01.c: 39: GPIOD->CR1 |= 0x10;
      00006F AE 50 12         [ 2]  215 	ldw	x, #0x5012
      000072 F6               [ 1]  216 	ld	a, (x)
      000073 AA 10            [ 1]  217 	or	a, #0x10
      000075 F7               [ 1]  218 	ld	(x), a
                                    219 ;	./run_fire_but01.c: 40: GPIOD->CR2 |= 0x00;
      000076 AE 50 13         [ 2]  220 	ldw	x, #0x5013
      000079 F6               [ 1]  221 	ld	a, (x)
      00007A AE 50 13         [ 2]  222 	ldw	x, #0x5013
      00007D F7               [ 1]  223 	ld	(x), a
      00007E 81               [ 4]  224 	ret
                                    225 ;	./run_fire_but01.c: 43: void RunningUp()    //функция направление бегущиго огня с л->п
                                    226 ;	-----------------------------------------
                                    227 ;	 function RunningUp
                                    228 ;	-----------------------------------------
      00007F                        229 _RunningUp:
                                    230 ;	./run_fire_but01.c: 45: if(n<=1){
      00007F C6u00u00         [ 1]  231 	ld	a, _n+0
      000082 A1 01            [ 1]  232 	cp	a, #0x01
      000084 2C 4E            [ 1]  233 	jrsgt	00102$
                                    234 ;	./run_fire_but01.c: 46: GPIOC->ODR ^= 0b01010000;    // 1-0b01010000->delay(1000)->2-0b10001000->delay(1000)->3-(1)->delay(1000)->(2)->delay(1000)->4-0b11011000;
      000086 AE 50 0A         [ 2]  235 	ldw	x, #0x500a
      000089 F6               [ 1]  236 	ld	a, (x)
      00008A A8 50            [ 1]  237 	xor	a, #0x50
      00008C F7               [ 1]  238 	ld	(x), a
                                    239 ;	./run_fire_but01.c: 47: delay1(10000);
      00008D 4B 10            [ 1]  240 	push	#0x10
      00008F 4B 27            [ 1]  241 	push	#0x27
      000091 5F               [ 1]  242 	clrw	x
      000092 89               [ 2]  243 	pushw	x
      000093 CDr00r2A         [ 4]  244 	call	_delay1
      000096 5B 04            [ 2]  245 	addw	sp, #4
                                    246 ;	./run_fire_but01.c: 48: GPIOC->ODR |= 0b01010000;
      000098 AE 50 0A         [ 2]  247 	ldw	x, #0x500a
      00009B F6               [ 1]  248 	ld	a, (x)
      00009C AA 50            [ 1]  249 	or	a, #0x50
      00009E F7               [ 1]  250 	ld	(x), a
                                    251 ;	./run_fire_but01.c: 49: delay1(10000);
      00009F 4B 10            [ 1]  252 	push	#0x10
      0000A1 4B 27            [ 1]  253 	push	#0x27
      0000A3 5F               [ 1]  254 	clrw	x
      0000A4 89               [ 2]  255 	pushw	x
      0000A5 CDr00r2A         [ 4]  256 	call	_delay1
      0000A8 5B 04            [ 2]  257 	addw	sp, #4
                                    258 ;	./run_fire_but01.c: 50: GPIOC->ODR ^= 0b10001000;    // 1-0b01010000->delay(1000)->2-0b10001000->delay(1000)->3-(1)->delay(1000)->(2)->delay(1000)->4-0b11011000;
      0000AA AE 50 0A         [ 2]  259 	ldw	x, #0x500a
      0000AD F6               [ 1]  260 	ld	a, (x)
      0000AE A8 88            [ 1]  261 	xor	a, #0x88
      0000B0 F7               [ 1]  262 	ld	(x), a
                                    263 ;	./run_fire_but01.c: 51: delay1(10000);
      0000B1 4B 10            [ 1]  264 	push	#0x10
      0000B3 4B 27            [ 1]  265 	push	#0x27
      0000B5 5F               [ 1]  266 	clrw	x
      0000B6 89               [ 2]  267 	pushw	x
      0000B7 CDr00r2A         [ 4]  268 	call	_delay1
      0000BA 5B 04            [ 2]  269 	addw	sp, #4
                                    270 ;	./run_fire_but01.c: 52: GPIOC->ODR |= 0b10001000;
      0000BC AE 50 0A         [ 2]  271 	ldw	x, #0x500a
      0000BF F6               [ 1]  272 	ld	a, (x)
      0000C0 AA 88            [ 1]  273 	or	a, #0x88
      0000C2 F7               [ 1]  274 	ld	(x), a
                                    275 ;	./run_fire_but01.c: 53: delay1(10000);
      0000C3 4B 10            [ 1]  276 	push	#0x10
      0000C5 4B 27            [ 1]  277 	push	#0x27
      0000C7 5F               [ 1]  278 	clrw	x
      0000C8 89               [ 2]  279 	pushw	x
      0000C9 CDr00r2A         [ 4]  280 	call	_delay1
      0000CC 5B 04            [ 2]  281 	addw	sp, #4
                                    282 ;	./run_fire_but01.c: 54: n++;
      0000CE 72 5Cu00u00      [ 1]  283 	inc	_n+0
      0000D2 20 07            [ 2]  284 	jra	00104$
      0000D4                        285 00102$:
                                    286 ;	./run_fire_but01.c: 58: GPIOC->ODR ^= 0b11011000;
      0000D4 AE 50 0A         [ 2]  287 	ldw	x, #0x500a
      0000D7 F6               [ 1]  288 	ld	a, (x)
      0000D8 A8 D8            [ 1]  289 	xor	a, #0xd8
      0000DA F7               [ 1]  290 	ld	(x), a
      0000DB                        291 00104$:
      0000DB 81               [ 4]  292 	ret
                                    293 ;	./run_fire_but01.c: 62: void RunningDn()    //функция направление бегущиго огня с п->л
                                    294 ;	-----------------------------------------
                                    295 ;	 function RunningDn
                                    296 ;	-----------------------------------------
      0000DC                        297 _RunningDn:
      0000DC 52 02            [ 2]  298 	sub	sp, #2
                                    299 ;	./run_fire_but01.c: 64: GPIOC->ODR ^= 0x80 >> n;
      0000DE AE 50 0A         [ 2]  300 	ldw	x, #0x500a
      0000E1 F6               [ 1]  301 	ld	a, (x)
      0000E2 6B 02            [ 1]  302 	ld	(0x02, sp), a
      0000E4 A6 80            [ 1]  303 	ld	a, #0x80
      0000E6 88               [ 1]  304 	push	a
      0000E7 C6u00u00         [ 1]  305 	ld	a, _n+0
      0000EA 27 05            [ 1]  306 	jreq	00110$
      0000EC                        307 00109$:
      0000EC 04 01            [ 1]  308 	srl	(1, sp)
      0000EE 4A               [ 1]  309 	dec	a
      0000EF 26 FB            [ 1]  310 	jrne	00109$
      0000F1                        311 00110$:
      0000F1 84               [ 1]  312 	pop	a
      0000F2 18 02            [ 1]  313 	xor	a, (0x02, sp)
      0000F4 AE 50 0A         [ 2]  314 	ldw	x, #0x500a
      0000F7 F7               [ 1]  315 	ld	(x), a
                                    316 ;	./run_fire_but01.c: 65: delay1(10000);
      0000F8 4B 10            [ 1]  317 	push	#0x10
      0000FA 4B 27            [ 1]  318 	push	#0x27
      0000FC 5F               [ 1]  319 	clrw	x
      0000FD 89               [ 2]  320 	pushw	x
      0000FE CDr00r2A         [ 4]  321 	call	_delay1
      000101 5B 04            [ 2]  322 	addw	sp, #4
                                    323 ;	./run_fire_but01.c: 66: GPIOC->ODR |= 0x80 >> n;
      000103 AE 50 0A         [ 2]  324 	ldw	x, #0x500a
      000106 F6               [ 1]  325 	ld	a, (x)
      000107 6B 01            [ 1]  326 	ld	(0x01, sp), a
      000109 A6 80            [ 1]  327 	ld	a, #0x80
      00010B 88               [ 1]  328 	push	a
      00010C C6u00u00         [ 1]  329 	ld	a, _n+0
      00010F 27 05            [ 1]  330 	jreq	00112$
      000111                        331 00111$:
      000111 04 01            [ 1]  332 	srl	(1, sp)
      000113 4A               [ 1]  333 	dec	a
      000114 26 FB            [ 1]  334 	jrne	00111$
      000116                        335 00112$:
      000116 84               [ 1]  336 	pop	a
      000117 1A 01            [ 1]  337 	or	a, (0x01, sp)
      000119 AE 50 0A         [ 2]  338 	ldw	x, #0x500a
      00011C F7               [ 1]  339 	ld	(x), a
                                    340 ;	./run_fire_but01.c: 68: n++;
      00011D C6u00u00         [ 1]  341 	ld	a, _n+0
      000120 4C               [ 1]  342 	inc	a
                                    343 ;	./run_fire_but01.c: 70: if ( n>=5 )
      000121 C7u00u00         [ 1]  344 	ld	_n+0, a
      000124 A1 05            [ 1]  345 	cp	a, #0x05
      000126 2F 04            [ 1]  346 	jrslt	00103$
                                    347 ;	./run_fire_but01.c: 73: n=0;
      000128 72 5Fu00u00      [ 1]  348 	clr	_n+0
      00012C                        349 00103$:
      00012C 5B 02            [ 2]  350 	addw	sp, #2
      00012E 81               [ 4]  351 	ret
                                    352 ;	./run_fire_but01.c: 77: uint32_t button ()
                                    353 ;	-----------------------------------------
                                    354 ;	 function button
                                    355 ;	-----------------------------------------
      00012F                        356 _button:
      00012F 52 08            [ 2]  357 	sub	sp, #8
                                    358 ;	./run_fire_but01.c: 80: if ((GPIOD->IDR & 0x10) ==0x00 && !bs && (delay(ms)-msb)>50) // фиксируем нажатие кнопки
      000131 AE 50 10         [ 2]  359 	ldw	x, #0x5010
      000134 F6               [ 1]  360 	ld	a, (x)
      000135 A5 10            [ 1]  361 	bcp	a, #0x10
      000137 26 4D            [ 1]  362 	jrne	00102$
      000139 72 01u00u09 02   [ 2]  363 	btjf	_bs+0, #0, 00136$
      00013E 20 46            [ 2]  364 	jra	00102$
      000140                        365 00136$:
      000140 3Bu00u04         [ 1]  366 	push	_ms+3
      000143 3Bu00u03         [ 1]  367 	push	_ms+2
      000146 3Bu00u02         [ 1]  368 	push	_ms+1
      000149 3Bu00u01         [ 1]  369 	push	_ms+0
      00014C CDr00r00         [ 4]  370 	call	_delay
      00014F 5B 04            [ 2]  371 	addw	sp, #4
      000151 51               [ 1]  372 	exgw	x, y
      000152 72 B2u00u07      [ 2]  373 	subw	y, _msb+2
      000156 17 07            [ 2]  374 	ldw	(0x07, sp), y
      000158 9F               [ 1]  375 	ld	a, xl
      000159 C2u00u06         [ 1]  376 	sbc	a, _msb+1
      00015C 6B 06            [ 1]  377 	ld	(0x06, sp), a
      00015E 9E               [ 1]  378 	ld	a, xh
      00015F C2u00u05         [ 1]  379 	sbc	a, _msb+0
      000162 6B 05            [ 1]  380 	ld	(0x05, sp), a
      000164 AE 00 32         [ 2]  381 	ldw	x, #0x0032
      000167 13 07            [ 2]  382 	cpw	x, (0x07, sp)
      000169 4F               [ 1]  383 	clr	a
      00016A 12 06            [ 1]  384 	sbc	a, (0x06, sp)
      00016C 4F               [ 1]  385 	clr	a
      00016D 12 05            [ 1]  386 	sbc	a, (0x05, sp)
      00016F 24 15            [ 1]  387 	jrnc	00102$
                                    388 ;	./run_fire_but01.c: 82: bs=1;
      000171 35 01u00u09      [ 1]  389 	mov	_bs+0, #0x01
                                    390 ;	./run_fire_but01.c: 83: msb=ms;
      000175 90 CEu00u03      [ 2]  391 	ldw	y, _ms+2
      000179 CEu00u01         [ 2]  392 	ldw	x, _ms+0
      00017C 90 CFu00u07      [ 2]  393 	ldw	_msb+2, y
      000180 CFu00u05         [ 2]  394 	ldw	_msb+0, x
                                    395 ;	./run_fire_but01.c: 84: b^=0;
      000183 C6u00u00         [ 1]  396 	ld	a, _b+0
      000186                        397 00102$:
                                    398 ;	./run_fire_but01.c: 87: if ((GPIOD->IDR & 0x10) ==0x10 && bs && (delay(ms)-msb)>50) // фиксируем отпускание  нажатие кнопки
      000186 AE 50 10         [ 2]  399 	ldw	x, #0x5010
      000189 F6               [ 1]  400 	ld	a, (x)
      00018A A4 10            [ 1]  401 	and	a, #0x10
      00018C A1 10            [ 1]  402 	cp	a, #0x10
      00018E 26 54            [ 1]  403 	jrne	00106$
      000190 72 00u00u09 02   [ 2]  404 	btjt	_bs+0, #0, 00141$
      000195 20 4D            [ 2]  405 	jra	00106$
      000197                        406 00141$:
      000197 3Bu00u04         [ 1]  407 	push	_ms+3
      00019A 3Bu00u03         [ 1]  408 	push	_ms+2
      00019D 3Bu00u02         [ 1]  409 	push	_ms+1
      0001A0 3Bu00u01         [ 1]  410 	push	_ms+0
      0001A3 CDr00r00         [ 4]  411 	call	_delay
      0001A6 5B 04            [ 2]  412 	addw	sp, #4
      0001A8 51               [ 1]  413 	exgw	x, y
      0001A9 72 B2u00u07      [ 2]  414 	subw	y, _msb+2
      0001AD 17 03            [ 2]  415 	ldw	(0x03, sp), y
      0001AF 9F               [ 1]  416 	ld	a, xl
      0001B0 C2u00u06         [ 1]  417 	sbc	a, _msb+1
      0001B3 6B 02            [ 1]  418 	ld	(0x02, sp), a
      0001B5 9E               [ 1]  419 	ld	a, xh
      0001B6 C2u00u05         [ 1]  420 	sbc	a, _msb+0
      0001B9 6B 01            [ 1]  421 	ld	(0x01, sp), a
      0001BB AE 00 32         [ 2]  422 	ldw	x, #0x0032
      0001BE 13 03            [ 2]  423 	cpw	x, (0x03, sp)
      0001C0 4F               [ 1]  424 	clr	a
      0001C1 12 02            [ 1]  425 	sbc	a, (0x02, sp)
      0001C3 4F               [ 1]  426 	clr	a
      0001C4 12 01            [ 1]  427 	sbc	a, (0x01, sp)
      0001C6 24 1C            [ 1]  428 	jrnc	00106$
                                    429 ;	./run_fire_but01.c: 89: bs=0;
      0001C8 72 5Fu00u09      [ 1]  430 	clr	_bs+0
                                    431 ;	./run_fire_but01.c: 90: msb=ms;
      0001CC 90 CEu00u03      [ 2]  432 	ldw	y, _ms+2
      0001D0 CEu00u01         [ 2]  433 	ldw	x, _ms+0
      0001D3 90 CFu00u07      [ 2]  434 	ldw	_msb+2, y
      0001D7 CFu00u05         [ 2]  435 	ldw	_msb+0, x
                                    436 ;	./run_fire_but01.c: 91: b^=1;
      0001DA C6u00u00         [ 1]  437 	ld	a, _b+0
      0001DD A0 01            [ 1]  438 	sub	a, #0x01
      0001DF 4F               [ 1]  439 	clr	a
      0001E0 49               [ 1]  440 	rlc	a
      0001E1 C7u00u00         [ 1]  441 	ld	_b+0, a
      0001E4                        442 00106$:
                                    443 ;	./run_fire_but01.c: 93: return b;
      0001E4 C6u00u00         [ 1]  444 	ld	a, _b+0
      0001E7 97               [ 1]  445 	ld	xl, a
      0001E8 49               [ 1]  446 	rlc	a
      0001E9 4F               [ 1]  447 	clr	a
      0001EA A2 00            [ 1]  448 	sbc	a, #0x00
      0001EC 95               [ 1]  449 	ld	xh, a
      0001ED 90 97            [ 1]  450 	ld	yl, a
      0001EF 90 95            [ 1]  451 	ld	yh, a
      0001F1 5B 08            [ 2]  452 	addw	sp, #8
      0001F3 81               [ 4]  453 	ret
                                    454 ;	./run_fire_but01.c: 97: int main( void )    //основная программа
                                    455 ;	-----------------------------------------
                                    456 ;	 function main
                                    457 ;	-----------------------------------------
      0001F4                        458 _main:
                                    459 ;	./run_fire_but01.c: 99: Pin();
      0001F4 CDr00r52         [ 4]  460 	call	_Pin
                                    461 ;	./run_fire_but01.c: 101: while(1)    //бесконечный цикл
      0001F7                        462 00105$:
                                    463 ;	./run_fire_but01.c: 103: button(); 
      0001F7 CDr01r2F         [ 4]  464 	call	_button
                                    465 ;	./run_fire_but01.c: 105: if (b==0) // проверяем нажатие кнопки
      0001FA 72 01u00u00 02   [ 2]  466 	btjf	_b+0, #0, 00117$
      0001FF 20 05            [ 2]  467 	jra	00102$
      000201                        468 00117$:
                                    469 ;	./run_fire_but01.c: 107: RunningUp();
      000201 CDr00r7F         [ 4]  470 	call	_RunningUp
      000204 20 F1            [ 2]  471 	jra	00105$
      000206                        472 00102$:
                                    473 ;	./run_fire_but01.c: 112: RunningDn();
      000206 CDr00rDC         [ 4]  474 	call	_RunningDn
      000209 20 EC            [ 2]  475 	jra	00105$
      00020B 81               [ 4]  476 	ret
                                    477 	.area CODE
                                    478 	.area INITIALIZER
      000000                        479 __xinit__n:
      000000 00                     480 	.db #0x00	;  0
      000001                        481 __xinit__ms:
      000001 00 00 00 00            482 	.byte #0x00,#0x00,#0x00,#0x00	; 0
      000005                        483 __xinit__msb:
      000005 00 00 00 00            484 	.byte #0x00,#0x00,#0x00,#0x00	; 0
      000009                        485 __xinit__bs:
      000009 00                     486 	.db #0x00	;  0
      00000A                        487 __xinit__bls:
      00000A 00                     488 	.db #0x00	;  0
                                    489 	.area CABS (ABS)
