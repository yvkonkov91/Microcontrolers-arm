                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 24 2016) (Linux)
                                      4 ; This file was generated Mon Jun  4 19:20:13 2018
                                      5 ;--------------------------------------------------------
                                      6 	.module run_fire_but02
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _RunningDn
                                     14 	.globl _RunningUp
                                     15 	.globl _adc1_r_cfg
                                     16 	.globl _clearPin
                                     17 	.globl _Pin
                                     18 	.globl _delay_ms
                                     19 	.globl _tim4_cfg
                                     20 	.globl _delay_interrupt
                                     21 	.globl _n
                                     22 	.globl _adc
                                     23 	.globl _count
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area DATA
      000000                         28 _count::
      000000                         29 	.ds 2
      000002                         30 _adc::
      000002                         31 	.ds 2
                                     32 ;--------------------------------------------------------
                                     33 ; ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area INITIALIZED
      000000                         36 _n::
      000000                         37 	.ds 1
                                     38 ;--------------------------------------------------------
                                     39 ; Stack segment in internal ram 
                                     40 ;--------------------------------------------------------
                                     41 	.area	SSEG
      000000                         42 __start__stack:
      000000                         43 	.ds	1
                                     44 
                                     45 ;--------------------------------------------------------
                                     46 ; absolute external ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area DABS (ABS)
                                     49 ;--------------------------------------------------------
                                     50 ; interrupt vector 
                                     51 ;--------------------------------------------------------
                                     52 	.area HOME
      000000                         53 __interrupt_vect:
      000000 82v00u00u00             54 	int s_GSINIT ;reset
      000004 82 00 00 00             55 	int 0x0000 ;trap
      000008 82 00 00 00             56 	int 0x0000 ;int0
      00000C 82 00 00 00             57 	int 0x0000 ;int1
      000010 82 00 00 00             58 	int 0x0000 ;int2
      000014 82 00 00 00             59 	int 0x0000 ;int3
      000018 82 00 00 00             60 	int 0x0000 ;int4
      00001C 82 00 00 00             61 	int 0x0000 ;int5
      000020 82 00 00 00             62 	int 0x0000 ;int6
      000024 82 00 00 00             63 	int 0x0000 ;int7
      000028 82 00 00 00             64 	int 0x0000 ;int8
      00002C 82 00 00 00             65 	int 0x0000 ;int9
      000030 82 00 00 00             66 	int 0x0000 ;int10
      000034 82 00 00 00             67 	int 0x0000 ;int11
      000038 82 00 00 00             68 	int 0x0000 ;int12
      00003C 82 00 00 00             69 	int 0x0000 ;int13
      000040 82 00 00 00             70 	int 0x0000 ;int14
      000044 82 00 00 00             71 	int 0x0000 ;int15
      000048 82 00 00 00             72 	int 0x0000 ;int16
      00004C 82 00 00 00             73 	int 0x0000 ;int17
      000050 82 00 00 00             74 	int 0x0000 ;int18
      000054 82 00 00 00             75 	int 0x0000 ;int19
      000058 82 00 00 00             76 	int 0x0000 ;int20
      00005C 82 00 00 00             77 	int 0x0000 ;int21
      000060 82 00 00 00             78 	int 0x0000 ;int22
      000064 82v00u00u00             79 	int _delay_interrupt ;int23
      000068 82 00 00 00             80 	int 0x0000 ;int24
      00006C 82 00 00 00             81 	int 0x0000 ;int25
      000070 82 00 00 00             82 	int 0x0000 ;int26
      000074 82 00 00 00             83 	int 0x0000 ;int27
      000078 82 00 00 00             84 	int 0x0000 ;int28
      00007C 82 00 00 00             85 	int 0x0000 ;int29
                                     86 ;--------------------------------------------------------
                                     87 ; global & static initialisations
                                     88 ;--------------------------------------------------------
                                     89 	.area HOME
                                     90 	.area GSINIT
                                     91 	.area GSFINAL
                                     92 	.area GSINIT
      000000                         93 __sdcc_gs_init_startup:
      000000                         94 __sdcc_init_data:
                                     95 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]   96 	ldw x, #l_DATA
      000003 27 07            [ 1]   97 	jreq	00002$
      000005                         98 00001$:
      000005 72 4FuFFuFF      [ 1]   99 	clr (s_DATA - 1, x)
      000009 5A               [ 2]  100 	decw x
      00000A 26 F9            [ 1]  101 	jrne	00001$
      00000C                        102 00002$:
      00000C AEr00r00         [ 2]  103 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]  104 	jreq	00004$
      000011                        105 00003$:
      000011 D6uFFuFF         [ 1]  106 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]  107 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]  108 	decw	x
      000018 26 F7            [ 1]  109 	jrne	00003$
      00001A                        110 00004$:
                                    111 ; stm8_genXINIT() end
                                    112 	.area GSFINAL
      000000 CCr00r80         [ 2]  113 	jp	__sdcc_program_startup
                                    114 ;--------------------------------------------------------
                                    115 ; Home
                                    116 ;--------------------------------------------------------
                                    117 	.area HOME
                                    118 	.area HOME
      000080                        119 __sdcc_program_startup:
      000080 CCr01r6C         [ 2]  120 	jp	_main
                                    121 ;	return from main will return to caller
                                    122 ;--------------------------------------------------------
                                    123 ; code
                                    124 ;--------------------------------------------------------
                                    125 	.area CODE
                                    126 ;	../lib/lib1/inc/stm8s_delay.h: 3: extern void delay_interrupt(void) __interrupt(23) //обработчик прерывания функции delay_ms таймера TIM4
                                    127 ;	-----------------------------------------
                                    128 ;	 function delay_interrupt
                                    129 ;	-----------------------------------------
      000000                        130 _delay_interrupt:
                                    131 ;	../lib/lib1/inc/stm8s_delay.h: 5: if(count)
      000000 CEu00u00         [ 2]  132 	ldw	x, _count+0
      000003 27 07            [ 1]  133 	jreq	00102$
                                    134 ;	../lib/lib1/inc/stm8s_delay.h: 6: count--;    //дикримент переменной count
      000005 CEu00u00         [ 2]  135 	ldw	x, _count+0
      000008 5A               [ 2]  136 	decw	x
      000009 CFu00u00         [ 2]  137 	ldw	_count+0, x
      00000C                        138 00102$:
                                    139 ;	../lib/lib1/inc/stm8s_delay.h: 7: TIM4->SR1   = 0x00; ////событие обновления не происходило
      00000C 35 00 53 44      [ 1]  140 	mov	0x5344+0, #0x00
      000010 80               [11]  141 	iret
                                    142 ;	../lib/lib1/inc/stm8s_delay.h: 9: void tim4_cfg() //настройка таймера
                                    143 ;	-----------------------------------------
                                    144 ;	 function tim4_cfg
                                    145 ;	-----------------------------------------
      000011                        146 _tim4_cfg:
                                    147 ;	../lib/lib1/inc/stm8s_delay.h: 11: TIM4->SR1   = 0x1;   //событие обновления не происходило
      000011 35 01 53 44      [ 1]  148 	mov	0x5344+0, #0x01
                                    149 ;	../lib/lib1/inc/stm8s_delay.h: 12: TIM4->IER  |= 1;    // прерывания по обновлению включены
      000015 72 10 53 43      [ 1]  150 	bset	0x5343, #0
                                    151 ;	../lib/lib1/inc/stm8s_delay.h: 13: TIM4->PSCR |= 128; // установка предделителя 128
      000019 72 1E 53 47      [ 1]  152 	bset	0x5347, #7
                                    153 ;	../lib/lib1/inc/stm8s_delay.h: 14: TIM4->ARR  |= 124;    // значение автоперезагрузки
      00001D AE 53 48         [ 2]  154 	ldw	x, #0x5348
      000020 F6               [ 1]  155 	ld	a, (x)
      000021 AA 7C            [ 1]  156 	or	a, #0x7c
      000023 F7               [ 1]  157 	ld	(x), a
      000024 81               [ 4]  158 	ret
                                    159 ;	../lib/lib1/inc/stm8s_delay.h: 16: void delay_ms(uint16_t ms) //функция выдержки времени
                                    160 ;	-----------------------------------------
                                    161 ;	 function delay_ms
                                    162 ;	-----------------------------------------
      000025                        163 _delay_ms:
                                    164 ;	../lib/lib1/inc/stm8s_delay.h: 18: TIM4->CR1  = 0x0;
      000025 35 00 53 40      [ 1]  165 	mov	0x5340+0, #0x00
                                    166 ;	../lib/lib1/inc/stm8s_delay.h: 20: count = ms;
      000029 7B 04            [ 1]  167 	ld	a, (0x04, sp)
      00002B C7u00u01         [ 1]  168 	ld	_count+1, a
      00002E 7B 03            [ 1]  169 	ld	a, (0x03, sp)
      000030 C7u00u00         [ 1]  170 	ld	_count+0, a
                                    171 ;	../lib/lib1/inc/stm8s_delay.h: 21: TIM4->CR1  = 0x1;
      000033 35 01 53 40      [ 1]  172 	mov	0x5340+0, #0x01
                                    173 ;	../lib/lib1/inc/stm8s_delay.h: 22: while(count);
      000037                        174 00101$:
      000037 CEu00u00         [ 2]  175 	ldw	x, _count+0
      00003A 26 FB            [ 1]  176 	jrne	00101$
      00003C 81               [ 4]  177 	ret
                                    178 ;	./run_fire_but02.c: 15: void Pin()  // настройка портов
                                    179 ;	-----------------------------------------
                                    180 ;	 function Pin
                                    181 ;	-----------------------------------------
      00003D                        182 _Pin:
                                    183 ;	./run_fire_but02.c: 18: GPIOC->DDR |= 0b11111000;
      00003D AE 50 0C         [ 2]  184 	ldw	x, #0x500c
      000040 F6               [ 1]  185 	ld	a, (x)
      000041 AA F8            [ 1]  186 	or	a, #0xf8
      000043 F7               [ 1]  187 	ld	(x), a
                                    188 ;	./run_fire_but02.c: 19: GPIOC->CR1 |= 0b11111000;
      000044 AE 50 0D         [ 2]  189 	ldw	x, #0x500d
      000047 F6               [ 1]  190 	ld	a, (x)
      000048 AA F8            [ 1]  191 	or	a, #0xf8
      00004A F7               [ 1]  192 	ld	(x), a
                                    193 ;	./run_fire_but02.c: 20: GPIOC->ODR |= 0b11111000;
      00004B AE 50 0A         [ 2]  194 	ldw	x, #0x500a
      00004E F6               [ 1]  195 	ld	a, (x)
      00004F AA F8            [ 1]  196 	or	a, #0xf8
      000051 F7               [ 1]  197 	ld	(x), a
                                    198 ;	./run_fire_but02.c: 22: GPIOD->DDR |= (0<<2);   //устанавливаем на выход пин 5 порта D
      000052 AE 50 11         [ 2]  199 	ldw	x, #0x5011
      000055 F6               [ 1]  200 	ld	a, (x)
      000056 AE 50 11         [ 2]  201 	ldw	x, #0x5011
      000059 F7               [ 1]  202 	ld	(x), a
                                    203 ;	./run_fire_but02.c: 23: GPIOD->CR1 |= (0<<2);   //устанавливаем подтяжку пин 5 порта D
      00005A AE 50 12         [ 2]  204 	ldw	x, #0x5012
      00005D F6               [ 1]  205 	ld	a, (x)
      00005E AE 50 12         [ 2]  206 	ldw	x, #0x5012
      000061 F7               [ 1]  207 	ld	(x), a
                                    208 ;	./run_fire_but02.c: 24: GPIOD->CR2 |= (0<<2);   //минимальная скорость на выход / без прерывания на вход
      000062 AE 50 13         [ 2]  209 	ldw	x, #0x5013
      000065 F6               [ 1]  210 	ld	a, (x)
      000066 AE 50 13         [ 2]  211 	ldw	x, #0x5013
      000069 F7               [ 1]  212 	ld	(x), a
                                    213 ;	./run_fire_but02.c: 27: GPIOB->DDR |= 0b00000000;
      00006A AE 50 07         [ 2]  214 	ldw	x, #0x5007
      00006D F6               [ 1]  215 	ld	a, (x)
      00006E AE 50 07         [ 2]  216 	ldw	x, #0x5007
      000071 F7               [ 1]  217 	ld	(x), a
                                    218 ;	./run_fire_but02.c: 28: GPIOB->CR1 |= 0b00100000;
      000072 AE 50 08         [ 2]  219 	ldw	x, #0x5008
      000075 F6               [ 1]  220 	ld	a, (x)
      000076 AA 20            [ 1]  221 	or	a, #0x20
      000078 F7               [ 1]  222 	ld	(x), a
                                    223 ;	./run_fire_but02.c: 29: GPIOB->CR2 |= 0b00000000;
      000079 AE 50 09         [ 2]  224 	ldw	x, #0x5009
      00007C F6               [ 1]  225 	ld	a, (x)
      00007D AE 50 09         [ 2]  226 	ldw	x, #0x5009
      000080 F7               [ 1]  227 	ld	(x), a
      000081 81               [ 4]  228 	ret
                                    229 ;	./run_fire_but02.c: 33: void clearPin()
                                    230 ;	-----------------------------------------
                                    231 ;	 function clearPin
                                    232 ;	-----------------------------------------
      000082                        233 _clearPin:
                                    234 ;	./run_fire_but02.c: 35: GPIOC->ODR = 0b11111000;
      000082 35 F8 50 0A      [ 1]  235 	mov	0x500a+0, #0xf8
      000086 81               [ 4]  236 	ret
                                    237 ;	./run_fire_but02.c: 38: uint16_t adc1_r_cfg(uint8_t channel) 
                                    238 ;	-----------------------------------------
                                    239 ;	 function adc1_r_cfg
                                    240 ;	-----------------------------------------
      000087                        241 _adc1_r_cfg:
      000087 52 03            [ 2]  242 	sub	sp, #3
                                    243 ;	./run_fire_but02.c: 42: CLK->PCKENR2 |= 0b00001000; //тактирование модуля ADC1
      000089 AE 50 CA         [ 2]  244 	ldw	x, #0x50ca
      00008C F6               [ 1]  245 	ld	a, (x)
      00008D AA 08            [ 1]  246 	or	a, #0x08
      00008F F7               [ 1]  247 	ld	(x), a
                                    248 ;	./run_fire_but02.c: 43: ADC1->CSR |= ((0x0F)&channel); //выбор канала
      000090 AE 54 00         [ 2]  249 	ldw	x, #0x5400
      000093 F6               [ 1]  250 	ld	a, (x)
      000094 6B 03            [ 1]  251 	ld	(0x03, sp), a
      000096 7B 06            [ 1]  252 	ld	a, (0x06, sp)
      000098 A4 0F            [ 1]  253 	and	a, #0x0f
      00009A 1A 03            [ 1]  254 	or	a, (0x03, sp)
      00009C AE 54 00         [ 2]  255 	ldw	x, #0x5400
      00009F F7               [ 1]  256 	ld	(x), a
                                    257 ;	./run_fire_but02.c: 44: ADC1->CR2 |= (1<<3);   // номер канала преобразования АЦП
      0000A0 AE 54 02         [ 2]  258 	ldw	x, #0x5402
      0000A3 F6               [ 1]  259 	ld	a, (x)
      0000A4 AA 08            [ 1]  260 	or	a, #0x08
      0000A6 F7               [ 1]  261 	ld	(x), a
                                    262 ;	./run_fire_but02.c: 45: ADC1->CR1 |= (1<<0);   //включение АЦП 
      0000A7 72 10 54 01      [ 1]  263 	bset	0x5401, #0
                                    264 ;	./run_fire_but02.c: 46: ADC1->CR1 |= (0<<1);   // одиночное преобразование
      0000AB AE 54 01         [ 2]  265 	ldw	x, #0x5401
      0000AE F6               [ 1]  266 	ld	a, (x)
      0000AF AE 54 01         [ 2]  267 	ldw	x, #0x5401
      0000B2 F7               [ 1]  268 	ld	(x), a
                                    269 ;	./run_fire_but02.c: 47: while(((ADC1->CSR)&(1<<7))== 0);   // пока не завершено преобразование
      0000B3                        270 00101$:
      0000B3 AE 54 00         [ 2]  271 	ldw	x, #0x5400
      0000B6 F6               [ 1]  272 	ld	a, (x)
      0000B7 4D               [ 1]  273 	tnz	a
      0000B8 2A F9            [ 1]  274 	jrpl	00101$
                                    275 ;	./run_fire_but02.c: 48: val |= (uint8_t)ADC1->DRL;    //запись результата в переменную val из нижнего регистра
      0000BA AE 54 05         [ 2]  276 	ldw	x, #0x5405
      0000BD F6               [ 1]  277 	ld	a, (x)
      0000BE 5F               [ 1]  278 	clrw	x
      0000BF 97               [ 1]  279 	ld	xl, a
      0000C0 1F 01            [ 2]  280 	ldw	(0x01, sp), x
                                    281 ;	./run_fire_but02.c: 49: val |= (uint8_t)ADC1->DRH<<8;    //запись результата в переменную val из верхнего регистра
      0000C2 AE 54 04         [ 2]  282 	ldw	x, #0x5404
      0000C5 F6               [ 1]  283 	ld	a, (x)
      0000C6 95               [ 1]  284 	ld	xh, a
      0000C7 4F               [ 1]  285 	clr	a
      0000C8 4F               [ 1]  286 	clr	a
      0000C9 1A 02            [ 1]  287 	or	a, (0x02, sp)
      0000CB 02               [ 1]  288 	rlwa	x
      0000CC 1A 01            [ 1]  289 	or	a, (0x01, sp)
      0000CE 95               [ 1]  290 	ld	xh, a
                                    291 ;	./run_fire_but02.c: 50: ADC1->CR1 &= ~(1<<0); // ADC Stop Conversion
      0000CF 90 AE 54 01      [ 2]  292 	ldw	y, #0x5401
      0000D3 90 F6            [ 1]  293 	ld	a, (y)
      0000D5 A4 FE            [ 1]  294 	and	a, #0xfe
      0000D7 90 F7            [ 1]  295 	ld	(y), a
                                    296 ;	./run_fire_but02.c: 51: val &= 0x03ff;
      0000D9 9E               [ 1]  297 	ld	a, xh
      0000DA A4 03            [ 1]  298 	and	a, #0x03
      0000DC 95               [ 1]  299 	ld	xh, a
                                    300 ;	./run_fire_but02.c: 52: return val;
      0000DD 5B 03            [ 2]  301 	addw	sp, #3
      0000DF 81               [ 4]  302 	ret
                                    303 ;	./run_fire_but02.c: 55: void RunningUp()
                                    304 ;	-----------------------------------------
                                    305 ;	 function RunningUp
                                    306 ;	-----------------------------------------
      0000E0                        307 _RunningUp:
      0000E0 52 02            [ 2]  308 	sub	sp, #2
                                    309 ;	./run_fire_but02.c: 57: if(n<12)
      0000E2 C6u00u00         [ 1]  310 	ld	a, _n+0
      0000E5 A1 0C            [ 1]  311 	cp	a, #0x0c
      0000E7 24 49            [ 1]  312 	jrnc	00102$
                                    313 ;	./run_fire_but02.c: 59: GPIOC->ODR |= 0b01110111;
      0000E9 AE 50 0A         [ 2]  314 	ldw	x, #0x500a
      0000EC F6               [ 1]  315 	ld	a, (x)
      0000ED AA 77            [ 1]  316 	or	a, #0x77
      0000EF F7               [ 1]  317 	ld	(x), a
                                    318 ;	./run_fire_but02.c: 60: GPIOC->ODR ^= 0b10101111;
      0000F0 AE 50 0A         [ 2]  319 	ldw	x, #0x500a
      0000F3 F6               [ 1]  320 	ld	a, (x)
      0000F4 A8 AF            [ 1]  321 	xor	a, #0xaf
      0000F6 F7               [ 1]  322 	ld	(x), a
                                    323 ;	./run_fire_but02.c: 61: delay_ms(adc);
      0000F7 3Bu00u03         [ 1]  324 	push	_adc+1
      0000FA 3Bu00u02         [ 1]  325 	push	_adc+0
      0000FD CDr00r25         [ 4]  326 	call	_delay_ms
      000100 5B 02            [ 2]  327 	addw	sp, #2
                                    328 ;	./run_fire_but02.c: 62: GPIOC->ODR |= 0b10101111;
      000102 AE 50 0A         [ 2]  329 	ldw	x, #0x500a
      000105 F6               [ 1]  330 	ld	a, (x)
      000106 AA AF            [ 1]  331 	or	a, #0xaf
      000108 F7               [ 1]  332 	ld	(x), a
                                    333 ;	./run_fire_but02.c: 63: GPIOC->ODR ^= 0b01110111;
      000109 AE 50 0A         [ 2]  334 	ldw	x, #0x500a
      00010C F6               [ 1]  335 	ld	a, (x)
      00010D A8 77            [ 1]  336 	xor	a, #0x77
      00010F F7               [ 1]  337 	ld	(x), a
                                    338 ;	./run_fire_but02.c: 64: delay_ms(adc-n*64);
      000110 5F               [ 1]  339 	clrw	x
      000111 C6u00u00         [ 1]  340 	ld	a, _n+0
      000114 97               [ 1]  341 	ld	xl, a
      000115 58               [ 2]  342 	sllw	x
      000116 58               [ 2]  343 	sllw	x
      000117 58               [ 2]  344 	sllw	x
      000118 58               [ 2]  345 	sllw	x
      000119 58               [ 2]  346 	sllw	x
      00011A 58               [ 2]  347 	sllw	x
      00011B 1F 01            [ 2]  348 	ldw	(0x01, sp), x
      00011D CEu00u02         [ 2]  349 	ldw	x, _adc+0
      000120 72 F0 01         [ 2]  350 	subw	x, (0x01, sp)
      000123 89               [ 2]  351 	pushw	x
      000124 CDr00r25         [ 4]  352 	call	_delay_ms
      000127 5B 02            [ 2]  353 	addw	sp, #2
                                    354 ;	./run_fire_but02.c: 65: n++;
      000129 C6u00u00         [ 1]  355 	ld	a, _n+0
      00012C 4C               [ 1]  356 	inc	a
      00012D C7u00u00         [ 1]  357 	ld	_n+0, a
      000130 20 04            [ 2]  358 	jra	00104$
      000132                        359 00102$:
                                    360 ;	./run_fire_but02.c: 67: else GPIOC->ODR =0b11011000;
      000132 35 D8 50 0A      [ 1]  361 	mov	0x500a+0, #0xd8
      000136                        362 00104$:
      000136 5B 02            [ 2]  363 	addw	sp, #2
      000138 81               [ 4]  364 	ret
                                    365 ;	./run_fire_but02.c: 70: void RunningDn()
                                    366 ;	-----------------------------------------
                                    367 ;	 function RunningDn
                                    368 ;	-----------------------------------------
      000139                        369 _RunningDn:
      000139 52 02            [ 2]  370 	sub	sp, #2
                                    371 ;	./run_fire_but02.c: 72: if(n<12)
      00013B C6u00u00         [ 1]  372 	ld	a, _n+0
      00013E A1 0C            [ 1]  373 	cp	a, #0x0c
      000140 24 27            [ 1]  374 	jrnc	00103$
                                    375 ;	./run_fire_but02.c: 74: GPIOC->ODR ^= 0b11011000;
      000142 AE 50 0A         [ 2]  376 	ldw	x, #0x500a
      000145 F6               [ 1]  377 	ld	a, (x)
      000146 A8 D8            [ 1]  378 	xor	a, #0xd8
      000148 F7               [ 1]  379 	ld	(x), a
                                    380 ;	./run_fire_but02.c: 75: delay_ms(adc-n*64);
      000149 5F               [ 1]  381 	clrw	x
      00014A C6u00u00         [ 1]  382 	ld	a, _n+0
      00014D 97               [ 1]  383 	ld	xl, a
      00014E 58               [ 2]  384 	sllw	x
      00014F 58               [ 2]  385 	sllw	x
      000150 58               [ 2]  386 	sllw	x
      000151 58               [ 2]  387 	sllw	x
      000152 58               [ 2]  388 	sllw	x
      000153 58               [ 2]  389 	sllw	x
      000154 1F 01            [ 2]  390 	ldw	(0x01, sp), x
      000156 CEu00u02         [ 2]  391 	ldw	x, _adc+0
      000159 72 F0 01         [ 2]  392 	subw	x, (0x01, sp)
      00015C 89               [ 2]  393 	pushw	x
      00015D CDr00r25         [ 4]  394 	call	_delay_ms
      000160 5B 02            [ 2]  395 	addw	sp, #2
                                    396 ;	./run_fire_but02.c: 77: n++;
      000162 C6u00u00         [ 1]  397 	ld	a, _n+0
      000165 4C               [ 1]  398 	inc	a
      000166 C7u00u00         [ 1]  399 	ld	_n+0, a
      000169                        400 00103$:
      000169 5B 02            [ 2]  401 	addw	sp, #2
      00016B 81               [ 4]  402 	ret
                                    403 ;	./run_fire_but02.c: 82: int main( void )    //основная программа
                                    404 ;	-----------------------------------------
                                    405 ;	 function main
                                    406 ;	-----------------------------------------
      00016C                        407 _main:
                                    408 ;	./run_fire_but02.c: 84: Pin();
      00016C CDr00r3D         [ 4]  409 	call	_Pin
                                    410 ;	./run_fire_but02.c: 85: tim4_cfg();
      00016F CDr00r11         [ 4]  411 	call	_tim4_cfg
                                    412 ;	./run_fire_but02.c: 86: rim();
      000172 9A               [ 1]  413 	rim 
                                    414 ;	./run_fire_but02.c: 87: clearPin();
      000173 CDr00r82         [ 4]  415 	call	_clearPin
                                    416 ;	./run_fire_but02.c: 88: adc=(adc1_r_cfg(3))*10;
      000176 4B 03            [ 1]  417 	push	#0x03
      000178 CDr00r87         [ 4]  418 	call	_adc1_r_cfg
      00017B 84               [ 1]  419 	pop	a
      00017C 89               [ 2]  420 	pushw	x
      00017D 4B 0A            [ 1]  421 	push	#0x0a
      00017F 4B 00            [ 1]  422 	push	#0x00
      000181 CDr00r00         [ 4]  423 	call	__mulint
      000184 5B 04            [ 2]  424 	addw	sp, #4
      000186 CFu00u02         [ 2]  425 	ldw	_adc+0, x
                                    426 ;	./run_fire_but02.c: 90: while(1)    //бесконечный цикл
      000189                        427 00105$:
                                    428 ;	./run_fire_but02.c: 93: if(GPIOB->IDR==0)
      000189 AE 50 06         [ 2]  429 	ldw	x, #0x5006
      00018C F6               [ 1]  430 	ld	a, (x)
      00018D 4D               [ 1]  431 	tnz	a
      00018E 26 05            [ 1]  432 	jrne	00102$
                                    433 ;	./run_fire_but02.c: 95: RunningUp();
      000190 CDr00rE0         [ 4]  434 	call	_RunningUp
      000193 20 F4            [ 2]  435 	jra	00105$
      000195                        436 00102$:
                                    437 ;	./run_fire_but02.c: 98: RunningDn();
      000195 CDr01r39         [ 4]  438 	call	_RunningDn
      000198 20 EF            [ 2]  439 	jra	00105$
      00019A 81               [ 4]  440 	ret
                                    441 	.area CODE
                                    442 	.area INITIALIZER
      000000                        443 __xinit__n:
      000000 00                     444 	.db #0x00	; 0
                                    445 	.area CABS (ABS)
